
TestFSM.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002ef4  00080000  00080000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000974  20070000  00082ef4  00010000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  2 .bss          00000208  20070974  00083868  00010974  2**2
                  ALLOC
  3 .stack        00002004  20070b7c  00083a70  00010974  2**0
                  ALLOC
  4 .ARM.attributes 00000029  00000000  00000000  00010974  2**0
                  CONTENTS, READONLY
  5 .comment      0000005b  00000000  00000000  0001099d  2**0
                  CONTENTS, READONLY
  6 .debug_info   0000f393  00000000  00000000  000109f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000027ab  00000000  00000000  0001fd8b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000060e8  00000000  00000000  00022536  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000b68  00000000  00000000  0002861e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000a30  00000000  00000000  00029186  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00019611  00000000  00000000  00029bb6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000fab9  00000000  00000000  000431c7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0006bbfb  00000000  00000000  00052c80  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00001f94  00000000  00000000  000be87c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <_sfixed>:
   80000:	20072b80 	.word	0x20072b80
   80004:	00081879 	.word	0x00081879
   80008:	00081875 	.word	0x00081875
   8000c:	00081875 	.word	0x00081875
   80010:	00081875 	.word	0x00081875
   80014:	00081875 	.word	0x00081875
   80018:	00081875 	.word	0x00081875
	...
   8002c:	00081875 	.word	0x00081875
   80030:	00081875 	.word	0x00081875
   80034:	00000000 	.word	0x00000000
   80038:	00081875 	.word	0x00081875
   8003c:	00081875 	.word	0x00081875
   80040:	00081875 	.word	0x00081875
   80044:	00081875 	.word	0x00081875
   80048:	00081875 	.word	0x00081875
   8004c:	00081875 	.word	0x00081875
   80050:	00081875 	.word	0x00081875
   80054:	00081875 	.word	0x00081875
   80058:	00081875 	.word	0x00081875
   8005c:	00081875 	.word	0x00081875
   80060:	00081875 	.word	0x00081875
   80064:	00081875 	.word	0x00081875
   80068:	00000000 	.word	0x00000000
   8006c:	000816e5 	.word	0x000816e5
   80070:	000816f9 	.word	0x000816f9
   80074:	0008170d 	.word	0x0008170d
   80078:	00081721 	.word	0x00081721
	...
   80084:	000801b5 	.word	0x000801b5
   80088:	00081875 	.word	0x00081875
   8008c:	00081875 	.word	0x00081875
   80090:	00081875 	.word	0x00081875
   80094:	00081875 	.word	0x00081875
   80098:	00081875 	.word	0x00081875
   8009c:	00081875 	.word	0x00081875
   800a0:	00081875 	.word	0x00081875
   800a4:	00000000 	.word	0x00000000
   800a8:	00081875 	.word	0x00081875
   800ac:	00081875 	.word	0x00081875
   800b0:	00081875 	.word	0x00081875
   800b4:	00081875 	.word	0x00081875
   800b8:	00081875 	.word	0x00081875
   800bc:	00081875 	.word	0x00081875
   800c0:	00081875 	.word	0x00081875
   800c4:	00081875 	.word	0x00081875
   800c8:	00081875 	.word	0x00081875
   800cc:	00081875 	.word	0x00081875
   800d0:	00081875 	.word	0x00081875
   800d4:	00081875 	.word	0x00081875
   800d8:	00081875 	.word	0x00081875
   800dc:	00081875 	.word	0x00081875
   800e0:	00081875 	.word	0x00081875
   800e4:	00081875 	.word	0x00081875
   800e8:	00081875 	.word	0x00081875
   800ec:	00081875 	.word	0x00081875
   800f0:	00081875 	.word	0x00081875

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20070974 	.word	0x20070974
   80110:	00000000 	.word	0x00000000
   80114:	00082ef4 	.word	0x00082ef4

00080118 <frame_dummy>:
   80118:	b508      	push	{r3, lr}
   8011a:	4b06      	ldr	r3, [pc, #24]	; (80134 <frame_dummy+0x1c>)
   8011c:	b11b      	cbz	r3, 80126 <frame_dummy+0xe>
   8011e:	4806      	ldr	r0, [pc, #24]	; (80138 <frame_dummy+0x20>)
   80120:	4906      	ldr	r1, [pc, #24]	; (8013c <frame_dummy+0x24>)
   80122:	f3af 8000 	nop.w
   80126:	4806      	ldr	r0, [pc, #24]	; (80140 <frame_dummy+0x28>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b113      	cbz	r3, 80132 <frame_dummy+0x1a>
   8012c:	4b05      	ldr	r3, [pc, #20]	; (80144 <frame_dummy+0x2c>)
   8012e:	b103      	cbz	r3, 80132 <frame_dummy+0x1a>
   80130:	4798      	blx	r3
   80132:	bd08      	pop	{r3, pc}
   80134:	00000000 	.word	0x00000000
   80138:	00082ef4 	.word	0x00082ef4
   8013c:	20070978 	.word	0x20070978
   80140:	00082ef4 	.word	0x00082ef4
   80144:	00000000 	.word	0x00000000

00080148 <_read>:
   80148:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8014c:	460c      	mov	r4, r1
   8014e:	4690      	mov	r8, r2
   80150:	b960      	cbnz	r0, 8016c <_read+0x24>
   80152:	2a00      	cmp	r2, #0
   80154:	dd0e      	ble.n	80174 <_read+0x2c>
   80156:	188f      	adds	r7, r1, r2
   80158:	4e09      	ldr	r6, [pc, #36]	; (80180 <_read+0x38>)
   8015a:	4d0a      	ldr	r5, [pc, #40]	; (80184 <_read+0x3c>)
   8015c:	6830      	ldr	r0, [r6, #0]
   8015e:	4621      	mov	r1, r4
   80160:	682b      	ldr	r3, [r5, #0]
   80162:	4798      	blx	r3
   80164:	3401      	adds	r4, #1
   80166:	42bc      	cmp	r4, r7
   80168:	d1f8      	bne.n	8015c <_read+0x14>
   8016a:	e006      	b.n	8017a <_read+0x32>
   8016c:	f04f 30ff 	mov.w	r0, #4294967295
   80170:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80174:	2000      	movs	r0, #0
   80176:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8017a:	4640      	mov	r0, r8
   8017c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80180:	20070af8 	.word	0x20070af8
   80184:	20070ad8 	.word	0x20070ad8

00080188 <usart_write>:
   80188:	6943      	ldr	r3, [r0, #20]
   8018a:	f013 0f02 	tst.w	r3, #2
   8018e:	bf1d      	ittte	ne
   80190:	f3c1 0108 	ubfxne	r1, r1, #0, #9
   80194:	61c1      	strne	r1, [r0, #28]
   80196:	2000      	movne	r0, #0
   80198:	2001      	moveq	r0, #1
   8019a:	4770      	bx	lr

0008019c <usart_read>:
   8019c:	6943      	ldr	r3, [r0, #20]
   8019e:	f013 0f01 	tst.w	r3, #1
   801a2:	d005      	beq.n	801b0 <usart_read+0x14>
   801a4:	6983      	ldr	r3, [r0, #24]
   801a6:	f3c3 0308 	ubfx	r3, r3, #0, #9
   801aa:	600b      	str	r3, [r1, #0]
   801ac:	2000      	movs	r0, #0
   801ae:	4770      	bx	lr
   801b0:	2001      	movs	r0, #1
   801b2:	4770      	bx	lr

000801b4 <USART0_Handler>:
#if SAMD || SAMR21
void USART_HOST_ISR_VECT(uint8_t instance)
#else
USART_HOST_ISR_VECT()
#endif
{
   801b4:	b500      	push	{lr}
   801b6:	b083      	sub	sp, #12
	uint8_t temp;
#if SAMD || SAMR21
	usart_serial_read_packet(&host_uart_module, &temp, 1);
#else
	usart_serial_read_packet(USART_HOST, &temp, 1);
   801b8:	4811      	ldr	r0, [pc, #68]	; (80200 <USART0_Handler+0x4c>)
   801ba:	f10d 0107 	add.w	r1, sp, #7
   801be:	2201      	movs	r2, #1
   801c0:	4b10      	ldr	r3, [pc, #64]	; (80204 <USART0_Handler+0x50>)
   801c2:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
   801c4:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   801c6:	f3bf 8f5f 	dmb	sy
#endif

	/* Introducing critical section to avoid buffer corruption. */
	cpu_irq_disable();
   801ca:	2200      	movs	r2, #0
   801cc:	4b0e      	ldr	r3, [pc, #56]	; (80208 <USART0_Handler+0x54>)
   801ce:	701a      	strb	r2, [r3, #0]

	/* The number of data in the receive buffer is incremented and the
	 * buffer is updated. */

	serial_rx_buf[serial_rx_buf_tail] = temp;
   801d0:	4b0e      	ldr	r3, [pc, #56]	; (8020c <USART0_Handler+0x58>)
   801d2:	781b      	ldrb	r3, [r3, #0]
   801d4:	f89d 1007 	ldrb.w	r1, [sp, #7]
   801d8:	4a0d      	ldr	r2, [pc, #52]	; (80210 <USART0_Handler+0x5c>)
   801da:	54d1      	strb	r1, [r2, r3]

	if ((SERIAL_RX_BUF_SIZE_HOST - 1) == serial_rx_buf_tail) {
   801dc:	2b9b      	cmp	r3, #155	; 0x9b
   801de:	d103      	bne.n	801e8 <USART0_Handler+0x34>
		/* Reached the end of buffer, revert back to beginning of
		 * buffer. */
		serial_rx_buf_tail = 0x00;
   801e0:	2200      	movs	r2, #0
   801e2:	4b0a      	ldr	r3, [pc, #40]	; (8020c <USART0_Handler+0x58>)
   801e4:	701a      	strb	r2, [r3, #0]
   801e6:	e002      	b.n	801ee <USART0_Handler+0x3a>
	} else {
		serial_rx_buf_tail++;
   801e8:	3301      	adds	r3, #1
   801ea:	4a08      	ldr	r2, [pc, #32]	; (8020c <USART0_Handler+0x58>)
   801ec:	7013      	strb	r3, [r2, #0]
	}

	cpu_irq_enable();
   801ee:	2201      	movs	r2, #1
   801f0:	4b05      	ldr	r3, [pc, #20]	; (80208 <USART0_Handler+0x54>)
   801f2:	701a      	strb	r2, [r3, #0]
   801f4:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
   801f8:	b662      	cpsie	i
}
   801fa:	b003      	add	sp, #12
   801fc:	f85d fb04 	ldr.w	pc, [sp], #4
   80200:	40098000 	.word	0x40098000
   80204:	000806ed 	.word	0x000806ed
   80208:	2007012c 	.word	0x2007012c
   8020c:	20070a2c 	.word	0x20070a2c
   80210:	20070990 	.word	0x20070990

00080214 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
   80214:	b5f0      	push	{r4, r5, r6, r7, lr}
   80216:	b083      	sub	sp, #12
   80218:	4604      	mov	r4, r0
   8021a:	460d      	mov	r5, r1
	uint32_t val = 0;
   8021c:	2300      	movs	r3, #0
   8021e:	9301      	str	r3, [sp, #4]

	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
   80220:	4b1f      	ldr	r3, [pc, #124]	; (802a0 <usart_serial_getchar+0x8c>)
   80222:	4298      	cmp	r0, r3
   80224:	d107      	bne.n	80236 <usart_serial_getchar+0x22>
		while (uart_read((Uart*)p_usart, data));
   80226:	461f      	mov	r7, r3
   80228:	4e1e      	ldr	r6, [pc, #120]	; (802a4 <usart_serial_getchar+0x90>)
   8022a:	4638      	mov	r0, r7
   8022c:	4629      	mov	r1, r5
   8022e:	47b0      	blx	r6
   80230:	2800      	cmp	r0, #0
   80232:	d1fa      	bne.n	8022a <usart_serial_getchar+0x16>
   80234:	e019      	b.n	8026a <usart_serial_getchar+0x56>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
   80236:	4b1c      	ldr	r3, [pc, #112]	; (802a8 <usart_serial_getchar+0x94>)
   80238:	4298      	cmp	r0, r3
   8023a:	d109      	bne.n	80250 <usart_serial_getchar+0x3c>
		while (usart_read(p_usart, &val));
   8023c:	461f      	mov	r7, r3
   8023e:	4e1b      	ldr	r6, [pc, #108]	; (802ac <usart_serial_getchar+0x98>)
   80240:	4638      	mov	r0, r7
   80242:	a901      	add	r1, sp, #4
   80244:	47b0      	blx	r6
   80246:	2800      	cmp	r0, #0
   80248:	d1fa      	bne.n	80240 <usart_serial_getchar+0x2c>
		*data = (uint8_t)(val & 0xFF);
   8024a:	9b01      	ldr	r3, [sp, #4]
   8024c:	702b      	strb	r3, [r5, #0]
   8024e:	e019      	b.n	80284 <usart_serial_getchar+0x70>
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
   80250:	4b17      	ldr	r3, [pc, #92]	; (802b0 <usart_serial_getchar+0x9c>)
   80252:	4298      	cmp	r0, r3
   80254:	d109      	bne.n	8026a <usart_serial_getchar+0x56>
		while (usart_read(p_usart, &val));
   80256:	461e      	mov	r6, r3
   80258:	4c14      	ldr	r4, [pc, #80]	; (802ac <usart_serial_getchar+0x98>)
   8025a:	4630      	mov	r0, r6
   8025c:	a901      	add	r1, sp, #4
   8025e:	47a0      	blx	r4
   80260:	2800      	cmp	r0, #0
   80262:	d1fa      	bne.n	8025a <usart_serial_getchar+0x46>
		*data = (uint8_t)(val & 0xFF);
   80264:	9b01      	ldr	r3, [sp, #4]
   80266:	702b      	strb	r3, [r5, #0]
   80268:	e018      	b.n	8029c <usart_serial_getchar+0x88>
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   8026a:	4b12      	ldr	r3, [pc, #72]	; (802b4 <usart_serial_getchar+0xa0>)
   8026c:	429c      	cmp	r4, r3
   8026e:	d109      	bne.n	80284 <usart_serial_getchar+0x70>
		while (usart_read(p_usart, &val));
   80270:	461e      	mov	r6, r3
   80272:	4c0e      	ldr	r4, [pc, #56]	; (802ac <usart_serial_getchar+0x98>)
   80274:	4630      	mov	r0, r6
   80276:	a901      	add	r1, sp, #4
   80278:	47a0      	blx	r4
   8027a:	2800      	cmp	r0, #0
   8027c:	d1fa      	bne.n	80274 <usart_serial_getchar+0x60>
		*data = (uint8_t)(val & 0xFF);
   8027e:	9b01      	ldr	r3, [sp, #4]
   80280:	702b      	strb	r3, [r5, #0]
   80282:	e00b      	b.n	8029c <usart_serial_getchar+0x88>
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   80284:	4b0c      	ldr	r3, [pc, #48]	; (802b8 <usart_serial_getchar+0xa4>)
   80286:	429c      	cmp	r4, r3
   80288:	d108      	bne.n	8029c <usart_serial_getchar+0x88>
		while (usart_read(p_usart, &val));
   8028a:	461e      	mov	r6, r3
   8028c:	4c07      	ldr	r4, [pc, #28]	; (802ac <usart_serial_getchar+0x98>)
   8028e:	4630      	mov	r0, r6
   80290:	a901      	add	r1, sp, #4
   80292:	47a0      	blx	r4
   80294:	2800      	cmp	r0, #0
   80296:	d1fa      	bne.n	8028e <usart_serial_getchar+0x7a>
		*data = (uint8_t)(val & 0xFF);
   80298:	9b01      	ldr	r3, [sp, #4]
   8029a:	702b      	strb	r3, [r5, #0]
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
   8029c:	b003      	add	sp, #12
   8029e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   802a0:	400e0800 	.word	0x400e0800
   802a4:	000807f9 	.word	0x000807f9
   802a8:	40098000 	.word	0x40098000
   802ac:	0008019d 	.word	0x0008019d
   802b0:	4009c000 	.word	0x4009c000
   802b4:	400a0000 	.word	0x400a0000
   802b8:	400a4000 	.word	0x400a4000

000802bc <usart_serial_putchar>:
 *   \retval 1  The character was written.
 *   \retval 0  The function timed out before the USART transmitter became
 * ready to send.
 */
static inline int usart_serial_putchar(usart_if p_usart, const uint8_t c)
{
   802bc:	b570      	push	{r4, r5, r6, lr}
   802be:	460c      	mov	r4, r1
#ifdef UART
	if (UART == (Uart*)p_usart) {
   802c0:	4b21      	ldr	r3, [pc, #132]	; (80348 <usart_serial_putchar+0x8c>)
   802c2:	4298      	cmp	r0, r3
   802c4:	d107      	bne.n	802d6 <usart_serial_putchar+0x1a>
		while (uart_write((Uart*)p_usart, c)!=0);
   802c6:	461e      	mov	r6, r3
   802c8:	4d20      	ldr	r5, [pc, #128]	; (8034c <usart_serial_putchar+0x90>)
   802ca:	4630      	mov	r0, r6
   802cc:	4621      	mov	r1, r4
   802ce:	47a8      	blx	r5
   802d0:	2800      	cmp	r0, #0
   802d2:	d1fa      	bne.n	802ca <usart_serial_putchar+0xe>
   802d4:	e02b      	b.n	8032e <usart_serial_putchar+0x72>
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
   802d6:	4b1e      	ldr	r3, [pc, #120]	; (80350 <usart_serial_putchar+0x94>)
   802d8:	4298      	cmp	r0, r3
   802da:	d107      	bne.n	802ec <usart_serial_putchar+0x30>
		while (usart_write(p_usart, c)!=0);
   802dc:	461e      	mov	r6, r3
   802de:	4d1d      	ldr	r5, [pc, #116]	; (80354 <usart_serial_putchar+0x98>)
   802e0:	4630      	mov	r0, r6
   802e2:	4621      	mov	r1, r4
   802e4:	47a8      	blx	r5
   802e6:	2800      	cmp	r0, #0
   802e8:	d1fa      	bne.n	802e0 <usart_serial_putchar+0x24>
   802ea:	e022      	b.n	80332 <usart_serial_putchar+0x76>
		return 1;
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
   802ec:	4b1a      	ldr	r3, [pc, #104]	; (80358 <usart_serial_putchar+0x9c>)
   802ee:	4298      	cmp	r0, r3
   802f0:	d107      	bne.n	80302 <usart_serial_putchar+0x46>
		while (usart_write(p_usart, c)!=0);
   802f2:	461e      	mov	r6, r3
   802f4:	4d17      	ldr	r5, [pc, #92]	; (80354 <usart_serial_putchar+0x98>)
   802f6:	4630      	mov	r0, r6
   802f8:	4621      	mov	r1, r4
   802fa:	47a8      	blx	r5
   802fc:	2800      	cmp	r0, #0
   802fe:	d1fa      	bne.n	802f6 <usart_serial_putchar+0x3a>
   80300:	e019      	b.n	80336 <usart_serial_putchar+0x7a>
		return 1;
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   80302:	4b16      	ldr	r3, [pc, #88]	; (8035c <usart_serial_putchar+0xa0>)
   80304:	4298      	cmp	r0, r3
   80306:	d107      	bne.n	80318 <usart_serial_putchar+0x5c>
		while (usart_write(p_usart, c)!=0);
   80308:	461e      	mov	r6, r3
   8030a:	4d12      	ldr	r5, [pc, #72]	; (80354 <usart_serial_putchar+0x98>)
   8030c:	4630      	mov	r0, r6
   8030e:	4621      	mov	r1, r4
   80310:	47a8      	blx	r5
   80312:	2800      	cmp	r0, #0
   80314:	d1fa      	bne.n	8030c <usart_serial_putchar+0x50>
   80316:	e010      	b.n	8033a <usart_serial_putchar+0x7e>
		return 1;
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   80318:	4b11      	ldr	r3, [pc, #68]	; (80360 <usart_serial_putchar+0xa4>)
   8031a:	4298      	cmp	r0, r3
   8031c:	d10f      	bne.n	8033e <usart_serial_putchar+0x82>
		while (usart_write(p_usart, c)!=0);
   8031e:	461e      	mov	r6, r3
   80320:	4d0c      	ldr	r5, [pc, #48]	; (80354 <usart_serial_putchar+0x98>)
   80322:	4630      	mov	r0, r6
   80324:	4621      	mov	r1, r4
   80326:	47a8      	blx	r5
   80328:	2800      	cmp	r0, #0
   8032a:	d1fa      	bne.n	80322 <usart_serial_putchar+0x66>
   8032c:	e009      	b.n	80342 <usart_serial_putchar+0x86>
static inline int usart_serial_putchar(usart_if p_usart, const uint8_t c)
{
#ifdef UART
	if (UART == (Uart*)p_usart) {
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
   8032e:	2001      	movs	r0, #1
   80330:	bd70      	pop	{r4, r5, r6, pc}
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
   80332:	2001      	movs	r0, #1
   80334:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
   80336:	2001      	movs	r0, #1
   80338:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
   8033a:	2001      	movs	r0, #1
   8033c:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
	}
# endif
#endif /* ifdef USART */

	return 0;
   8033e:	2000      	movs	r0, #0
   80340:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
   80342:	2001      	movs	r0, #1
	}
# endif
#endif /* ifdef USART */

	return 0;
}
   80344:	bd70      	pop	{r4, r5, r6, pc}
   80346:	bf00      	nop
   80348:	400e0800 	.word	0x400e0800
   8034c:	000807e9 	.word	0x000807e9
   80350:	40098000 	.word	0x40098000
   80354:	00080189 	.word	0x00080189
   80358:	4009c000 	.word	0x4009c000
   8035c:	400a0000 	.word	0x400a0000
   80360:	400a4000 	.word	0x400a4000

00080364 <configureConsole>:
#include "conf_board.h"
#include "consoleFunctions.h"

int configureConsole(void)
/* Enables feedback through the USB-cable back to terminal within Atmel Studio */
{
   80364:	b530      	push	{r4, r5, lr}
   80366:	b085      	sub	sp, #20
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   80368:	2008      	movs	r0, #8
   8036a:	4d13      	ldr	r5, [pc, #76]	; (803b8 <configureConsole+0x54>)
   8036c:	47a8      	blx	r5
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
   8036e:	4c13      	ldr	r4, [pc, #76]	; (803bc <configureConsole+0x58>)
   80370:	4b13      	ldr	r3, [pc, #76]	; (803c0 <configureConsole+0x5c>)
   80372:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
   80374:	4a13      	ldr	r2, [pc, #76]	; (803c4 <configureConsole+0x60>)
   80376:	4b14      	ldr	r3, [pc, #80]	; (803c8 <configureConsole+0x64>)
   80378:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
   8037a:	4a14      	ldr	r2, [pc, #80]	; (803cc <configureConsole+0x68>)
   8037c:	4b14      	ldr	r3, [pc, #80]	; (803d0 <configureConsole+0x6c>)
   8037e:	601a      	str	r2, [r3, #0]
static inline void usart_serial_init(usart_if p_usart,
		usart_serial_options_t *opt)
{
#if ((!SAM4L) && (!SAMG55))
	sam_uart_opt_t uart_settings;
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
   80380:	4b14      	ldr	r3, [pc, #80]	; (803d4 <configureConsole+0x70>)
   80382:	9301      	str	r3, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
   80384:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
   80388:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
   8038a:	f44f 6300 	mov.w	r3, #2048	; 0x800
   8038e:	9303      	str	r3, [sp, #12]
   80390:	2008      	movs	r0, #8
   80392:	47a8      	blx	r5
	
#ifdef UART
	if (UART == (Uart*)p_usart) {
		sysclk_enable_peripheral_clock(ID_UART);
		/* Configure UART */
		uart_init((Uart*)p_usart, &uart_settings);
   80394:	4620      	mov	r0, r4
   80396:	a901      	add	r1, sp, #4
   80398:	4b0f      	ldr	r3, [pc, #60]	; (803d8 <configureConsole+0x74>)
   8039a:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
   8039c:	4d0f      	ldr	r5, [pc, #60]	; (803dc <configureConsole+0x78>)
   8039e:	682b      	ldr	r3, [r5, #0]
   803a0:	6898      	ldr	r0, [r3, #8]
   803a2:	2100      	movs	r1, #0
   803a4:	4c0e      	ldr	r4, [pc, #56]	; (803e0 <configureConsole+0x7c>)
   803a6:	47a0      	blx	r4
	setbuf(stdin, NULL);
   803a8:	682b      	ldr	r3, [r5, #0]
   803aa:	6858      	ldr	r0, [r3, #4]
   803ac:	2100      	movs	r1, #0
   803ae:	47a0      	blx	r4
	sysclk_enable_peripheral_clock(CONSOLE_UART_ID);
	stdio_serial_init(CONF_UART, &uart_serial_options);
	
	/* printf("Console ready\n"); */
	return 0;
   803b0:	2000      	movs	r0, #0
   803b2:	b005      	add	sp, #20
   803b4:	bd30      	pop	{r4, r5, pc}
   803b6:	bf00      	nop
   803b8:	0008181d 	.word	0x0008181d
   803bc:	400e0800 	.word	0x400e0800
   803c0:	20070af8 	.word	0x20070af8
   803c4:	000802bd 	.word	0x000802bd
   803c8:	20070af4 	.word	0x20070af4
   803cc:	00080215 	.word	0x00080215
   803d0:	20070ad8 	.word	0x20070ad8
   803d4:	0501bd00 	.word	0x0501bd00
   803d8:	000807b1 	.word	0x000807b1
   803dc:	20070560 	.word	0x20070560
   803e0:	00081b79 	.word	0x00081b79

000803e4 <startCodeLock>:
 * The assignment of the pointer to the memory area for the state machine,
 * instance = &SM, is done in test_FSM_runner.c
 */

void startCodeLock(codeLockPtrType foo) /* Maing sure the FSM starts in the right state */
{
   803e4:	4770      	bx	lr
   803e6:	bf00      	nop

000803e8 <pushButton1>:
	/* Write code here */
}

void pushButton1(codeLockPtrType foo)		/* Yellow button is pushed */
{
   803e8:	4770      	bx	lr
   803ea:	bf00      	nop

000803ec <pushButton2>:
	/* Write code here */
}

void pushButton2(codeLockPtrType foo)		/* Red button is pushed */
{
   803ec:	4770      	bx	lr
   803ee:	bf00      	nop

000803f0 <pushButton3>:
	/* Write code here */
}

void pushButton3(codeLockPtrType foo)		/* Green button is pushed */
{
   803f0:	4770      	bx	lr
   803f2:	bf00      	nop

000803f4 <releaseButton>:
	/* Write code here */
}

void releaseButton(codeLockPtrType foo)	/* No button is pushed */
{
   803f4:	4770      	bx	lr
   803f6:	bf00      	nop

000803f8 <test_stateMachineStartsInLockedState>:

extern codeLockType SM;			/* The memory area for the state machine */
extern codeLockPtrType instance;	/* A pointer to a state machine of this type */

void test_stateMachineStartsInLockedState(void)
{
   803f8:	b510      	push	{r4, lr}
	instance->state = OPEN;
   803fa:	4c07      	ldr	r4, [pc, #28]	; (80418 <test_stateMachineStartsInLockedState+0x20>)
   803fc:	6823      	ldr	r3, [r4, #0]
   803fe:	2208      	movs	r2, #8
   80400:	701a      	strb	r2, [r3, #0]
	startCodeLock(instance);
   80402:	6820      	ldr	r0, [r4, #0]
   80404:	4b05      	ldr	r3, [pc, #20]	; (8041c <test_stateMachineStartsInLockedState+0x24>)
   80406:	4798      	blx	r3
	TEST_ASSERT_TRUE(instance->state == Locked);
   80408:	6823      	ldr	r3, [r4, #0]
   8040a:	781b      	ldrb	r3, [r3, #0]
   8040c:	b11b      	cbz	r3, 80416 <test_stateMachineStartsInLockedState+0x1e>
   8040e:	4804      	ldr	r0, [pc, #16]	; (80420 <test_stateMachineStartsInLockedState+0x28>)
   80410:	2119      	movs	r1, #25
   80412:	4b04      	ldr	r3, [pc, #16]	; (80424 <test_stateMachineStartsInLockedState+0x2c>)
   80414:	4798      	blx	r3
   80416:	bd10      	pop	{r4, pc}
   80418:	20070af0 	.word	0x20070af0
   8041c:	000803e5 	.word	0x000803e5
   80420:	00082c50 	.word	0x00082c50
   80424:	00081049 	.word	0x00081049

00080428 <test_stateGoesToPushOneWhenFirstCorrectButtonIsPressed>:
}

void test_stateGoesToPushOneWhenFirstCorrectButtonIsPressed(void)
{
   80428:	b510      	push	{r4, lr}
	instance->state = Locked;
   8042a:	4c0e      	ldr	r4, [pc, #56]	; (80464 <test_stateGoesToPushOneWhenFirstCorrectButtonIsPressed+0x3c>)
   8042c:	6823      	ldr	r3, [r4, #0]
   8042e:	2200      	movs	r2, #0
   80430:	701a      	strb	r2, [r3, #0]
	pushButton1(instance);
   80432:	6820      	ldr	r0, [r4, #0]
   80434:	4b0c      	ldr	r3, [pc, #48]	; (80468 <test_stateGoesToPushOneWhenFirstCorrectButtonIsPressed+0x40>)
   80436:	4798      	blx	r3
	TEST_ASSERT_TRUE(instance->state == PushOne);
   80438:	6823      	ldr	r3, [r4, #0]
   8043a:	781b      	ldrb	r3, [r3, #0]
   8043c:	2b01      	cmp	r3, #1
   8043e:	d003      	beq.n	80448 <test_stateGoesToPushOneWhenFirstCorrectButtonIsPressed+0x20>
   80440:	480a      	ldr	r0, [pc, #40]	; (8046c <test_stateGoesToPushOneWhenFirstCorrectButtonIsPressed+0x44>)
   80442:	2120      	movs	r1, #32
   80444:	4b0a      	ldr	r3, [pc, #40]	; (80470 <test_stateGoesToPushOneWhenFirstCorrectButtonIsPressed+0x48>)
   80446:	4798      	blx	r3
	releaseButton(instance);
   80448:	4c06      	ldr	r4, [pc, #24]	; (80464 <test_stateGoesToPushOneWhenFirstCorrectButtonIsPressed+0x3c>)
   8044a:	6820      	ldr	r0, [r4, #0]
   8044c:	4b09      	ldr	r3, [pc, #36]	; (80474 <test_stateGoesToPushOneWhenFirstCorrectButtonIsPressed+0x4c>)
   8044e:	4798      	blx	r3
	TEST_ASSERT_TRUE(instance->state == ReleaseOne);
   80450:	6823      	ldr	r3, [r4, #0]
   80452:	781b      	ldrb	r3, [r3, #0]
   80454:	2b02      	cmp	r3, #2
   80456:	d003      	beq.n	80460 <test_stateGoesToPushOneWhenFirstCorrectButtonIsPressed+0x38>
   80458:	4804      	ldr	r0, [pc, #16]	; (8046c <test_stateGoesToPushOneWhenFirstCorrectButtonIsPressed+0x44>)
   8045a:	2122      	movs	r1, #34	; 0x22
   8045c:	4b04      	ldr	r3, [pc, #16]	; (80470 <test_stateGoesToPushOneWhenFirstCorrectButtonIsPressed+0x48>)
   8045e:	4798      	blx	r3
   80460:	bd10      	pop	{r4, pc}
   80462:	bf00      	nop
   80464:	20070af0 	.word	0x20070af0
   80468:	000803e9 	.word	0x000803e9
   8046c:	00082c50 	.word	0x00082c50
   80470:	00081049 	.word	0x00081049
   80474:	000803f5 	.word	0x000803f5

00080478 <test_stateGoesToLockedWhenFirstIncorrectButtonIsPressed>:
}

void test_stateGoesToLockedWhenFirstIncorrectButtonIsPressed(void)	/* This test will likely pass since it just requires the SM to stay in the same Locked state */
{
   80478:	b510      	push	{r4, lr}
	instance->state = Locked;
   8047a:	4c0d      	ldr	r4, [pc, #52]	; (804b0 <test_stateGoesToLockedWhenFirstIncorrectButtonIsPressed+0x38>)
   8047c:	6823      	ldr	r3, [r4, #0]
   8047e:	2200      	movs	r2, #0
   80480:	701a      	strb	r2, [r3, #0]
	pushButton3(instance);
   80482:	6820      	ldr	r0, [r4, #0]
   80484:	4b0b      	ldr	r3, [pc, #44]	; (804b4 <test_stateGoesToLockedWhenFirstIncorrectButtonIsPressed+0x3c>)
   80486:	4798      	blx	r3
	TEST_ASSERT_TRUE(instance->state == Locked);
   80488:	6823      	ldr	r3, [r4, #0]
   8048a:	781b      	ldrb	r3, [r3, #0]
   8048c:	b11b      	cbz	r3, 80496 <test_stateGoesToLockedWhenFirstIncorrectButtonIsPressed+0x1e>
   8048e:	480a      	ldr	r0, [pc, #40]	; (804b8 <test_stateGoesToLockedWhenFirstIncorrectButtonIsPressed+0x40>)
   80490:	2129      	movs	r1, #41	; 0x29
   80492:	4b0a      	ldr	r3, [pc, #40]	; (804bc <test_stateGoesToLockedWhenFirstIncorrectButtonIsPressed+0x44>)
   80494:	4798      	blx	r3
	releaseButton(instance);
   80496:	4c06      	ldr	r4, [pc, #24]	; (804b0 <test_stateGoesToLockedWhenFirstIncorrectButtonIsPressed+0x38>)
   80498:	6820      	ldr	r0, [r4, #0]
   8049a:	4b09      	ldr	r3, [pc, #36]	; (804c0 <test_stateGoesToLockedWhenFirstIncorrectButtonIsPressed+0x48>)
   8049c:	4798      	blx	r3
	TEST_ASSERT_TRUE(instance->state == Locked);
   8049e:	6823      	ldr	r3, [r4, #0]
   804a0:	781b      	ldrb	r3, [r3, #0]
   804a2:	b11b      	cbz	r3, 804ac <test_stateGoesToLockedWhenFirstIncorrectButtonIsPressed+0x34>
   804a4:	4804      	ldr	r0, [pc, #16]	; (804b8 <test_stateGoesToLockedWhenFirstIncorrectButtonIsPressed+0x40>)
   804a6:	212b      	movs	r1, #43	; 0x2b
   804a8:	4b04      	ldr	r3, [pc, #16]	; (804bc <test_stateGoesToLockedWhenFirstIncorrectButtonIsPressed+0x44>)
   804aa:	4798      	blx	r3
   804ac:	bd10      	pop	{r4, pc}
   804ae:	bf00      	nop
   804b0:	20070af0 	.word	0x20070af0
   804b4:	000803f1 	.word	0x000803f1
   804b8:	00082c50 	.word	0x00082c50
   804bc:	00081049 	.word	0x00081049
   804c0:	000803f5 	.word	0x000803f5

000804c4 <test_stateGoesToPushTwoWhenSecondCorrectButtonIsPressed>:
}

void test_stateGoesToPushTwoWhenSecondCorrectButtonIsPressed(void)
{
   804c4:	b510      	push	{r4, lr}
	instance->state = ReleaseOne;
   804c6:	4c0e      	ldr	r4, [pc, #56]	; (80500 <test_stateGoesToPushTwoWhenSecondCorrectButtonIsPressed+0x3c>)
   804c8:	6823      	ldr	r3, [r4, #0]
   804ca:	2202      	movs	r2, #2
   804cc:	701a      	strb	r2, [r3, #0]
	pushButton3(instance);
   804ce:	6820      	ldr	r0, [r4, #0]
   804d0:	4b0c      	ldr	r3, [pc, #48]	; (80504 <test_stateGoesToPushTwoWhenSecondCorrectButtonIsPressed+0x40>)
   804d2:	4798      	blx	r3
	TEST_ASSERT_TRUE(instance->state == PushTwo);
   804d4:	6823      	ldr	r3, [r4, #0]
   804d6:	781b      	ldrb	r3, [r3, #0]
   804d8:	2b03      	cmp	r3, #3
   804da:	d003      	beq.n	804e4 <test_stateGoesToPushTwoWhenSecondCorrectButtonIsPressed+0x20>
   804dc:	480a      	ldr	r0, [pc, #40]	; (80508 <test_stateGoesToPushTwoWhenSecondCorrectButtonIsPressed+0x44>)
   804de:	2132      	movs	r1, #50	; 0x32
   804e0:	4b0a      	ldr	r3, [pc, #40]	; (8050c <test_stateGoesToPushTwoWhenSecondCorrectButtonIsPressed+0x48>)
   804e2:	4798      	blx	r3
	releaseButton(instance);
   804e4:	4c06      	ldr	r4, [pc, #24]	; (80500 <test_stateGoesToPushTwoWhenSecondCorrectButtonIsPressed+0x3c>)
   804e6:	6820      	ldr	r0, [r4, #0]
   804e8:	4b09      	ldr	r3, [pc, #36]	; (80510 <test_stateGoesToPushTwoWhenSecondCorrectButtonIsPressed+0x4c>)
   804ea:	4798      	blx	r3
	TEST_ASSERT_TRUE(instance->state == ReleaseTwo);
   804ec:	6823      	ldr	r3, [r4, #0]
   804ee:	781b      	ldrb	r3, [r3, #0]
   804f0:	2b04      	cmp	r3, #4
   804f2:	d003      	beq.n	804fc <test_stateGoesToPushTwoWhenSecondCorrectButtonIsPressed+0x38>
   804f4:	4804      	ldr	r0, [pc, #16]	; (80508 <test_stateGoesToPushTwoWhenSecondCorrectButtonIsPressed+0x44>)
   804f6:	2134      	movs	r1, #52	; 0x34
   804f8:	4b04      	ldr	r3, [pc, #16]	; (8050c <test_stateGoesToPushTwoWhenSecondCorrectButtonIsPressed+0x48>)
   804fa:	4798      	blx	r3
   804fc:	bd10      	pop	{r4, pc}
   804fe:	bf00      	nop
   80500:	20070af0 	.word	0x20070af0
   80504:	000803f1 	.word	0x000803f1
   80508:	00082c50 	.word	0x00082c50
   8050c:	00081049 	.word	0x00081049
   80510:	000803f5 	.word	0x000803f5

00080514 <test_stateGoesToLockedWhenSecondIncorrectButtonIsPressed>:
}

void test_stateGoesToLockedWhenSecondIncorrectButtonIsPressed(void)
{
   80514:	b510      	push	{r4, lr}
	instance->state = ReleaseOne;
   80516:	4c0d      	ldr	r4, [pc, #52]	; (8054c <test_stateGoesToLockedWhenSecondIncorrectButtonIsPressed+0x38>)
   80518:	6823      	ldr	r3, [r4, #0]
   8051a:	2202      	movs	r2, #2
   8051c:	701a      	strb	r2, [r3, #0]
	pushButton3(instance);
   8051e:	6820      	ldr	r0, [r4, #0]
   80520:	4b0b      	ldr	r3, [pc, #44]	; (80550 <test_stateGoesToLockedWhenSecondIncorrectButtonIsPressed+0x3c>)
   80522:	4798      	blx	r3
	TEST_ASSERT_TRUE(instance->state == Locked);
   80524:	6823      	ldr	r3, [r4, #0]
   80526:	781b      	ldrb	r3, [r3, #0]
   80528:	b11b      	cbz	r3, 80532 <test_stateGoesToLockedWhenSecondIncorrectButtonIsPressed+0x1e>
   8052a:	480a      	ldr	r0, [pc, #40]	; (80554 <test_stateGoesToLockedWhenSecondIncorrectButtonIsPressed+0x40>)
   8052c:	213b      	movs	r1, #59	; 0x3b
   8052e:	4b0a      	ldr	r3, [pc, #40]	; (80558 <test_stateGoesToLockedWhenSecondIncorrectButtonIsPressed+0x44>)
   80530:	4798      	blx	r3
	releaseButton(instance);
   80532:	4c06      	ldr	r4, [pc, #24]	; (8054c <test_stateGoesToLockedWhenSecondIncorrectButtonIsPressed+0x38>)
   80534:	6820      	ldr	r0, [r4, #0]
   80536:	4b09      	ldr	r3, [pc, #36]	; (8055c <test_stateGoesToLockedWhenSecondIncorrectButtonIsPressed+0x48>)
   80538:	4798      	blx	r3
	TEST_ASSERT_TRUE(instance->state == Locked);	
   8053a:	6823      	ldr	r3, [r4, #0]
   8053c:	781b      	ldrb	r3, [r3, #0]
   8053e:	b11b      	cbz	r3, 80548 <test_stateGoesToLockedWhenSecondIncorrectButtonIsPressed+0x34>
   80540:	4804      	ldr	r0, [pc, #16]	; (80554 <test_stateGoesToLockedWhenSecondIncorrectButtonIsPressed+0x40>)
   80542:	213d      	movs	r1, #61	; 0x3d
   80544:	4b04      	ldr	r3, [pc, #16]	; (80558 <test_stateGoesToLockedWhenSecondIncorrectButtonIsPressed+0x44>)
   80546:	4798      	blx	r3
   80548:	bd10      	pop	{r4, pc}
   8054a:	bf00      	nop
   8054c:	20070af0 	.word	0x20070af0
   80550:	000803f1 	.word	0x000803f1
   80554:	00082c50 	.word	0x00082c50
   80558:	00081049 	.word	0x00081049
   8055c:	000803f5 	.word	0x000803f5

00080560 <test_stateGoesToPushThreeWhenThirdCorrectButtonIsPressed>:
}

void test_stateGoesToPushThreeWhenThirdCorrectButtonIsPressed(void)
{
   80560:	b510      	push	{r4, lr}
	instance->state = ReleaseTwo;
   80562:	4c0e      	ldr	r4, [pc, #56]	; (8059c <test_stateGoesToPushThreeWhenThirdCorrectButtonIsPressed+0x3c>)
   80564:	6823      	ldr	r3, [r4, #0]
   80566:	2204      	movs	r2, #4
   80568:	701a      	strb	r2, [r3, #0]
	pushButton3(instance);
   8056a:	6820      	ldr	r0, [r4, #0]
   8056c:	4b0c      	ldr	r3, [pc, #48]	; (805a0 <test_stateGoesToPushThreeWhenThirdCorrectButtonIsPressed+0x40>)
   8056e:	4798      	blx	r3
	TEST_ASSERT_TRUE(instance->state == PushThree);
   80570:	6823      	ldr	r3, [r4, #0]
   80572:	781b      	ldrb	r3, [r3, #0]
   80574:	2b05      	cmp	r3, #5
   80576:	d003      	beq.n	80580 <test_stateGoesToPushThreeWhenThirdCorrectButtonIsPressed+0x20>
   80578:	480a      	ldr	r0, [pc, #40]	; (805a4 <test_stateGoesToPushThreeWhenThirdCorrectButtonIsPressed+0x44>)
   8057a:	2144      	movs	r1, #68	; 0x44
   8057c:	4b0a      	ldr	r3, [pc, #40]	; (805a8 <test_stateGoesToPushThreeWhenThirdCorrectButtonIsPressed+0x48>)
   8057e:	4798      	blx	r3
	releaseButton(instance);
   80580:	4c06      	ldr	r4, [pc, #24]	; (8059c <test_stateGoesToPushThreeWhenThirdCorrectButtonIsPressed+0x3c>)
   80582:	6820      	ldr	r0, [r4, #0]
   80584:	4b09      	ldr	r3, [pc, #36]	; (805ac <test_stateGoesToPushThreeWhenThirdCorrectButtonIsPressed+0x4c>)
   80586:	4798      	blx	r3
	TEST_ASSERT_TRUE(instance->state == ReleaseThree);	
   80588:	6823      	ldr	r3, [r4, #0]
   8058a:	781b      	ldrb	r3, [r3, #0]
   8058c:	2b06      	cmp	r3, #6
   8058e:	d003      	beq.n	80598 <test_stateGoesToPushThreeWhenThirdCorrectButtonIsPressed+0x38>
   80590:	4804      	ldr	r0, [pc, #16]	; (805a4 <test_stateGoesToPushThreeWhenThirdCorrectButtonIsPressed+0x44>)
   80592:	2146      	movs	r1, #70	; 0x46
   80594:	4b04      	ldr	r3, [pc, #16]	; (805a8 <test_stateGoesToPushThreeWhenThirdCorrectButtonIsPressed+0x48>)
   80596:	4798      	blx	r3
   80598:	bd10      	pop	{r4, pc}
   8059a:	bf00      	nop
   8059c:	20070af0 	.word	0x20070af0
   805a0:	000803f1 	.word	0x000803f1
   805a4:	00082c50 	.word	0x00082c50
   805a8:	00081049 	.word	0x00081049
   805ac:	000803f5 	.word	0x000803f5

000805b0 <test_stateGoesToLockedWhenThirdIncorrectButtonIsPressed>:
}

void test_stateGoesToLockedWhenThirdIncorrectButtonIsPressed(void)
{
   805b0:	b510      	push	{r4, lr}
	instance->state = ReleaseTwo;
   805b2:	4c0d      	ldr	r4, [pc, #52]	; (805e8 <test_stateGoesToLockedWhenThirdIncorrectButtonIsPressed+0x38>)
   805b4:	6823      	ldr	r3, [r4, #0]
   805b6:	2204      	movs	r2, #4
   805b8:	701a      	strb	r2, [r3, #0]
	pushButton2(instance);
   805ba:	6820      	ldr	r0, [r4, #0]
   805bc:	4b0b      	ldr	r3, [pc, #44]	; (805ec <test_stateGoesToLockedWhenThirdIncorrectButtonIsPressed+0x3c>)
   805be:	4798      	blx	r3
	TEST_ASSERT_TRUE(instance->state == Locked);
   805c0:	6823      	ldr	r3, [r4, #0]
   805c2:	781b      	ldrb	r3, [r3, #0]
   805c4:	b11b      	cbz	r3, 805ce <test_stateGoesToLockedWhenThirdIncorrectButtonIsPressed+0x1e>
   805c6:	480a      	ldr	r0, [pc, #40]	; (805f0 <test_stateGoesToLockedWhenThirdIncorrectButtonIsPressed+0x40>)
   805c8:	214d      	movs	r1, #77	; 0x4d
   805ca:	4b0a      	ldr	r3, [pc, #40]	; (805f4 <test_stateGoesToLockedWhenThirdIncorrectButtonIsPressed+0x44>)
   805cc:	4798      	blx	r3
	releaseButton(instance);
   805ce:	4c06      	ldr	r4, [pc, #24]	; (805e8 <test_stateGoesToLockedWhenThirdIncorrectButtonIsPressed+0x38>)
   805d0:	6820      	ldr	r0, [r4, #0]
   805d2:	4b09      	ldr	r3, [pc, #36]	; (805f8 <test_stateGoesToLockedWhenThirdIncorrectButtonIsPressed+0x48>)
   805d4:	4798      	blx	r3
	TEST_ASSERT_TRUE(instance->state == Locked);
   805d6:	6823      	ldr	r3, [r4, #0]
   805d8:	781b      	ldrb	r3, [r3, #0]
   805da:	b11b      	cbz	r3, 805e4 <test_stateGoesToLockedWhenThirdIncorrectButtonIsPressed+0x34>
   805dc:	4804      	ldr	r0, [pc, #16]	; (805f0 <test_stateGoesToLockedWhenThirdIncorrectButtonIsPressed+0x40>)
   805de:	214f      	movs	r1, #79	; 0x4f
   805e0:	4b04      	ldr	r3, [pc, #16]	; (805f4 <test_stateGoesToLockedWhenThirdIncorrectButtonIsPressed+0x44>)
   805e2:	4798      	blx	r3
   805e4:	bd10      	pop	{r4, pc}
   805e6:	bf00      	nop
   805e8:	20070af0 	.word	0x20070af0
   805ec:	000803ed 	.word	0x000803ed
   805f0:	00082c50 	.word	0x00082c50
   805f4:	00081049 	.word	0x00081049
   805f8:	000803f5 	.word	0x000803f5

000805fc <test_stateGoesToOpenWhenFourthCorrectButtonIsPressed>:
}

void test_stateGoesToOpenWhenFourthCorrectButtonIsPressed(void)
{
   805fc:	b510      	push	{r4, lr}
	instance->state = ReleaseThree;
   805fe:	4c0e      	ldr	r4, [pc, #56]	; (80638 <test_stateGoesToOpenWhenFourthCorrectButtonIsPressed+0x3c>)
   80600:	6823      	ldr	r3, [r4, #0]
   80602:	2206      	movs	r2, #6
   80604:	701a      	strb	r2, [r3, #0]
	pushButton2(instance);
   80606:	6820      	ldr	r0, [r4, #0]
   80608:	4b0c      	ldr	r3, [pc, #48]	; (8063c <test_stateGoesToOpenWhenFourthCorrectButtonIsPressed+0x40>)
   8060a:	4798      	blx	r3
	TEST_ASSERT_TRUE(instance->state == PushFour);
   8060c:	6823      	ldr	r3, [r4, #0]
   8060e:	781b      	ldrb	r3, [r3, #0]
   80610:	2b07      	cmp	r3, #7
   80612:	d003      	beq.n	8061c <test_stateGoesToOpenWhenFourthCorrectButtonIsPressed+0x20>
   80614:	480a      	ldr	r0, [pc, #40]	; (80640 <test_stateGoesToOpenWhenFourthCorrectButtonIsPressed+0x44>)
   80616:	2156      	movs	r1, #86	; 0x56
   80618:	4b0a      	ldr	r3, [pc, #40]	; (80644 <test_stateGoesToOpenWhenFourthCorrectButtonIsPressed+0x48>)
   8061a:	4798      	blx	r3
	releaseButton(instance);
   8061c:	4c06      	ldr	r4, [pc, #24]	; (80638 <test_stateGoesToOpenWhenFourthCorrectButtonIsPressed+0x3c>)
   8061e:	6820      	ldr	r0, [r4, #0]
   80620:	4b09      	ldr	r3, [pc, #36]	; (80648 <test_stateGoesToOpenWhenFourthCorrectButtonIsPressed+0x4c>)
   80622:	4798      	blx	r3
	TEST_ASSERT_TRUE(instance->state == OPEN);
   80624:	6823      	ldr	r3, [r4, #0]
   80626:	781b      	ldrb	r3, [r3, #0]
   80628:	2b08      	cmp	r3, #8
   8062a:	d003      	beq.n	80634 <test_stateGoesToOpenWhenFourthCorrectButtonIsPressed+0x38>
   8062c:	4804      	ldr	r0, [pc, #16]	; (80640 <test_stateGoesToOpenWhenFourthCorrectButtonIsPressed+0x44>)
   8062e:	2158      	movs	r1, #88	; 0x58
   80630:	4b04      	ldr	r3, [pc, #16]	; (80644 <test_stateGoesToOpenWhenFourthCorrectButtonIsPressed+0x48>)
   80632:	4798      	blx	r3
   80634:	bd10      	pop	{r4, pc}
   80636:	bf00      	nop
   80638:	20070af0 	.word	0x20070af0
   8063c:	000803ed 	.word	0x000803ed
   80640:	00082c50 	.word	0x00082c50
   80644:	00081049 	.word	0x00081049
   80648:	000803f5 	.word	0x000803f5

0008064c <test_stateGoesToLockedWhenFourthIncorrectButtonIsPressed>:
}

void test_stateGoesToLockedWhenFourthIncorrectButtonIsPressed(void)
{
   8064c:	b510      	push	{r4, lr}
	instance->state = ReleaseTwo;
   8064e:	4c0d      	ldr	r4, [pc, #52]	; (80684 <test_stateGoesToLockedWhenFourthIncorrectButtonIsPressed+0x38>)
   80650:	6823      	ldr	r3, [r4, #0]
   80652:	2204      	movs	r2, #4
   80654:	701a      	strb	r2, [r3, #0]
	pushButton1(instance);
   80656:	6820      	ldr	r0, [r4, #0]
   80658:	4b0b      	ldr	r3, [pc, #44]	; (80688 <test_stateGoesToLockedWhenFourthIncorrectButtonIsPressed+0x3c>)
   8065a:	4798      	blx	r3
	TEST_ASSERT_TRUE(instance->state == Locked);
   8065c:	6823      	ldr	r3, [r4, #0]
   8065e:	781b      	ldrb	r3, [r3, #0]
   80660:	b11b      	cbz	r3, 8066a <test_stateGoesToLockedWhenFourthIncorrectButtonIsPressed+0x1e>
   80662:	480a      	ldr	r0, [pc, #40]	; (8068c <test_stateGoesToLockedWhenFourthIncorrectButtonIsPressed+0x40>)
   80664:	215f      	movs	r1, #95	; 0x5f
   80666:	4b0a      	ldr	r3, [pc, #40]	; (80690 <test_stateGoesToLockedWhenFourthIncorrectButtonIsPressed+0x44>)
   80668:	4798      	blx	r3
	releaseButton(instance);
   8066a:	4c06      	ldr	r4, [pc, #24]	; (80684 <test_stateGoesToLockedWhenFourthIncorrectButtonIsPressed+0x38>)
   8066c:	6820      	ldr	r0, [r4, #0]
   8066e:	4b09      	ldr	r3, [pc, #36]	; (80694 <test_stateGoesToLockedWhenFourthIncorrectButtonIsPressed+0x48>)
   80670:	4798      	blx	r3
	TEST_ASSERT_TRUE(instance->state == Locked);
   80672:	6823      	ldr	r3, [r4, #0]
   80674:	781b      	ldrb	r3, [r3, #0]
   80676:	b11b      	cbz	r3, 80680 <test_stateGoesToLockedWhenFourthIncorrectButtonIsPressed+0x34>
   80678:	4804      	ldr	r0, [pc, #16]	; (8068c <test_stateGoesToLockedWhenFourthIncorrectButtonIsPressed+0x40>)
   8067a:	2161      	movs	r1, #97	; 0x61
   8067c:	4b04      	ldr	r3, [pc, #16]	; (80690 <test_stateGoesToLockedWhenFourthIncorrectButtonIsPressed+0x44>)
   8067e:	4798      	blx	r3
   80680:	bd10      	pop	{r4, pc}
   80682:	bf00      	nop
   80684:	20070af0 	.word	0x20070af0
   80688:	000803e9 	.word	0x000803e9
   8068c:	00082c50 	.word	0x00082c50
   80690:	00081049 	.word	0x00081049
   80694:	000803f5 	.word	0x000803f5

00080698 <_write>:
   80698:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8069c:	460e      	mov	r6, r1
   8069e:	4615      	mov	r5, r2
   806a0:	3801      	subs	r0, #1
   806a2:	2802      	cmp	r0, #2
   806a4:	d80f      	bhi.n	806c6 <_write+0x2e>
   806a6:	b192      	cbz	r2, 806ce <_write+0x36>
   806a8:	2400      	movs	r4, #0
   806aa:	f8df 803c 	ldr.w	r8, [pc, #60]	; 806e8 <_write+0x50>
   806ae:	4f0d      	ldr	r7, [pc, #52]	; (806e4 <_write+0x4c>)
   806b0:	f8d8 0000 	ldr.w	r0, [r8]
   806b4:	5d31      	ldrb	r1, [r6, r4]
   806b6:	683b      	ldr	r3, [r7, #0]
   806b8:	4798      	blx	r3
   806ba:	2800      	cmp	r0, #0
   806bc:	db0a      	blt.n	806d4 <_write+0x3c>
   806be:	3401      	adds	r4, #1
   806c0:	42a5      	cmp	r5, r4
   806c2:	d1f5      	bne.n	806b0 <_write+0x18>
   806c4:	e00a      	b.n	806dc <_write+0x44>
   806c6:	f04f 30ff 	mov.w	r0, #4294967295
   806ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   806ce:	2000      	movs	r0, #0
   806d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   806d4:	f04f 30ff 	mov.w	r0, #4294967295
   806d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   806dc:	4620      	mov	r0, r4
   806de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   806e2:	bf00      	nop
   806e4:	20070af4 	.word	0x20070af4
   806e8:	20070af8 	.word	0x20070af8

000806ec <usart_serial_read_packet>:
   806ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   806f0:	b083      	sub	sp, #12
   806f2:	4605      	mov	r5, r0
   806f4:	4690      	mov	r8, r2
   806f6:	2a00      	cmp	r2, #0
   806f8:	d047      	beq.n	8078a <usart_serial_read_packet+0x9e>
   806fa:	1c4e      	adds	r6, r1, #1
   806fc:	4f25      	ldr	r7, [pc, #148]	; (80794 <usart_serial_read_packet+0xa8>)
   806fe:	4c26      	ldr	r4, [pc, #152]	; (80798 <usart_serial_read_packet+0xac>)
   80700:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 807ac <usart_serial_read_packet+0xc0>
   80704:	f8df b094 	ldr.w	fp, [pc, #148]	; 8079c <usart_serial_read_packet+0xb0>
   80708:	f106 39ff 	add.w	r9, r6, #4294967295
   8070c:	2300      	movs	r3, #0
   8070e:	9301      	str	r3, [sp, #4]
   80710:	4b22      	ldr	r3, [pc, #136]	; (8079c <usart_serial_read_packet+0xb0>)
   80712:	429d      	cmp	r5, r3
   80714:	d106      	bne.n	80724 <usart_serial_read_packet+0x38>
   80716:	4658      	mov	r0, fp
   80718:	4649      	mov	r1, r9
   8071a:	4b21      	ldr	r3, [pc, #132]	; (807a0 <usart_serial_read_packet+0xb4>)
   8071c:	4798      	blx	r3
   8071e:	2800      	cmp	r0, #0
   80720:	d1f9      	bne.n	80716 <usart_serial_read_packet+0x2a>
   80722:	e019      	b.n	80758 <usart_serial_read_packet+0x6c>
   80724:	4b1f      	ldr	r3, [pc, #124]	; (807a4 <usart_serial_read_packet+0xb8>)
   80726:	429d      	cmp	r5, r3
   80728:	d109      	bne.n	8073e <usart_serial_read_packet+0x52>
   8072a:	4699      	mov	r9, r3
   8072c:	4648      	mov	r0, r9
   8072e:	a901      	add	r1, sp, #4
   80730:	47a0      	blx	r4
   80732:	2800      	cmp	r0, #0
   80734:	d1fa      	bne.n	8072c <usart_serial_read_packet+0x40>
   80736:	9b01      	ldr	r3, [sp, #4]
   80738:	f806 3c01 	strb.w	r3, [r6, #-1]
   8073c:	e017      	b.n	8076e <usart_serial_read_packet+0x82>
   8073e:	4b1a      	ldr	r3, [pc, #104]	; (807a8 <usart_serial_read_packet+0xbc>)
   80740:	429d      	cmp	r5, r3
   80742:	d109      	bne.n	80758 <usart_serial_read_packet+0x6c>
   80744:	4699      	mov	r9, r3
   80746:	4648      	mov	r0, r9
   80748:	a901      	add	r1, sp, #4
   8074a:	47a0      	blx	r4
   8074c:	2800      	cmp	r0, #0
   8074e:	d1fa      	bne.n	80746 <usart_serial_read_packet+0x5a>
   80750:	9b01      	ldr	r3, [sp, #4]
   80752:	f806 3c01 	strb.w	r3, [r6, #-1]
   80756:	e014      	b.n	80782 <usart_serial_read_packet+0x96>
   80758:	4555      	cmp	r5, sl
   8075a:	d108      	bne.n	8076e <usart_serial_read_packet+0x82>
   8075c:	4650      	mov	r0, sl
   8075e:	a901      	add	r1, sp, #4
   80760:	47a0      	blx	r4
   80762:	2800      	cmp	r0, #0
   80764:	d1fa      	bne.n	8075c <usart_serial_read_packet+0x70>
   80766:	9b01      	ldr	r3, [sp, #4]
   80768:	f806 3c01 	strb.w	r3, [r6, #-1]
   8076c:	e009      	b.n	80782 <usart_serial_read_packet+0x96>
   8076e:	42bd      	cmp	r5, r7
   80770:	d107      	bne.n	80782 <usart_serial_read_packet+0x96>
   80772:	4638      	mov	r0, r7
   80774:	a901      	add	r1, sp, #4
   80776:	47a0      	blx	r4
   80778:	2800      	cmp	r0, #0
   8077a:	d1fa      	bne.n	80772 <usart_serial_read_packet+0x86>
   8077c:	9b01      	ldr	r3, [sp, #4]
   8077e:	f806 3c01 	strb.w	r3, [r6, #-1]
   80782:	3601      	adds	r6, #1
   80784:	f1b8 0801 	subs.w	r8, r8, #1
   80788:	d1be      	bne.n	80708 <usart_serial_read_packet+0x1c>
   8078a:	2000      	movs	r0, #0
   8078c:	b003      	add	sp, #12
   8078e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   80792:	bf00      	nop
   80794:	400a4000 	.word	0x400a4000
   80798:	0008019d 	.word	0x0008019d
   8079c:	400e0800 	.word	0x400e0800
   807a0:	000807f9 	.word	0x000807f9
   807a4:	40098000 	.word	0x40098000
   807a8:	4009c000 	.word	0x4009c000
   807ac:	400a0000 	.word	0x400a0000

000807b0 <uart_init>:
   807b0:	b410      	push	{r4}
   807b2:	23ac      	movs	r3, #172	; 0xac
   807b4:	6003      	str	r3, [r0, #0]
   807b6:	680a      	ldr	r2, [r1, #0]
   807b8:	684b      	ldr	r3, [r1, #4]
   807ba:	fbb2 f3f3 	udiv	r3, r2, r3
   807be:	091b      	lsrs	r3, r3, #4
   807c0:	1e5c      	subs	r4, r3, #1
   807c2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
   807c6:	4294      	cmp	r4, r2
   807c8:	d80a      	bhi.n	807e0 <uart_init+0x30>
   807ca:	6203      	str	r3, [r0, #32]
   807cc:	688b      	ldr	r3, [r1, #8]
   807ce:	6043      	str	r3, [r0, #4]
   807d0:	f240 2302 	movw	r3, #514	; 0x202
   807d4:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
   807d8:	2350      	movs	r3, #80	; 0x50
   807da:	6003      	str	r3, [r0, #0]
   807dc:	2000      	movs	r0, #0
   807de:	e000      	b.n	807e2 <uart_init+0x32>
   807e0:	2001      	movs	r0, #1
   807e2:	f85d 4b04 	ldr.w	r4, [sp], #4
   807e6:	4770      	bx	lr

000807e8 <uart_write>:
   807e8:	6943      	ldr	r3, [r0, #20]
   807ea:	f013 0f02 	tst.w	r3, #2
   807ee:	bf1a      	itte	ne
   807f0:	61c1      	strne	r1, [r0, #28]
   807f2:	2000      	movne	r0, #0
   807f4:	2001      	moveq	r0, #1
   807f6:	4770      	bx	lr

000807f8 <uart_read>:
   807f8:	6943      	ldr	r3, [r0, #20]
   807fa:	f013 0f01 	tst.w	r3, #1
   807fe:	bf1d      	ittte	ne
   80800:	6983      	ldrne	r3, [r0, #24]
   80802:	700b      	strbne	r3, [r1, #0]
   80804:	2000      	movne	r0, #0
   80806:	2001      	moveq	r0, #1
   80808:	4770      	bx	lr
   8080a:	bf00      	nop

0008080c <main>:

extern codeLockType SM;				/* The memory area for the state machine */
extern codeLockPtrType instance;	/* A pointer to a state machine of this type */

int main (void)
{
   8080c:	b510      	push	{r4, lr}
	sysclk_init();	/* Insert system clock initialization code here (sysclk_init()). */
   8080e:	4b1a      	ldr	r3, [pc, #104]	; (80878 <main+0x6c>)
   80810:	4798      	blx	r3
	board_init();
   80812:	4b1a      	ldr	r3, [pc, #104]	; (8087c <main+0x70>)
   80814:	4798      	blx	r3

	configureConsole();	/* Initialize the console UART used from within Atmel Studio*/
   80816:	4b1a      	ldr	r3, [pc, #104]	; (80880 <main+0x74>)
   80818:	4798      	blx	r3
	//UnityBegin("../test/test_delayFunctions.c");	/* Run the tests for the delay from the test-file */
	//RUN_TEST(test_delayTimerIsInitialisedProperly, 5);
	//RUN_TEST(test_delayCountsProperly, 8);
	//UnityEnd();
	
	instance = &SM;				/* Pointing to the state machine used */
   8081a:	4a1a      	ldr	r2, [pc, #104]	; (80884 <main+0x78>)
   8081c:	4b1a      	ldr	r3, [pc, #104]	; (80888 <main+0x7c>)
   8081e:	601a      	str	r2, [r3, #0]
	
	UnityBegin("../test/test_stateMachine.c");	/* Run the tests for the delay from the test-file */
   80820:	481a      	ldr	r0, [pc, #104]	; (8088c <main+0x80>)
   80822:	4b1b      	ldr	r3, [pc, #108]	; (80890 <main+0x84>)
   80824:	4798      	blx	r3
	RUN_TEST(test_stateMachineStartsInLockedState, 10);
   80826:	481b      	ldr	r0, [pc, #108]	; (80894 <main+0x88>)
   80828:	491b      	ldr	r1, [pc, #108]	; (80898 <main+0x8c>)
   8082a:	220a      	movs	r2, #10
   8082c:	4c1b      	ldr	r4, [pc, #108]	; (8089c <main+0x90>)
   8082e:	47a0      	blx	r4

	RUN_TEST(test_stateGoesToPushOneWhenFirstCorrectButtonIsPressed, 20);
   80830:	481b      	ldr	r0, [pc, #108]	; (808a0 <main+0x94>)
   80832:	491c      	ldr	r1, [pc, #112]	; (808a4 <main+0x98>)
   80834:	2214      	movs	r2, #20
   80836:	47a0      	blx	r4
	RUN_TEST(test_stateGoesToLockedWhenFirstIncorrectButtonIsPressed, 22);
   80838:	481b      	ldr	r0, [pc, #108]	; (808a8 <main+0x9c>)
   8083a:	491c      	ldr	r1, [pc, #112]	; (808ac <main+0xa0>)
   8083c:	2216      	movs	r2, #22
   8083e:	47a0      	blx	r4

	RUN_TEST(test_stateGoesToPushTwoWhenSecondCorrectButtonIsPressed, 30);
   80840:	481b      	ldr	r0, [pc, #108]	; (808b0 <main+0xa4>)
   80842:	491c      	ldr	r1, [pc, #112]	; (808b4 <main+0xa8>)
   80844:	221e      	movs	r2, #30
   80846:	47a0      	blx	r4
	RUN_TEST(test_stateGoesToLockedWhenSecondIncorrectButtonIsPressed, 32);
   80848:	481b      	ldr	r0, [pc, #108]	; (808b8 <main+0xac>)
   8084a:	491c      	ldr	r1, [pc, #112]	; (808bc <main+0xb0>)
   8084c:	2220      	movs	r2, #32
   8084e:	47a0      	blx	r4

	RUN_TEST(test_stateGoesToPushThreeWhenThirdCorrectButtonIsPressed, 40);
   80850:	481b      	ldr	r0, [pc, #108]	; (808c0 <main+0xb4>)
   80852:	491c      	ldr	r1, [pc, #112]	; (808c4 <main+0xb8>)
   80854:	2228      	movs	r2, #40	; 0x28
   80856:	47a0      	blx	r4
	RUN_TEST(test_stateGoesToLockedWhenThirdIncorrectButtonIsPressed, 42);
   80858:	481b      	ldr	r0, [pc, #108]	; (808c8 <main+0xbc>)
   8085a:	491c      	ldr	r1, [pc, #112]	; (808cc <main+0xc0>)
   8085c:	222a      	movs	r2, #42	; 0x2a
   8085e:	47a0      	blx	r4

	RUN_TEST(test_stateGoesToOpenWhenFourthCorrectButtonIsPressed, 50);
   80860:	481b      	ldr	r0, [pc, #108]	; (808d0 <main+0xc4>)
   80862:	491c      	ldr	r1, [pc, #112]	; (808d4 <main+0xc8>)
   80864:	2232      	movs	r2, #50	; 0x32
   80866:	47a0      	blx	r4
	RUN_TEST(test_stateGoesToLockedWhenFourthIncorrectButtonIsPressed, 52);
   80868:	481b      	ldr	r0, [pc, #108]	; (808d8 <main+0xcc>)
   8086a:	491c      	ldr	r1, [pc, #112]	; (808dc <main+0xd0>)
   8086c:	2234      	movs	r2, #52	; 0x34
   8086e:	47a0      	blx	r4
	UnityEnd();
   80870:	4b1b      	ldr	r3, [pc, #108]	; (808e0 <main+0xd4>)
   80872:	4798      	blx	r3
		
	return 0;
}
   80874:	2000      	movs	r0, #0
   80876:	bd10      	pop	{r4, pc}
   80878:	00081391 	.word	0x00081391
   8087c:	000813f5 	.word	0x000813f5
   80880:	00080365 	.word	0x00080365
   80884:	20070adc 	.word	0x20070adc
   80888:	20070af0 	.word	0x20070af0
   8088c:	00082c6c 	.word	0x00082c6c
   80890:	000811ad 	.word	0x000811ad
   80894:	000803f9 	.word	0x000803f9
   80898:	00082c88 	.word	0x00082c88
   8089c:	00081155 	.word	0x00081155
   808a0:	00080429 	.word	0x00080429
   808a4:	00082cb0 	.word	0x00082cb0
   808a8:	00080479 	.word	0x00080479
   808ac:	00082ce8 	.word	0x00082ce8
   808b0:	000804c5 	.word	0x000804c5
   808b4:	00082d20 	.word	0x00082d20
   808b8:	00080515 	.word	0x00080515
   808bc:	00082d58 	.word	0x00082d58
   808c0:	00080561 	.word	0x00080561
   808c4:	00082d94 	.word	0x00082d94
   808c8:	000805b1 	.word	0x000805b1
   808cc:	00082dd0 	.word	0x00082dd0
   808d0:	000805fd 	.word	0x000805fd
   808d4:	00082e08 	.word	0x00082e08
   808d8:	0008064d 	.word	0x0008064d
   808dc:	00082e40 	.word	0x00082e40
   808e0:	000811c9 	.word	0x000811c9

000808e4 <setUp>:

void setUp(void)
{
   808e4:	4770      	bx	lr
   808e6:	bf00      	nop

000808e8 <tearDown>:
	/* Do nothing */
}

void tearDown(void)
{
   808e8:	4770      	bx	lr
   808ea:	bf00      	nop

000808ec <UnityPrintNumber>:
   808ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   808f0:	4605      	mov	r5, r0
   808f2:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
   808f6:	d132      	bne.n	8095e <UnityPrintNumber+0x72>
   808f8:	4b5f      	ldr	r3, [pc, #380]	; (80a78 <UnityPrintNumber+0x18c>)
   808fa:	6818      	ldr	r0, [r3, #0]
   808fc:	6882      	ldr	r2, [r0, #8]
   808fe:	6893      	ldr	r3, [r2, #8]
   80900:	3b01      	subs	r3, #1
   80902:	6093      	str	r3, [r2, #8]
   80904:	2b00      	cmp	r3, #0
   80906:	da1d      	bge.n	80944 <UnityPrintNumber+0x58>
   80908:	6882      	ldr	r2, [r0, #8]
   8090a:	6891      	ldr	r1, [r2, #8]
   8090c:	6993      	ldr	r3, [r2, #24]
   8090e:	4299      	cmp	r1, r3
   80910:	db12      	blt.n	80938 <UnityPrintNumber+0x4c>
   80912:	6813      	ldr	r3, [r2, #0]
   80914:	222d      	movs	r2, #45	; 0x2d
   80916:	701a      	strb	r2, [r3, #0]
   80918:	4b57      	ldr	r3, [pc, #348]	; (80a78 <UnityPrintNumber+0x18c>)
   8091a:	6818      	ldr	r0, [r3, #0]
   8091c:	6882      	ldr	r2, [r0, #8]
   8091e:	6813      	ldr	r3, [r2, #0]
   80920:	7819      	ldrb	r1, [r3, #0]
   80922:	290a      	cmp	r1, #10
   80924:	d002      	beq.n	8092c <UnityPrintNumber+0x40>
   80926:	3301      	adds	r3, #1
   80928:	6013      	str	r3, [r2, #0]
   8092a:	e04f      	b.n	809cc <UnityPrintNumber+0xe0>
   8092c:	210a      	movs	r1, #10
   8092e:	4b53      	ldr	r3, [pc, #332]	; (80a7c <UnityPrintNumber+0x190>)
   80930:	4798      	blx	r3
   80932:	f04f 4500 	mov.w	r5, #2147483648	; 0x80000000
   80936:	e049      	b.n	809cc <UnityPrintNumber+0xe0>
   80938:	212d      	movs	r1, #45	; 0x2d
   8093a:	4b50      	ldr	r3, [pc, #320]	; (80a7c <UnityPrintNumber+0x190>)
   8093c:	4798      	blx	r3
   8093e:	f04f 4500 	mov.w	r5, #2147483648	; 0x80000000
   80942:	e043      	b.n	809cc <UnityPrintNumber+0xe0>
   80944:	6883      	ldr	r3, [r0, #8]
   80946:	681b      	ldr	r3, [r3, #0]
   80948:	222d      	movs	r2, #45	; 0x2d
   8094a:	701a      	strb	r2, [r3, #0]
   8094c:	4b4a      	ldr	r3, [pc, #296]	; (80a78 <UnityPrintNumber+0x18c>)
   8094e:	681b      	ldr	r3, [r3, #0]
   80950:	689b      	ldr	r3, [r3, #8]
   80952:	681a      	ldr	r2, [r3, #0]
   80954:	3201      	adds	r2, #1
   80956:	601a      	str	r2, [r3, #0]
   80958:	f04f 4500 	mov.w	r5, #2147483648	; 0x80000000
   8095c:	e036      	b.n	809cc <UnityPrintNumber+0xe0>
   8095e:	2800      	cmp	r0, #0
   80960:	da34      	bge.n	809cc <UnityPrintNumber+0xe0>
   80962:	4b45      	ldr	r3, [pc, #276]	; (80a78 <UnityPrintNumber+0x18c>)
   80964:	6818      	ldr	r0, [r3, #0]
   80966:	6882      	ldr	r2, [r0, #8]
   80968:	6893      	ldr	r3, [r2, #8]
   8096a:	3b01      	subs	r3, #1
   8096c:	6093      	str	r3, [r2, #8]
   8096e:	2b00      	cmp	r3, #0
   80970:	da19      	bge.n	809a6 <UnityPrintNumber+0xba>
   80972:	6882      	ldr	r2, [r0, #8]
   80974:	6891      	ldr	r1, [r2, #8]
   80976:	6993      	ldr	r3, [r2, #24]
   80978:	4299      	cmp	r1, r3
   8097a:	db10      	blt.n	8099e <UnityPrintNumber+0xb2>
   8097c:	6813      	ldr	r3, [r2, #0]
   8097e:	222d      	movs	r2, #45	; 0x2d
   80980:	701a      	strb	r2, [r3, #0]
   80982:	4b3d      	ldr	r3, [pc, #244]	; (80a78 <UnityPrintNumber+0x18c>)
   80984:	6818      	ldr	r0, [r3, #0]
   80986:	6882      	ldr	r2, [r0, #8]
   80988:	6813      	ldr	r3, [r2, #0]
   8098a:	7819      	ldrb	r1, [r3, #0]
   8098c:	290a      	cmp	r1, #10
   8098e:	d002      	beq.n	80996 <UnityPrintNumber+0xaa>
   80990:	3301      	adds	r3, #1
   80992:	6013      	str	r3, [r2, #0]
   80994:	e011      	b.n	809ba <UnityPrintNumber+0xce>
   80996:	210a      	movs	r1, #10
   80998:	4b38      	ldr	r3, [pc, #224]	; (80a7c <UnityPrintNumber+0x190>)
   8099a:	4798      	blx	r3
   8099c:	e00d      	b.n	809ba <UnityPrintNumber+0xce>
   8099e:	212d      	movs	r1, #45	; 0x2d
   809a0:	4b36      	ldr	r3, [pc, #216]	; (80a7c <UnityPrintNumber+0x190>)
   809a2:	4798      	blx	r3
   809a4:	e009      	b.n	809ba <UnityPrintNumber+0xce>
   809a6:	6883      	ldr	r3, [r0, #8]
   809a8:	681b      	ldr	r3, [r3, #0]
   809aa:	222d      	movs	r2, #45	; 0x2d
   809ac:	701a      	strb	r2, [r3, #0]
   809ae:	4b32      	ldr	r3, [pc, #200]	; (80a78 <UnityPrintNumber+0x18c>)
   809b0:	681b      	ldr	r3, [r3, #0]
   809b2:	689b      	ldr	r3, [r3, #8]
   809b4:	681a      	ldr	r2, [r3, #0]
   809b6:	3201      	adds	r2, #1
   809b8:	601a      	str	r2, [r3, #0]
   809ba:	426d      	negs	r5, r5
   809bc:	e006      	b.n	809cc <UnityPrintNumber+0xe0>
   809be:	eb04 0384 	add.w	r3, r4, r4, lsl #2
   809c2:	005b      	lsls	r3, r3, #1
   809c4:	429c      	cmp	r4, r3
   809c6:	da06      	bge.n	809d6 <UnityPrintNumber+0xea>
   809c8:	461c      	mov	r4, r3
   809ca:	e000      	b.n	809ce <UnityPrintNumber+0xe2>
   809cc:	2401      	movs	r4, #1
   809ce:	fbb5 f3f4 	udiv	r3, r5, r4
   809d2:	2b09      	cmp	r3, #9
   809d4:	d8f3      	bhi.n	809be <UnityPrintNumber+0xd2>
   809d6:	4e28      	ldr	r6, [pc, #160]	; (80a78 <UnityPrintNumber+0x18c>)
   809d8:	4f29      	ldr	r7, [pc, #164]	; (80a80 <UnityPrintNumber+0x194>)
   809da:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 80a7c <UnityPrintNumber+0x190>
   809de:	6830      	ldr	r0, [r6, #0]
   809e0:	6882      	ldr	r2, [r0, #8]
   809e2:	6893      	ldr	r3, [r2, #8]
   809e4:	3b01      	subs	r3, #1
   809e6:	6093      	str	r3, [r2, #8]
   809e8:	2b00      	cmp	r3, #0
   809ea:	da29      	bge.n	80a40 <UnityPrintNumber+0x154>
   809ec:	6882      	ldr	r2, [r0, #8]
   809ee:	6891      	ldr	r1, [r2, #8]
   809f0:	6993      	ldr	r3, [r2, #24]
   809f2:	4299      	cmp	r1, r3
   809f4:	db17      	blt.n	80a26 <UnityPrintNumber+0x13a>
   809f6:	6811      	ldr	r1, [r2, #0]
   809f8:	fbb5 f3f4 	udiv	r3, r5, r4
   809fc:	fba7 0203 	umull	r0, r2, r7, r3
   80a00:	08d2      	lsrs	r2, r2, #3
   80a02:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80a06:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
   80a0a:	3330      	adds	r3, #48	; 0x30
   80a0c:	700b      	strb	r3, [r1, #0]
   80a0e:	6830      	ldr	r0, [r6, #0]
   80a10:	6882      	ldr	r2, [r0, #8]
   80a12:	6813      	ldr	r3, [r2, #0]
   80a14:	7819      	ldrb	r1, [r3, #0]
   80a16:	290a      	cmp	r1, #10
   80a18:	d002      	beq.n	80a20 <UnityPrintNumber+0x134>
   80a1a:	3301      	adds	r3, #1
   80a1c:	6013      	str	r3, [r2, #0]
   80a1e:	e021      	b.n	80a64 <UnityPrintNumber+0x178>
   80a20:	210a      	movs	r1, #10
   80a22:	47c0      	blx	r8
   80a24:	e01e      	b.n	80a64 <UnityPrintNumber+0x178>
   80a26:	fbb5 f3f4 	udiv	r3, r5, r4
   80a2a:	fba7 e103 	umull	lr, r1, r7, r3
   80a2e:	08c9      	lsrs	r1, r1, #3
   80a30:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   80a34:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
   80a38:	3130      	adds	r1, #48	; 0x30
   80a3a:	b2c9      	uxtb	r1, r1
   80a3c:	47c0      	blx	r8
   80a3e:	e011      	b.n	80a64 <UnityPrintNumber+0x178>
   80a40:	6883      	ldr	r3, [r0, #8]
   80a42:	6819      	ldr	r1, [r3, #0]
   80a44:	fbb5 f3f4 	udiv	r3, r5, r4
   80a48:	fba7 0203 	umull	r0, r2, r7, r3
   80a4c:	08d2      	lsrs	r2, r2, #3
   80a4e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80a52:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
   80a56:	3330      	adds	r3, #48	; 0x30
   80a58:	700b      	strb	r3, [r1, #0]
   80a5a:	6833      	ldr	r3, [r6, #0]
   80a5c:	689b      	ldr	r3, [r3, #8]
   80a5e:	681a      	ldr	r2, [r3, #0]
   80a60:	3201      	adds	r2, #1
   80a62:	601a      	str	r2, [r3, #0]
   80a64:	4b07      	ldr	r3, [pc, #28]	; (80a84 <UnityPrintNumber+0x198>)
   80a66:	fb83 2304 	smull	r2, r3, r3, r4
   80a6a:	17e4      	asrs	r4, r4, #31
   80a6c:	ebc4 04a3 	rsb	r4, r4, r3, asr #2
   80a70:	2c00      	cmp	r4, #0
   80a72:	dcb4      	bgt.n	809de <UnityPrintNumber+0xf2>
   80a74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80a78:	20070560 	.word	0x20070560
   80a7c:	00081ca5 	.word	0x00081ca5
   80a80:	cccccccd 	.word	0xcccccccd
   80a84:	66666667 	.word	0x66666667

00080a88 <UnityPrintNumberHex>:
   80a88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   80a8c:	4606      	mov	r6, r0
   80a8e:	460c      	mov	r4, r1
   80a90:	4b5e      	ldr	r3, [pc, #376]	; (80c0c <UnityPrintNumberHex+0x184>)
   80a92:	6818      	ldr	r0, [r3, #0]
   80a94:	6882      	ldr	r2, [r0, #8]
   80a96:	6893      	ldr	r3, [r2, #8]
   80a98:	3b01      	subs	r3, #1
   80a9a:	6093      	str	r3, [r2, #8]
   80a9c:	2b00      	cmp	r3, #0
   80a9e:	da19      	bge.n	80ad4 <UnityPrintNumberHex+0x4c>
   80aa0:	6882      	ldr	r2, [r0, #8]
   80aa2:	6891      	ldr	r1, [r2, #8]
   80aa4:	6993      	ldr	r3, [r2, #24]
   80aa6:	4299      	cmp	r1, r3
   80aa8:	db10      	blt.n	80acc <UnityPrintNumberHex+0x44>
   80aaa:	6813      	ldr	r3, [r2, #0]
   80aac:	2230      	movs	r2, #48	; 0x30
   80aae:	701a      	strb	r2, [r3, #0]
   80ab0:	4b56      	ldr	r3, [pc, #344]	; (80c0c <UnityPrintNumberHex+0x184>)
   80ab2:	6818      	ldr	r0, [r3, #0]
   80ab4:	6882      	ldr	r2, [r0, #8]
   80ab6:	6813      	ldr	r3, [r2, #0]
   80ab8:	7819      	ldrb	r1, [r3, #0]
   80aba:	290a      	cmp	r1, #10
   80abc:	d002      	beq.n	80ac4 <UnityPrintNumberHex+0x3c>
   80abe:	3301      	adds	r3, #1
   80ac0:	6013      	str	r3, [r2, #0]
   80ac2:	e011      	b.n	80ae8 <UnityPrintNumberHex+0x60>
   80ac4:	210a      	movs	r1, #10
   80ac6:	4b52      	ldr	r3, [pc, #328]	; (80c10 <UnityPrintNumberHex+0x188>)
   80ac8:	4798      	blx	r3
   80aca:	e00d      	b.n	80ae8 <UnityPrintNumberHex+0x60>
   80acc:	2130      	movs	r1, #48	; 0x30
   80ace:	4b50      	ldr	r3, [pc, #320]	; (80c10 <UnityPrintNumberHex+0x188>)
   80ad0:	4798      	blx	r3
   80ad2:	e009      	b.n	80ae8 <UnityPrintNumberHex+0x60>
   80ad4:	6883      	ldr	r3, [r0, #8]
   80ad6:	681b      	ldr	r3, [r3, #0]
   80ad8:	2230      	movs	r2, #48	; 0x30
   80ada:	701a      	strb	r2, [r3, #0]
   80adc:	4b4b      	ldr	r3, [pc, #300]	; (80c0c <UnityPrintNumberHex+0x184>)
   80ade:	681b      	ldr	r3, [r3, #0]
   80ae0:	689b      	ldr	r3, [r3, #8]
   80ae2:	681a      	ldr	r2, [r3, #0]
   80ae4:	3201      	adds	r2, #1
   80ae6:	601a      	str	r2, [r3, #0]
   80ae8:	4b48      	ldr	r3, [pc, #288]	; (80c0c <UnityPrintNumberHex+0x184>)
   80aea:	6818      	ldr	r0, [r3, #0]
   80aec:	6882      	ldr	r2, [r0, #8]
   80aee:	6893      	ldr	r3, [r2, #8]
   80af0:	3b01      	subs	r3, #1
   80af2:	6093      	str	r3, [r2, #8]
   80af4:	2b00      	cmp	r3, #0
   80af6:	da1b      	bge.n	80b30 <UnityPrintNumberHex+0xa8>
   80af8:	6882      	ldr	r2, [r0, #8]
   80afa:	6891      	ldr	r1, [r2, #8]
   80afc:	6993      	ldr	r3, [r2, #24]
   80afe:	4299      	cmp	r1, r3
   80b00:	db10      	blt.n	80b24 <UnityPrintNumberHex+0x9c>
   80b02:	6813      	ldr	r3, [r2, #0]
   80b04:	2278      	movs	r2, #120	; 0x78
   80b06:	701a      	strb	r2, [r3, #0]
   80b08:	4b40      	ldr	r3, [pc, #256]	; (80c0c <UnityPrintNumberHex+0x184>)
   80b0a:	6818      	ldr	r0, [r3, #0]
   80b0c:	6882      	ldr	r2, [r0, #8]
   80b0e:	6813      	ldr	r3, [r2, #0]
   80b10:	7819      	ldrb	r1, [r3, #0]
   80b12:	290a      	cmp	r1, #10
   80b14:	d002      	beq.n	80b1c <UnityPrintNumberHex+0x94>
   80b16:	3301      	adds	r3, #1
   80b18:	6013      	str	r3, [r2, #0]
   80b1a:	e006      	b.n	80b2a <UnityPrintNumberHex+0xa2>
   80b1c:	210a      	movs	r1, #10
   80b1e:	4b3c      	ldr	r3, [pc, #240]	; (80c10 <UnityPrintNumberHex+0x188>)
   80b20:	4798      	blx	r3
   80b22:	e002      	b.n	80b2a <UnityPrintNumberHex+0xa2>
   80b24:	2178      	movs	r1, #120	; 0x78
   80b26:	4b3a      	ldr	r3, [pc, #232]	; (80c10 <UnityPrintNumberHex+0x188>)
   80b28:	4798      	blx	r3
   80b2a:	b964      	cbnz	r4, 80b46 <UnityPrintNumberHex+0xbe>
   80b2c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   80b30:	6883      	ldr	r3, [r0, #8]
   80b32:	681b      	ldr	r3, [r3, #0]
   80b34:	2278      	movs	r2, #120	; 0x78
   80b36:	701a      	strb	r2, [r3, #0]
   80b38:	4b34      	ldr	r3, [pc, #208]	; (80c0c <UnityPrintNumberHex+0x184>)
   80b3a:	681b      	ldr	r3, [r3, #0]
   80b3c:	689b      	ldr	r3, [r3, #8]
   80b3e:	681a      	ldr	r2, [r3, #0]
   80b40:	3201      	adds	r2, #1
   80b42:	601a      	str	r2, [r3, #0]
   80b44:	e7f1      	b.n	80b2a <UnityPrintNumberHex+0xa2>
   80b46:	4d31      	ldr	r5, [pc, #196]	; (80c0c <UnityPrintNumberHex+0x184>)
   80b48:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 80c10 <UnityPrintNumberHex+0x188>
   80b4c:	f04f 080a 	mov.w	r8, #10
   80b50:	3c01      	subs	r4, #1
   80b52:	b2e4      	uxtb	r4, r4
   80b54:	00a3      	lsls	r3, r4, #2
   80b56:	fa26 f303 	lsr.w	r3, r6, r3
   80b5a:	f003 030f 	and.w	r3, r3, #15
   80b5e:	2b09      	cmp	r3, #9
   80b60:	d828      	bhi.n	80bb4 <UnityPrintNumberHex+0x12c>
   80b62:	6828      	ldr	r0, [r5, #0]
   80b64:	6881      	ldr	r1, [r0, #8]
   80b66:	688a      	ldr	r2, [r1, #8]
   80b68:	3a01      	subs	r2, #1
   80b6a:	608a      	str	r2, [r1, #8]
   80b6c:	2a00      	cmp	r2, #0
   80b6e:	da17      	bge.n	80ba0 <UnityPrintNumberHex+0x118>
   80b70:	6882      	ldr	r2, [r0, #8]
   80b72:	6891      	ldr	r1, [r2, #8]
   80b74:	6997      	ldr	r7, [r2, #24]
   80b76:	42b9      	cmp	r1, r7
   80b78:	db0e      	blt.n	80b98 <UnityPrintNumberHex+0x110>
   80b7a:	6812      	ldr	r2, [r2, #0]
   80b7c:	3330      	adds	r3, #48	; 0x30
   80b7e:	7013      	strb	r3, [r2, #0]
   80b80:	6828      	ldr	r0, [r5, #0]
   80b82:	6882      	ldr	r2, [r0, #8]
   80b84:	6813      	ldr	r3, [r2, #0]
   80b86:	7819      	ldrb	r1, [r3, #0]
   80b88:	290a      	cmp	r1, #10
   80b8a:	d002      	beq.n	80b92 <UnityPrintNumberHex+0x10a>
   80b8c:	3301      	adds	r3, #1
   80b8e:	6013      	str	r3, [r2, #0]
   80b90:	e038      	b.n	80c04 <UnityPrintNumberHex+0x17c>
   80b92:	4641      	mov	r1, r8
   80b94:	47c8      	blx	r9
   80b96:	e035      	b.n	80c04 <UnityPrintNumberHex+0x17c>
   80b98:	f103 0130 	add.w	r1, r3, #48	; 0x30
   80b9c:	47c8      	blx	r9
   80b9e:	e031      	b.n	80c04 <UnityPrintNumberHex+0x17c>
   80ba0:	6882      	ldr	r2, [r0, #8]
   80ba2:	6812      	ldr	r2, [r2, #0]
   80ba4:	3330      	adds	r3, #48	; 0x30
   80ba6:	7013      	strb	r3, [r2, #0]
   80ba8:	682b      	ldr	r3, [r5, #0]
   80baa:	689b      	ldr	r3, [r3, #8]
   80bac:	681a      	ldr	r2, [r3, #0]
   80bae:	3201      	adds	r2, #1
   80bb0:	601a      	str	r2, [r3, #0]
   80bb2:	e027      	b.n	80c04 <UnityPrintNumberHex+0x17c>
   80bb4:	6828      	ldr	r0, [r5, #0]
   80bb6:	6881      	ldr	r1, [r0, #8]
   80bb8:	688a      	ldr	r2, [r1, #8]
   80bba:	3a01      	subs	r2, #1
   80bbc:	608a      	str	r2, [r1, #8]
   80bbe:	2a00      	cmp	r2, #0
   80bc0:	da17      	bge.n	80bf2 <UnityPrintNumberHex+0x16a>
   80bc2:	6882      	ldr	r2, [r0, #8]
   80bc4:	6891      	ldr	r1, [r2, #8]
   80bc6:	6997      	ldr	r7, [r2, #24]
   80bc8:	42b9      	cmp	r1, r7
   80bca:	db0e      	blt.n	80bea <UnityPrintNumberHex+0x162>
   80bcc:	6812      	ldr	r2, [r2, #0]
   80bce:	3337      	adds	r3, #55	; 0x37
   80bd0:	7013      	strb	r3, [r2, #0]
   80bd2:	6828      	ldr	r0, [r5, #0]
   80bd4:	6882      	ldr	r2, [r0, #8]
   80bd6:	6813      	ldr	r3, [r2, #0]
   80bd8:	7819      	ldrb	r1, [r3, #0]
   80bda:	290a      	cmp	r1, #10
   80bdc:	d002      	beq.n	80be4 <UnityPrintNumberHex+0x15c>
   80bde:	3301      	adds	r3, #1
   80be0:	6013      	str	r3, [r2, #0]
   80be2:	e00f      	b.n	80c04 <UnityPrintNumberHex+0x17c>
   80be4:	4641      	mov	r1, r8
   80be6:	47c8      	blx	r9
   80be8:	e00c      	b.n	80c04 <UnityPrintNumberHex+0x17c>
   80bea:	f103 0137 	add.w	r1, r3, #55	; 0x37
   80bee:	47c8      	blx	r9
   80bf0:	e008      	b.n	80c04 <UnityPrintNumberHex+0x17c>
   80bf2:	6882      	ldr	r2, [r0, #8]
   80bf4:	6812      	ldr	r2, [r2, #0]
   80bf6:	3337      	adds	r3, #55	; 0x37
   80bf8:	7013      	strb	r3, [r2, #0]
   80bfa:	682b      	ldr	r3, [r5, #0]
   80bfc:	689b      	ldr	r3, [r3, #8]
   80bfe:	681a      	ldr	r2, [r3, #0]
   80c00:	3201      	adds	r2, #1
   80c02:	601a      	str	r2, [r3, #0]
   80c04:	2c00      	cmp	r4, #0
   80c06:	d1a3      	bne.n	80b50 <UnityPrintNumberHex+0xc8>
   80c08:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   80c0c:	20070560 	.word	0x20070560
   80c10:	00081ca5 	.word	0x00081ca5

00080c14 <UnityPrint>:
   80c14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   80c16:	2800      	cmp	r0, #0
   80c18:	f000 810a 	beq.w	80e30 <UnityPrint+0x21c>
   80c1c:	7803      	ldrb	r3, [r0, #0]
   80c1e:	2b00      	cmp	r3, #0
   80c20:	f000 8106 	beq.w	80e30 <UnityPrint+0x21c>
   80c24:	1c44      	adds	r4, r0, #1
   80c26:	4d83      	ldr	r5, [pc, #524]	; (80e34 <UnityPrint+0x220>)
   80c28:	4e83      	ldr	r6, [pc, #524]	; (80e38 <UnityPrint+0x224>)
   80c2a:	4f84      	ldr	r7, [pc, #528]	; (80e3c <UnityPrint+0x228>)
   80c2c:	f1a3 0220 	sub.w	r2, r3, #32
   80c30:	b2d2      	uxtb	r2, r2
   80c32:	2a5e      	cmp	r2, #94	; 0x5e
   80c34:	d82a      	bhi.n	80c8c <UnityPrint+0x78>
   80c36:	6828      	ldr	r0, [r5, #0]
   80c38:	6882      	ldr	r2, [r0, #8]
   80c3a:	6893      	ldr	r3, [r2, #8]
   80c3c:	3b01      	subs	r3, #1
   80c3e:	6093      	str	r3, [r2, #8]
   80c40:	2b00      	cmp	r3, #0
   80c42:	da18      	bge.n	80c76 <UnityPrint+0x62>
   80c44:	6882      	ldr	r2, [r0, #8]
   80c46:	6891      	ldr	r1, [r2, #8]
   80c48:	6993      	ldr	r3, [r2, #24]
   80c4a:	4299      	cmp	r1, r3
   80c4c:	db0f      	blt.n	80c6e <UnityPrint+0x5a>
   80c4e:	6813      	ldr	r3, [r2, #0]
   80c50:	f814 2c01 	ldrb.w	r2, [r4, #-1]
   80c54:	701a      	strb	r2, [r3, #0]
   80c56:	6828      	ldr	r0, [r5, #0]
   80c58:	6882      	ldr	r2, [r0, #8]
   80c5a:	6813      	ldr	r3, [r2, #0]
   80c5c:	7819      	ldrb	r1, [r3, #0]
   80c5e:	290a      	cmp	r1, #10
   80c60:	d002      	beq.n	80c68 <UnityPrint+0x54>
   80c62:	3301      	adds	r3, #1
   80c64:	6013      	str	r3, [r2, #0]
   80c66:	e0de      	b.n	80e26 <UnityPrint+0x212>
   80c68:	210a      	movs	r1, #10
   80c6a:	47b8      	blx	r7
   80c6c:	e0db      	b.n	80e26 <UnityPrint+0x212>
   80c6e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
   80c72:	47b8      	blx	r7
   80c74:	e0d7      	b.n	80e26 <UnityPrint+0x212>
   80c76:	6883      	ldr	r3, [r0, #8]
   80c78:	681b      	ldr	r3, [r3, #0]
   80c7a:	f814 2c01 	ldrb.w	r2, [r4, #-1]
   80c7e:	701a      	strb	r2, [r3, #0]
   80c80:	682b      	ldr	r3, [r5, #0]
   80c82:	689b      	ldr	r3, [r3, #8]
   80c84:	681a      	ldr	r2, [r3, #0]
   80c86:	3201      	adds	r2, #1
   80c88:	601a      	str	r2, [r3, #0]
   80c8a:	e0cc      	b.n	80e26 <UnityPrint+0x212>
   80c8c:	2b0d      	cmp	r3, #13
   80c8e:	d14e      	bne.n	80d2e <UnityPrint+0x11a>
   80c90:	6828      	ldr	r0, [r5, #0]
   80c92:	6882      	ldr	r2, [r0, #8]
   80c94:	6893      	ldr	r3, [r2, #8]
   80c96:	3b01      	subs	r3, #1
   80c98:	6093      	str	r3, [r2, #8]
   80c9a:	2b00      	cmp	r3, #0
   80c9c:	da16      	bge.n	80ccc <UnityPrint+0xb8>
   80c9e:	6882      	ldr	r2, [r0, #8]
   80ca0:	6891      	ldr	r1, [r2, #8]
   80ca2:	6993      	ldr	r3, [r2, #24]
   80ca4:	4299      	cmp	r1, r3
   80ca6:	db0e      	blt.n	80cc6 <UnityPrint+0xb2>
   80ca8:	6813      	ldr	r3, [r2, #0]
   80caa:	225c      	movs	r2, #92	; 0x5c
   80cac:	701a      	strb	r2, [r3, #0]
   80cae:	6828      	ldr	r0, [r5, #0]
   80cb0:	6882      	ldr	r2, [r0, #8]
   80cb2:	6813      	ldr	r3, [r2, #0]
   80cb4:	7819      	ldrb	r1, [r3, #0]
   80cb6:	290a      	cmp	r1, #10
   80cb8:	d002      	beq.n	80cc0 <UnityPrint+0xac>
   80cba:	3301      	adds	r3, #1
   80cbc:	6013      	str	r3, [r2, #0]
   80cbe:	e00e      	b.n	80cde <UnityPrint+0xca>
   80cc0:	210a      	movs	r1, #10
   80cc2:	47b8      	blx	r7
   80cc4:	e00b      	b.n	80cde <UnityPrint+0xca>
   80cc6:	215c      	movs	r1, #92	; 0x5c
   80cc8:	47b8      	blx	r7
   80cca:	e008      	b.n	80cde <UnityPrint+0xca>
   80ccc:	6883      	ldr	r3, [r0, #8]
   80cce:	681b      	ldr	r3, [r3, #0]
   80cd0:	225c      	movs	r2, #92	; 0x5c
   80cd2:	701a      	strb	r2, [r3, #0]
   80cd4:	682b      	ldr	r3, [r5, #0]
   80cd6:	689b      	ldr	r3, [r3, #8]
   80cd8:	681a      	ldr	r2, [r3, #0]
   80cda:	3201      	adds	r2, #1
   80cdc:	601a      	str	r2, [r3, #0]
   80cde:	6828      	ldr	r0, [r5, #0]
   80ce0:	6882      	ldr	r2, [r0, #8]
   80ce2:	6893      	ldr	r3, [r2, #8]
   80ce4:	3b01      	subs	r3, #1
   80ce6:	6093      	str	r3, [r2, #8]
   80ce8:	2b00      	cmp	r3, #0
   80cea:	da16      	bge.n	80d1a <UnityPrint+0x106>
   80cec:	6882      	ldr	r2, [r0, #8]
   80cee:	6891      	ldr	r1, [r2, #8]
   80cf0:	6993      	ldr	r3, [r2, #24]
   80cf2:	4299      	cmp	r1, r3
   80cf4:	db0e      	blt.n	80d14 <UnityPrint+0x100>
   80cf6:	6813      	ldr	r3, [r2, #0]
   80cf8:	2272      	movs	r2, #114	; 0x72
   80cfa:	701a      	strb	r2, [r3, #0]
   80cfc:	6828      	ldr	r0, [r5, #0]
   80cfe:	6882      	ldr	r2, [r0, #8]
   80d00:	6813      	ldr	r3, [r2, #0]
   80d02:	7819      	ldrb	r1, [r3, #0]
   80d04:	290a      	cmp	r1, #10
   80d06:	d002      	beq.n	80d0e <UnityPrint+0xfa>
   80d08:	3301      	adds	r3, #1
   80d0a:	6013      	str	r3, [r2, #0]
   80d0c:	e08b      	b.n	80e26 <UnityPrint+0x212>
   80d0e:	210a      	movs	r1, #10
   80d10:	47b8      	blx	r7
   80d12:	e088      	b.n	80e26 <UnityPrint+0x212>
   80d14:	2172      	movs	r1, #114	; 0x72
   80d16:	47b8      	blx	r7
   80d18:	e085      	b.n	80e26 <UnityPrint+0x212>
   80d1a:	6883      	ldr	r3, [r0, #8]
   80d1c:	681b      	ldr	r3, [r3, #0]
   80d1e:	2272      	movs	r2, #114	; 0x72
   80d20:	701a      	strb	r2, [r3, #0]
   80d22:	682b      	ldr	r3, [r5, #0]
   80d24:	689b      	ldr	r3, [r3, #8]
   80d26:	681a      	ldr	r2, [r3, #0]
   80d28:	3201      	adds	r2, #1
   80d2a:	601a      	str	r2, [r3, #0]
   80d2c:	e07b      	b.n	80e26 <UnityPrint+0x212>
   80d2e:	2b0a      	cmp	r3, #10
   80d30:	d14e      	bne.n	80dd0 <UnityPrint+0x1bc>
   80d32:	6828      	ldr	r0, [r5, #0]
   80d34:	6882      	ldr	r2, [r0, #8]
   80d36:	6893      	ldr	r3, [r2, #8]
   80d38:	3b01      	subs	r3, #1
   80d3a:	6093      	str	r3, [r2, #8]
   80d3c:	2b00      	cmp	r3, #0
   80d3e:	da16      	bge.n	80d6e <UnityPrint+0x15a>
   80d40:	6882      	ldr	r2, [r0, #8]
   80d42:	6891      	ldr	r1, [r2, #8]
   80d44:	6993      	ldr	r3, [r2, #24]
   80d46:	4299      	cmp	r1, r3
   80d48:	db0e      	blt.n	80d68 <UnityPrint+0x154>
   80d4a:	6813      	ldr	r3, [r2, #0]
   80d4c:	225c      	movs	r2, #92	; 0x5c
   80d4e:	701a      	strb	r2, [r3, #0]
   80d50:	6828      	ldr	r0, [r5, #0]
   80d52:	6882      	ldr	r2, [r0, #8]
   80d54:	6813      	ldr	r3, [r2, #0]
   80d56:	7819      	ldrb	r1, [r3, #0]
   80d58:	290a      	cmp	r1, #10
   80d5a:	d002      	beq.n	80d62 <UnityPrint+0x14e>
   80d5c:	3301      	adds	r3, #1
   80d5e:	6013      	str	r3, [r2, #0]
   80d60:	e00e      	b.n	80d80 <UnityPrint+0x16c>
   80d62:	210a      	movs	r1, #10
   80d64:	47b8      	blx	r7
   80d66:	e00b      	b.n	80d80 <UnityPrint+0x16c>
   80d68:	215c      	movs	r1, #92	; 0x5c
   80d6a:	47b8      	blx	r7
   80d6c:	e008      	b.n	80d80 <UnityPrint+0x16c>
   80d6e:	6883      	ldr	r3, [r0, #8]
   80d70:	681b      	ldr	r3, [r3, #0]
   80d72:	225c      	movs	r2, #92	; 0x5c
   80d74:	701a      	strb	r2, [r3, #0]
   80d76:	682b      	ldr	r3, [r5, #0]
   80d78:	689b      	ldr	r3, [r3, #8]
   80d7a:	681a      	ldr	r2, [r3, #0]
   80d7c:	3201      	adds	r2, #1
   80d7e:	601a      	str	r2, [r3, #0]
   80d80:	6828      	ldr	r0, [r5, #0]
   80d82:	6882      	ldr	r2, [r0, #8]
   80d84:	6893      	ldr	r3, [r2, #8]
   80d86:	3b01      	subs	r3, #1
   80d88:	6093      	str	r3, [r2, #8]
   80d8a:	2b00      	cmp	r3, #0
   80d8c:	da16      	bge.n	80dbc <UnityPrint+0x1a8>
   80d8e:	6882      	ldr	r2, [r0, #8]
   80d90:	6891      	ldr	r1, [r2, #8]
   80d92:	6993      	ldr	r3, [r2, #24]
   80d94:	4299      	cmp	r1, r3
   80d96:	db0e      	blt.n	80db6 <UnityPrint+0x1a2>
   80d98:	6813      	ldr	r3, [r2, #0]
   80d9a:	226e      	movs	r2, #110	; 0x6e
   80d9c:	701a      	strb	r2, [r3, #0]
   80d9e:	6828      	ldr	r0, [r5, #0]
   80da0:	6882      	ldr	r2, [r0, #8]
   80da2:	6813      	ldr	r3, [r2, #0]
   80da4:	7819      	ldrb	r1, [r3, #0]
   80da6:	290a      	cmp	r1, #10
   80da8:	d002      	beq.n	80db0 <UnityPrint+0x19c>
   80daa:	3301      	adds	r3, #1
   80dac:	6013      	str	r3, [r2, #0]
   80dae:	e03a      	b.n	80e26 <UnityPrint+0x212>
   80db0:	210a      	movs	r1, #10
   80db2:	47b8      	blx	r7
   80db4:	e037      	b.n	80e26 <UnityPrint+0x212>
   80db6:	216e      	movs	r1, #110	; 0x6e
   80db8:	47b8      	blx	r7
   80dba:	e034      	b.n	80e26 <UnityPrint+0x212>
   80dbc:	6883      	ldr	r3, [r0, #8]
   80dbe:	681b      	ldr	r3, [r3, #0]
   80dc0:	226e      	movs	r2, #110	; 0x6e
   80dc2:	701a      	strb	r2, [r3, #0]
   80dc4:	682b      	ldr	r3, [r5, #0]
   80dc6:	689b      	ldr	r3, [r3, #8]
   80dc8:	681a      	ldr	r2, [r3, #0]
   80dca:	3201      	adds	r2, #1
   80dcc:	601a      	str	r2, [r3, #0]
   80dce:	e02a      	b.n	80e26 <UnityPrint+0x212>
   80dd0:	6828      	ldr	r0, [r5, #0]
   80dd2:	6882      	ldr	r2, [r0, #8]
   80dd4:	6893      	ldr	r3, [r2, #8]
   80dd6:	3b01      	subs	r3, #1
   80dd8:	6093      	str	r3, [r2, #8]
   80dda:	2b00      	cmp	r3, #0
   80ddc:	da16      	bge.n	80e0c <UnityPrint+0x1f8>
   80dde:	6882      	ldr	r2, [r0, #8]
   80de0:	6891      	ldr	r1, [r2, #8]
   80de2:	6993      	ldr	r3, [r2, #24]
   80de4:	4299      	cmp	r1, r3
   80de6:	db0e      	blt.n	80e06 <UnityPrint+0x1f2>
   80de8:	6813      	ldr	r3, [r2, #0]
   80dea:	225c      	movs	r2, #92	; 0x5c
   80dec:	701a      	strb	r2, [r3, #0]
   80dee:	6828      	ldr	r0, [r5, #0]
   80df0:	6882      	ldr	r2, [r0, #8]
   80df2:	6813      	ldr	r3, [r2, #0]
   80df4:	7819      	ldrb	r1, [r3, #0]
   80df6:	290a      	cmp	r1, #10
   80df8:	d002      	beq.n	80e00 <UnityPrint+0x1ec>
   80dfa:	3301      	adds	r3, #1
   80dfc:	6013      	str	r3, [r2, #0]
   80dfe:	e00e      	b.n	80e1e <UnityPrint+0x20a>
   80e00:	210a      	movs	r1, #10
   80e02:	47b8      	blx	r7
   80e04:	e00b      	b.n	80e1e <UnityPrint+0x20a>
   80e06:	215c      	movs	r1, #92	; 0x5c
   80e08:	47b8      	blx	r7
   80e0a:	e008      	b.n	80e1e <UnityPrint+0x20a>
   80e0c:	6883      	ldr	r3, [r0, #8]
   80e0e:	681b      	ldr	r3, [r3, #0]
   80e10:	225c      	movs	r2, #92	; 0x5c
   80e12:	701a      	strb	r2, [r3, #0]
   80e14:	682b      	ldr	r3, [r5, #0]
   80e16:	689b      	ldr	r3, [r3, #8]
   80e18:	681a      	ldr	r2, [r3, #0]
   80e1a:	3201      	adds	r2, #1
   80e1c:	601a      	str	r2, [r3, #0]
   80e1e:	f814 0c01 	ldrb.w	r0, [r4, #-1]
   80e22:	2102      	movs	r1, #2
   80e24:	47b0      	blx	r6
   80e26:	f814 3b01 	ldrb.w	r3, [r4], #1
   80e2a:	2b00      	cmp	r3, #0
   80e2c:	f47f aefe 	bne.w	80c2c <UnityPrint+0x18>
   80e30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80e32:	bf00      	nop
   80e34:	20070560 	.word	0x20070560
   80e38:	00080a89 	.word	0x00080a89
   80e3c:	00081ca5 	.word	0x00081ca5

00080e40 <UnityTestResultsBegin>:
   80e40:	b538      	push	{r3, r4, r5, lr}
   80e42:	460d      	mov	r5, r1
   80e44:	4b46      	ldr	r3, [pc, #280]	; (80f60 <UnityTestResultsBegin+0x120>)
   80e46:	4798      	blx	r3
   80e48:	4b46      	ldr	r3, [pc, #280]	; (80f64 <UnityTestResultsBegin+0x124>)
   80e4a:	6818      	ldr	r0, [r3, #0]
   80e4c:	6884      	ldr	r4, [r0, #8]
   80e4e:	68a2      	ldr	r2, [r4, #8]
   80e50:	3a01      	subs	r2, #1
   80e52:	60a2      	str	r2, [r4, #8]
   80e54:	2a00      	cmp	r2, #0
   80e56:	da19      	bge.n	80e8c <UnityTestResultsBegin+0x4c>
   80e58:	6882      	ldr	r2, [r0, #8]
   80e5a:	6893      	ldr	r3, [r2, #8]
   80e5c:	6991      	ldr	r1, [r2, #24]
   80e5e:	428b      	cmp	r3, r1
   80e60:	db10      	blt.n	80e84 <UnityTestResultsBegin+0x44>
   80e62:	6813      	ldr	r3, [r2, #0]
   80e64:	223a      	movs	r2, #58	; 0x3a
   80e66:	701a      	strb	r2, [r3, #0]
   80e68:	4b3e      	ldr	r3, [pc, #248]	; (80f64 <UnityTestResultsBegin+0x124>)
   80e6a:	6818      	ldr	r0, [r3, #0]
   80e6c:	6882      	ldr	r2, [r0, #8]
   80e6e:	6813      	ldr	r3, [r2, #0]
   80e70:	7819      	ldrb	r1, [r3, #0]
   80e72:	290a      	cmp	r1, #10
   80e74:	d002      	beq.n	80e7c <UnityTestResultsBegin+0x3c>
   80e76:	3301      	adds	r3, #1
   80e78:	6013      	str	r3, [r2, #0]
   80e7a:	e011      	b.n	80ea0 <UnityTestResultsBegin+0x60>
   80e7c:	210a      	movs	r1, #10
   80e7e:	4b3a      	ldr	r3, [pc, #232]	; (80f68 <UnityTestResultsBegin+0x128>)
   80e80:	4798      	blx	r3
   80e82:	e00d      	b.n	80ea0 <UnityTestResultsBegin+0x60>
   80e84:	213a      	movs	r1, #58	; 0x3a
   80e86:	4b38      	ldr	r3, [pc, #224]	; (80f68 <UnityTestResultsBegin+0x128>)
   80e88:	4798      	blx	r3
   80e8a:	e009      	b.n	80ea0 <UnityTestResultsBegin+0x60>
   80e8c:	6883      	ldr	r3, [r0, #8]
   80e8e:	681b      	ldr	r3, [r3, #0]
   80e90:	223a      	movs	r2, #58	; 0x3a
   80e92:	701a      	strb	r2, [r3, #0]
   80e94:	4b33      	ldr	r3, [pc, #204]	; (80f64 <UnityTestResultsBegin+0x124>)
   80e96:	681b      	ldr	r3, [r3, #0]
   80e98:	689b      	ldr	r3, [r3, #8]
   80e9a:	681a      	ldr	r2, [r3, #0]
   80e9c:	3201      	adds	r2, #1
   80e9e:	601a      	str	r2, [r3, #0]
   80ea0:	4628      	mov	r0, r5
   80ea2:	4b32      	ldr	r3, [pc, #200]	; (80f6c <UnityTestResultsBegin+0x12c>)
   80ea4:	4798      	blx	r3
   80ea6:	4b2f      	ldr	r3, [pc, #188]	; (80f64 <UnityTestResultsBegin+0x124>)
   80ea8:	6818      	ldr	r0, [r3, #0]
   80eaa:	6882      	ldr	r2, [r0, #8]
   80eac:	6893      	ldr	r3, [r2, #8]
   80eae:	3b01      	subs	r3, #1
   80eb0:	6093      	str	r3, [r2, #8]
   80eb2:	2b00      	cmp	r3, #0
   80eb4:	da19      	bge.n	80eea <UnityTestResultsBegin+0xaa>
   80eb6:	6882      	ldr	r2, [r0, #8]
   80eb8:	6891      	ldr	r1, [r2, #8]
   80eba:	6993      	ldr	r3, [r2, #24]
   80ebc:	4299      	cmp	r1, r3
   80ebe:	db10      	blt.n	80ee2 <UnityTestResultsBegin+0xa2>
   80ec0:	6813      	ldr	r3, [r2, #0]
   80ec2:	223a      	movs	r2, #58	; 0x3a
   80ec4:	701a      	strb	r2, [r3, #0]
   80ec6:	4b27      	ldr	r3, [pc, #156]	; (80f64 <UnityTestResultsBegin+0x124>)
   80ec8:	6818      	ldr	r0, [r3, #0]
   80eca:	6882      	ldr	r2, [r0, #8]
   80ecc:	6813      	ldr	r3, [r2, #0]
   80ece:	7819      	ldrb	r1, [r3, #0]
   80ed0:	290a      	cmp	r1, #10
   80ed2:	d002      	beq.n	80eda <UnityTestResultsBegin+0x9a>
   80ed4:	3301      	adds	r3, #1
   80ed6:	6013      	str	r3, [r2, #0]
   80ed8:	e011      	b.n	80efe <UnityTestResultsBegin+0xbe>
   80eda:	210a      	movs	r1, #10
   80edc:	4b22      	ldr	r3, [pc, #136]	; (80f68 <UnityTestResultsBegin+0x128>)
   80ede:	4798      	blx	r3
   80ee0:	e00d      	b.n	80efe <UnityTestResultsBegin+0xbe>
   80ee2:	213a      	movs	r1, #58	; 0x3a
   80ee4:	4b20      	ldr	r3, [pc, #128]	; (80f68 <UnityTestResultsBegin+0x128>)
   80ee6:	4798      	blx	r3
   80ee8:	e009      	b.n	80efe <UnityTestResultsBegin+0xbe>
   80eea:	6883      	ldr	r3, [r0, #8]
   80eec:	681b      	ldr	r3, [r3, #0]
   80eee:	223a      	movs	r2, #58	; 0x3a
   80ef0:	701a      	strb	r2, [r3, #0]
   80ef2:	4b1c      	ldr	r3, [pc, #112]	; (80f64 <UnityTestResultsBegin+0x124>)
   80ef4:	681b      	ldr	r3, [r3, #0]
   80ef6:	689b      	ldr	r3, [r3, #8]
   80ef8:	681a      	ldr	r2, [r3, #0]
   80efa:	3201      	adds	r2, #1
   80efc:	601a      	str	r2, [r3, #0]
   80efe:	4b1c      	ldr	r3, [pc, #112]	; (80f70 <UnityTestResultsBegin+0x130>)
   80f00:	6858      	ldr	r0, [r3, #4]
   80f02:	4b17      	ldr	r3, [pc, #92]	; (80f60 <UnityTestResultsBegin+0x120>)
   80f04:	4798      	blx	r3
   80f06:	4b17      	ldr	r3, [pc, #92]	; (80f64 <UnityTestResultsBegin+0x124>)
   80f08:	6818      	ldr	r0, [r3, #0]
   80f0a:	6882      	ldr	r2, [r0, #8]
   80f0c:	6893      	ldr	r3, [r2, #8]
   80f0e:	3b01      	subs	r3, #1
   80f10:	6093      	str	r3, [r2, #8]
   80f12:	2b00      	cmp	r3, #0
   80f14:	da19      	bge.n	80f4a <UnityTestResultsBegin+0x10a>
   80f16:	6882      	ldr	r2, [r0, #8]
   80f18:	6891      	ldr	r1, [r2, #8]
   80f1a:	6993      	ldr	r3, [r2, #24]
   80f1c:	4299      	cmp	r1, r3
   80f1e:	db10      	blt.n	80f42 <UnityTestResultsBegin+0x102>
   80f20:	6813      	ldr	r3, [r2, #0]
   80f22:	223a      	movs	r2, #58	; 0x3a
   80f24:	701a      	strb	r2, [r3, #0]
   80f26:	4b0f      	ldr	r3, [pc, #60]	; (80f64 <UnityTestResultsBegin+0x124>)
   80f28:	6818      	ldr	r0, [r3, #0]
   80f2a:	6882      	ldr	r2, [r0, #8]
   80f2c:	6813      	ldr	r3, [r2, #0]
   80f2e:	7819      	ldrb	r1, [r3, #0]
   80f30:	290a      	cmp	r1, #10
   80f32:	d002      	beq.n	80f3a <UnityTestResultsBegin+0xfa>
   80f34:	3301      	adds	r3, #1
   80f36:	6013      	str	r3, [r2, #0]
   80f38:	bd38      	pop	{r3, r4, r5, pc}
   80f3a:	210a      	movs	r1, #10
   80f3c:	4b0a      	ldr	r3, [pc, #40]	; (80f68 <UnityTestResultsBegin+0x128>)
   80f3e:	4798      	blx	r3
   80f40:	bd38      	pop	{r3, r4, r5, pc}
   80f42:	213a      	movs	r1, #58	; 0x3a
   80f44:	4b08      	ldr	r3, [pc, #32]	; (80f68 <UnityTestResultsBegin+0x128>)
   80f46:	4798      	blx	r3
   80f48:	bd38      	pop	{r3, r4, r5, pc}
   80f4a:	6883      	ldr	r3, [r0, #8]
   80f4c:	681b      	ldr	r3, [r3, #0]
   80f4e:	223a      	movs	r2, #58	; 0x3a
   80f50:	701a      	strb	r2, [r3, #0]
   80f52:	4b04      	ldr	r3, [pc, #16]	; (80f64 <UnityTestResultsBegin+0x124>)
   80f54:	681b      	ldr	r3, [r3, #0]
   80f56:	689b      	ldr	r3, [r3, #8]
   80f58:	681a      	ldr	r2, [r3, #0]
   80f5a:	3201      	adds	r2, #1
   80f5c:	601a      	str	r2, [r3, #0]
   80f5e:	bd38      	pop	{r3, r4, r5, pc}
   80f60:	00080c15 	.word	0x00080c15
   80f64:	20070560 	.word	0x20070560
   80f68:	00081ca5 	.word	0x00081ca5
   80f6c:	000808ed 	.word	0x000808ed
   80f70:	20070afc 	.word	0x20070afc

00080f74 <UnityPrintFail>:
   80f74:	b508      	push	{r3, lr}
   80f76:	4802      	ldr	r0, [pc, #8]	; (80f80 <UnityPrintFail+0xc>)
   80f78:	4b02      	ldr	r3, [pc, #8]	; (80f84 <UnityPrintFail+0x10>)
   80f7a:	4798      	blx	r3
   80f7c:	bd08      	pop	{r3, pc}
   80f7e:	bf00      	nop
   80f80:	00082e80 	.word	0x00082e80
   80f84:	00080c15 	.word	0x00080c15

00080f88 <UnityPrintOk>:
   80f88:	b508      	push	{r3, lr}
   80f8a:	4802      	ldr	r0, [pc, #8]	; (80f94 <UnityPrintOk+0xc>)
   80f8c:	4b02      	ldr	r3, [pc, #8]	; (80f98 <UnityPrintOk+0x10>)
   80f8e:	4798      	blx	r3
   80f90:	bd08      	pop	{r3, pc}
   80f92:	bf00      	nop
   80f94:	00082e7c 	.word	0x00082e7c
   80f98:	00080c15 	.word	0x00080c15

00080f9c <UnityConcludeTest>:
   80f9c:	b508      	push	{r3, lr}
   80f9e:	4b24      	ldr	r3, [pc, #144]	; (81030 <UnityConcludeTest+0x94>)
   80fa0:	69db      	ldr	r3, [r3, #28]
   80fa2:	b123      	cbz	r3, 80fae <UnityConcludeTest+0x12>
   80fa4:	4b22      	ldr	r3, [pc, #136]	; (81030 <UnityConcludeTest+0x94>)
   80fa6:	695a      	ldr	r2, [r3, #20]
   80fa8:	3201      	adds	r2, #1
   80faa:	615a      	str	r2, [r3, #20]
   80fac:	e00f      	b.n	80fce <UnityConcludeTest+0x32>
   80fae:	4b20      	ldr	r3, [pc, #128]	; (81030 <UnityConcludeTest+0x94>)
   80fb0:	699b      	ldr	r3, [r3, #24]
   80fb2:	b943      	cbnz	r3, 80fc6 <UnityConcludeTest+0x2a>
   80fb4:	4b1e      	ldr	r3, [pc, #120]	; (81030 <UnityConcludeTest+0x94>)
   80fb6:	6818      	ldr	r0, [r3, #0]
   80fb8:	6899      	ldr	r1, [r3, #8]
   80fba:	4b1e      	ldr	r3, [pc, #120]	; (81034 <UnityConcludeTest+0x98>)
   80fbc:	4798      	blx	r3
   80fbe:	481e      	ldr	r0, [pc, #120]	; (81038 <UnityConcludeTest+0x9c>)
   80fc0:	4b1e      	ldr	r3, [pc, #120]	; (8103c <UnityConcludeTest+0xa0>)
   80fc2:	4798      	blx	r3
   80fc4:	e003      	b.n	80fce <UnityConcludeTest+0x32>
   80fc6:	4b1a      	ldr	r3, [pc, #104]	; (81030 <UnityConcludeTest+0x94>)
   80fc8:	691a      	ldr	r2, [r3, #16]
   80fca:	3201      	adds	r2, #1
   80fcc:	611a      	str	r2, [r3, #16]
   80fce:	4b18      	ldr	r3, [pc, #96]	; (81030 <UnityConcludeTest+0x94>)
   80fd0:	2200      	movs	r2, #0
   80fd2:	619a      	str	r2, [r3, #24]
   80fd4:	61da      	str	r2, [r3, #28]
   80fd6:	4b1a      	ldr	r3, [pc, #104]	; (81040 <UnityConcludeTest+0xa4>)
   80fd8:	6818      	ldr	r0, [r3, #0]
   80fda:	6882      	ldr	r2, [r0, #8]
   80fdc:	6893      	ldr	r3, [r2, #8]
   80fde:	3b01      	subs	r3, #1
   80fe0:	6093      	str	r3, [r2, #8]
   80fe2:	2b00      	cmp	r3, #0
   80fe4:	da19      	bge.n	8101a <UnityConcludeTest+0x7e>
   80fe6:	6882      	ldr	r2, [r0, #8]
   80fe8:	6891      	ldr	r1, [r2, #8]
   80fea:	6993      	ldr	r3, [r2, #24]
   80fec:	4299      	cmp	r1, r3
   80fee:	db10      	blt.n	81012 <UnityConcludeTest+0x76>
   80ff0:	6813      	ldr	r3, [r2, #0]
   80ff2:	220a      	movs	r2, #10
   80ff4:	701a      	strb	r2, [r3, #0]
   80ff6:	4b12      	ldr	r3, [pc, #72]	; (81040 <UnityConcludeTest+0xa4>)
   80ff8:	6818      	ldr	r0, [r3, #0]
   80ffa:	6882      	ldr	r2, [r0, #8]
   80ffc:	6813      	ldr	r3, [r2, #0]
   80ffe:	7819      	ldrb	r1, [r3, #0]
   81000:	290a      	cmp	r1, #10
   81002:	d002      	beq.n	8100a <UnityConcludeTest+0x6e>
   81004:	3301      	adds	r3, #1
   81006:	6013      	str	r3, [r2, #0]
   81008:	bd08      	pop	{r3, pc}
   8100a:	210a      	movs	r1, #10
   8100c:	4b0d      	ldr	r3, [pc, #52]	; (81044 <UnityConcludeTest+0xa8>)
   8100e:	4798      	blx	r3
   81010:	bd08      	pop	{r3, pc}
   81012:	210a      	movs	r1, #10
   81014:	4b0b      	ldr	r3, [pc, #44]	; (81044 <UnityConcludeTest+0xa8>)
   81016:	4798      	blx	r3
   81018:	bd08      	pop	{r3, pc}
   8101a:	6883      	ldr	r3, [r0, #8]
   8101c:	681b      	ldr	r3, [r3, #0]
   8101e:	220a      	movs	r2, #10
   81020:	701a      	strb	r2, [r3, #0]
   81022:	4b07      	ldr	r3, [pc, #28]	; (81040 <UnityConcludeTest+0xa4>)
   81024:	681b      	ldr	r3, [r3, #0]
   81026:	689b      	ldr	r3, [r3, #8]
   81028:	681a      	ldr	r2, [r3, #0]
   8102a:	3201      	adds	r2, #1
   8102c:	601a      	str	r2, [r3, #0]
   8102e:	bd08      	pop	{r3, pc}
   81030:	20070afc 	.word	0x20070afc
   81034:	00080e41 	.word	0x00080e41
   81038:	00082ec0 	.word	0x00082ec0
   8103c:	00080c15 	.word	0x00080c15
   81040:	20070560 	.word	0x20070560
   81044:	00081ca5 	.word	0x00081ca5

00081048 <UnityFail>:
   81048:	b510      	push	{r4, lr}
   8104a:	4604      	mov	r4, r0
   8104c:	4b3a      	ldr	r3, [pc, #232]	; (81138 <UnityFail+0xf0>)
   8104e:	699b      	ldr	r3, [r3, #24]
   81050:	2b00      	cmp	r3, #0
   81052:	d16f      	bne.n	81134 <UnityFail+0xec>
   81054:	4b38      	ldr	r3, [pc, #224]	; (81138 <UnityFail+0xf0>)
   81056:	69db      	ldr	r3, [r3, #28]
   81058:	2b00      	cmp	r3, #0
   8105a:	d16b      	bne.n	81134 <UnityFail+0xec>
   8105c:	4b36      	ldr	r3, [pc, #216]	; (81138 <UnityFail+0xf0>)
   8105e:	6818      	ldr	r0, [r3, #0]
   81060:	4b36      	ldr	r3, [pc, #216]	; (8113c <UnityFail+0xf4>)
   81062:	4798      	blx	r3
   81064:	4b36      	ldr	r3, [pc, #216]	; (81140 <UnityFail+0xf8>)
   81066:	4798      	blx	r3
   81068:	2c00      	cmp	r4, #0
   8106a:	d05d      	beq.n	81128 <UnityFail+0xe0>
   8106c:	4b35      	ldr	r3, [pc, #212]	; (81144 <UnityFail+0xfc>)
   8106e:	6818      	ldr	r0, [r3, #0]
   81070:	6882      	ldr	r2, [r0, #8]
   81072:	6893      	ldr	r3, [r2, #8]
   81074:	3b01      	subs	r3, #1
   81076:	6093      	str	r3, [r2, #8]
   81078:	2b00      	cmp	r3, #0
   8107a:	da19      	bge.n	810b0 <UnityFail+0x68>
   8107c:	6882      	ldr	r2, [r0, #8]
   8107e:	6891      	ldr	r1, [r2, #8]
   81080:	6993      	ldr	r3, [r2, #24]
   81082:	4299      	cmp	r1, r3
   81084:	db10      	blt.n	810a8 <UnityFail+0x60>
   81086:	6813      	ldr	r3, [r2, #0]
   81088:	223a      	movs	r2, #58	; 0x3a
   8108a:	701a      	strb	r2, [r3, #0]
   8108c:	4b2d      	ldr	r3, [pc, #180]	; (81144 <UnityFail+0xfc>)
   8108e:	6818      	ldr	r0, [r3, #0]
   81090:	6882      	ldr	r2, [r0, #8]
   81092:	6813      	ldr	r3, [r2, #0]
   81094:	7819      	ldrb	r1, [r3, #0]
   81096:	290a      	cmp	r1, #10
   81098:	d002      	beq.n	810a0 <UnityFail+0x58>
   8109a:	3301      	adds	r3, #1
   8109c:	6013      	str	r3, [r2, #0]
   8109e:	e011      	b.n	810c4 <UnityFail+0x7c>
   810a0:	210a      	movs	r1, #10
   810a2:	4b29      	ldr	r3, [pc, #164]	; (81148 <UnityFail+0x100>)
   810a4:	4798      	blx	r3
   810a6:	e00d      	b.n	810c4 <UnityFail+0x7c>
   810a8:	213a      	movs	r1, #58	; 0x3a
   810aa:	4b27      	ldr	r3, [pc, #156]	; (81148 <UnityFail+0x100>)
   810ac:	4798      	blx	r3
   810ae:	e009      	b.n	810c4 <UnityFail+0x7c>
   810b0:	6883      	ldr	r3, [r0, #8]
   810b2:	681b      	ldr	r3, [r3, #0]
   810b4:	223a      	movs	r2, #58	; 0x3a
   810b6:	701a      	strb	r2, [r3, #0]
   810b8:	4b22      	ldr	r3, [pc, #136]	; (81144 <UnityFail+0xfc>)
   810ba:	681b      	ldr	r3, [r3, #0]
   810bc:	689b      	ldr	r3, [r3, #8]
   810be:	681a      	ldr	r2, [r3, #0]
   810c0:	3201      	adds	r2, #1
   810c2:	601a      	str	r2, [r3, #0]
   810c4:	7823      	ldrb	r3, [r4, #0]
   810c6:	2b20      	cmp	r3, #32
   810c8:	d02b      	beq.n	81122 <UnityFail+0xda>
   810ca:	4b1e      	ldr	r3, [pc, #120]	; (81144 <UnityFail+0xfc>)
   810cc:	6818      	ldr	r0, [r3, #0]
   810ce:	6882      	ldr	r2, [r0, #8]
   810d0:	6893      	ldr	r3, [r2, #8]
   810d2:	3b01      	subs	r3, #1
   810d4:	6093      	str	r3, [r2, #8]
   810d6:	2b00      	cmp	r3, #0
   810d8:	da19      	bge.n	8110e <UnityFail+0xc6>
   810da:	6882      	ldr	r2, [r0, #8]
   810dc:	6891      	ldr	r1, [r2, #8]
   810de:	6993      	ldr	r3, [r2, #24]
   810e0:	4299      	cmp	r1, r3
   810e2:	db10      	blt.n	81106 <UnityFail+0xbe>
   810e4:	6813      	ldr	r3, [r2, #0]
   810e6:	2220      	movs	r2, #32
   810e8:	701a      	strb	r2, [r3, #0]
   810ea:	4b16      	ldr	r3, [pc, #88]	; (81144 <UnityFail+0xfc>)
   810ec:	6818      	ldr	r0, [r3, #0]
   810ee:	6882      	ldr	r2, [r0, #8]
   810f0:	6813      	ldr	r3, [r2, #0]
   810f2:	7819      	ldrb	r1, [r3, #0]
   810f4:	290a      	cmp	r1, #10
   810f6:	d002      	beq.n	810fe <UnityFail+0xb6>
   810f8:	3301      	adds	r3, #1
   810fa:	6013      	str	r3, [r2, #0]
   810fc:	e011      	b.n	81122 <UnityFail+0xda>
   810fe:	210a      	movs	r1, #10
   81100:	4b11      	ldr	r3, [pc, #68]	; (81148 <UnityFail+0x100>)
   81102:	4798      	blx	r3
   81104:	e00d      	b.n	81122 <UnityFail+0xda>
   81106:	2120      	movs	r1, #32
   81108:	4b0f      	ldr	r3, [pc, #60]	; (81148 <UnityFail+0x100>)
   8110a:	4798      	blx	r3
   8110c:	e009      	b.n	81122 <UnityFail+0xda>
   8110e:	6883      	ldr	r3, [r0, #8]
   81110:	681b      	ldr	r3, [r3, #0]
   81112:	2220      	movs	r2, #32
   81114:	701a      	strb	r2, [r3, #0]
   81116:	4b0b      	ldr	r3, [pc, #44]	; (81144 <UnityFail+0xfc>)
   81118:	681b      	ldr	r3, [r3, #0]
   8111a:	689b      	ldr	r3, [r3, #8]
   8111c:	681a      	ldr	r2, [r3, #0]
   8111e:	3201      	adds	r2, #1
   81120:	601a      	str	r2, [r3, #0]
   81122:	4620      	mov	r0, r4
   81124:	4b09      	ldr	r3, [pc, #36]	; (8114c <UnityFail+0x104>)
   81126:	4798      	blx	r3
   81128:	4803      	ldr	r0, [pc, #12]	; (81138 <UnityFail+0xf0>)
   8112a:	2101      	movs	r1, #1
   8112c:	6181      	str	r1, [r0, #24]
   8112e:	3020      	adds	r0, #32
   81130:	4b07      	ldr	r3, [pc, #28]	; (81150 <UnityFail+0x108>)
   81132:	4798      	blx	r3
   81134:	bd10      	pop	{r4, pc}
   81136:	bf00      	nop
   81138:	20070afc 	.word	0x20070afc
   8113c:	00080e41 	.word	0x00080e41
   81140:	00080f75 	.word	0x00080f75
   81144:	20070560 	.word	0x20070560
   81148:	00081ca5 	.word	0x00081ca5
   8114c:	00080c15 	.word	0x00080c15
   81150:	00081b95 	.word	0x00081b95

00081154 <UnityDefaultTestRun>:
   81154:	b500      	push	{lr}
   81156:	b083      	sub	sp, #12
   81158:	9001      	str	r0, [sp, #4]
   8115a:	480e      	ldr	r0, [pc, #56]	; (81194 <UnityDefaultTestRun+0x40>)
   8115c:	6041      	str	r1, [r0, #4]
   8115e:	6082      	str	r2, [r0, #8]
   81160:	68c3      	ldr	r3, [r0, #12]
   81162:	3301      	adds	r3, #1
   81164:	60c3      	str	r3, [r0, #12]
   81166:	3020      	adds	r0, #32
   81168:	4b0b      	ldr	r3, [pc, #44]	; (81198 <UnityDefaultTestRun+0x44>)
   8116a:	4798      	blx	r3
   8116c:	b918      	cbnz	r0, 81176 <UnityDefaultTestRun+0x22>
   8116e:	4b0b      	ldr	r3, [pc, #44]	; (8119c <UnityDefaultTestRun+0x48>)
   81170:	4798      	blx	r3
   81172:	9b01      	ldr	r3, [sp, #4]
   81174:	4798      	blx	r3
   81176:	480a      	ldr	r0, [pc, #40]	; (811a0 <UnityDefaultTestRun+0x4c>)
   81178:	4b07      	ldr	r3, [pc, #28]	; (81198 <UnityDefaultTestRun+0x44>)
   8117a:	4798      	blx	r3
   8117c:	b920      	cbnz	r0, 81188 <UnityDefaultTestRun+0x34>
   8117e:	4b05      	ldr	r3, [pc, #20]	; (81194 <UnityDefaultTestRun+0x40>)
   81180:	69db      	ldr	r3, [r3, #28]
   81182:	b90b      	cbnz	r3, 81188 <UnityDefaultTestRun+0x34>
   81184:	4b07      	ldr	r3, [pc, #28]	; (811a4 <UnityDefaultTestRun+0x50>)
   81186:	4798      	blx	r3
   81188:	4b07      	ldr	r3, [pc, #28]	; (811a8 <UnityDefaultTestRun+0x54>)
   8118a:	4798      	blx	r3
   8118c:	b003      	add	sp, #12
   8118e:	f85d fb04 	ldr.w	pc, [sp], #4
   81192:	bf00      	nop
   81194:	20070afc 	.word	0x20070afc
   81198:	00081b89 	.word	0x00081b89
   8119c:	000808e5 	.word	0x000808e5
   811a0:	20070b1c 	.word	0x20070b1c
   811a4:	000808e9 	.word	0x000808e9
   811a8:	00080f9d 	.word	0x00080f9d

000811ac <UnityBegin>:
   811ac:	4b05      	ldr	r3, [pc, #20]	; (811c4 <UnityBegin+0x18>)
   811ae:	6018      	str	r0, [r3, #0]
   811b0:	2200      	movs	r2, #0
   811b2:	605a      	str	r2, [r3, #4]
   811b4:	609a      	str	r2, [r3, #8]
   811b6:	60da      	str	r2, [r3, #12]
   811b8:	611a      	str	r2, [r3, #16]
   811ba:	615a      	str	r2, [r3, #20]
   811bc:	619a      	str	r2, [r3, #24]
   811be:	61da      	str	r2, [r3, #28]
   811c0:	4770      	bx	lr
   811c2:	bf00      	nop
   811c4:	20070afc 	.word	0x20070afc

000811c8 <UnityEnd>:
   811c8:	b570      	push	{r4, r5, r6, lr}
   811ca:	4b66      	ldr	r3, [pc, #408]	; (81364 <UnityEnd+0x19c>)
   811cc:	6818      	ldr	r0, [r3, #0]
   811ce:	6882      	ldr	r2, [r0, #8]
   811d0:	6893      	ldr	r3, [r2, #8]
   811d2:	3b01      	subs	r3, #1
   811d4:	6093      	str	r3, [r2, #8]
   811d6:	2b00      	cmp	r3, #0
   811d8:	da19      	bge.n	8120e <UnityEnd+0x46>
   811da:	6882      	ldr	r2, [r0, #8]
   811dc:	6891      	ldr	r1, [r2, #8]
   811de:	6993      	ldr	r3, [r2, #24]
   811e0:	4299      	cmp	r1, r3
   811e2:	db10      	blt.n	81206 <UnityEnd+0x3e>
   811e4:	6813      	ldr	r3, [r2, #0]
   811e6:	220a      	movs	r2, #10
   811e8:	701a      	strb	r2, [r3, #0]
   811ea:	4b5e      	ldr	r3, [pc, #376]	; (81364 <UnityEnd+0x19c>)
   811ec:	6818      	ldr	r0, [r3, #0]
   811ee:	6882      	ldr	r2, [r0, #8]
   811f0:	6813      	ldr	r3, [r2, #0]
   811f2:	7819      	ldrb	r1, [r3, #0]
   811f4:	290a      	cmp	r1, #10
   811f6:	d002      	beq.n	811fe <UnityEnd+0x36>
   811f8:	3301      	adds	r3, #1
   811fa:	6013      	str	r3, [r2, #0]
   811fc:	e011      	b.n	81222 <UnityEnd+0x5a>
   811fe:	210a      	movs	r1, #10
   81200:	4b59      	ldr	r3, [pc, #356]	; (81368 <UnityEnd+0x1a0>)
   81202:	4798      	blx	r3
   81204:	e00d      	b.n	81222 <UnityEnd+0x5a>
   81206:	210a      	movs	r1, #10
   81208:	4b57      	ldr	r3, [pc, #348]	; (81368 <UnityEnd+0x1a0>)
   8120a:	4798      	blx	r3
   8120c:	e009      	b.n	81222 <UnityEnd+0x5a>
   8120e:	6883      	ldr	r3, [r0, #8]
   81210:	681b      	ldr	r3, [r3, #0]
   81212:	220a      	movs	r2, #10
   81214:	701a      	strb	r2, [r3, #0]
   81216:	4b53      	ldr	r3, [pc, #332]	; (81364 <UnityEnd+0x19c>)
   81218:	681b      	ldr	r3, [r3, #0]
   8121a:	689b      	ldr	r3, [r3, #8]
   8121c:	681a      	ldr	r2, [r3, #0]
   8121e:	3201      	adds	r2, #1
   81220:	601a      	str	r2, [r3, #0]
   81222:	4852      	ldr	r0, [pc, #328]	; (8136c <UnityEnd+0x1a4>)
   81224:	4b52      	ldr	r3, [pc, #328]	; (81370 <UnityEnd+0x1a8>)
   81226:	4798      	blx	r3
   81228:	4b4e      	ldr	r3, [pc, #312]	; (81364 <UnityEnd+0x19c>)
   8122a:	6818      	ldr	r0, [r3, #0]
   8122c:	6882      	ldr	r2, [r0, #8]
   8122e:	6893      	ldr	r3, [r2, #8]
   81230:	3b01      	subs	r3, #1
   81232:	6093      	str	r3, [r2, #8]
   81234:	2b00      	cmp	r3, #0
   81236:	da19      	bge.n	8126c <UnityEnd+0xa4>
   81238:	6882      	ldr	r2, [r0, #8]
   8123a:	6891      	ldr	r1, [r2, #8]
   8123c:	6993      	ldr	r3, [r2, #24]
   8123e:	4299      	cmp	r1, r3
   81240:	db10      	blt.n	81264 <UnityEnd+0x9c>
   81242:	6813      	ldr	r3, [r2, #0]
   81244:	220a      	movs	r2, #10
   81246:	701a      	strb	r2, [r3, #0]
   81248:	4b46      	ldr	r3, [pc, #280]	; (81364 <UnityEnd+0x19c>)
   8124a:	6818      	ldr	r0, [r3, #0]
   8124c:	6882      	ldr	r2, [r0, #8]
   8124e:	6813      	ldr	r3, [r2, #0]
   81250:	7819      	ldrb	r1, [r3, #0]
   81252:	290a      	cmp	r1, #10
   81254:	d002      	beq.n	8125c <UnityEnd+0x94>
   81256:	3301      	adds	r3, #1
   81258:	6013      	str	r3, [r2, #0]
   8125a:	e011      	b.n	81280 <UnityEnd+0xb8>
   8125c:	210a      	movs	r1, #10
   8125e:	4b42      	ldr	r3, [pc, #264]	; (81368 <UnityEnd+0x1a0>)
   81260:	4798      	blx	r3
   81262:	e00d      	b.n	81280 <UnityEnd+0xb8>
   81264:	210a      	movs	r1, #10
   81266:	4b40      	ldr	r3, [pc, #256]	; (81368 <UnityEnd+0x1a0>)
   81268:	4798      	blx	r3
   8126a:	e009      	b.n	81280 <UnityEnd+0xb8>
   8126c:	6883      	ldr	r3, [r0, #8]
   8126e:	681b      	ldr	r3, [r3, #0]
   81270:	220a      	movs	r2, #10
   81272:	701a      	strb	r2, [r3, #0]
   81274:	4b3b      	ldr	r3, [pc, #236]	; (81364 <UnityEnd+0x19c>)
   81276:	681b      	ldr	r3, [r3, #0]
   81278:	689b      	ldr	r3, [r3, #8]
   8127a:	681a      	ldr	r2, [r3, #0]
   8127c:	3201      	adds	r2, #1
   8127e:	601a      	str	r2, [r3, #0]
   81280:	4e3c      	ldr	r6, [pc, #240]	; (81374 <UnityEnd+0x1ac>)
   81282:	68f0      	ldr	r0, [r6, #12]
   81284:	4d3c      	ldr	r5, [pc, #240]	; (81378 <UnityEnd+0x1b0>)
   81286:	47a8      	blx	r5
   81288:	483c      	ldr	r0, [pc, #240]	; (8137c <UnityEnd+0x1b4>)
   8128a:	4c39      	ldr	r4, [pc, #228]	; (81370 <UnityEnd+0x1a8>)
   8128c:	47a0      	blx	r4
   8128e:	6930      	ldr	r0, [r6, #16]
   81290:	47a8      	blx	r5
   81292:	483b      	ldr	r0, [pc, #236]	; (81380 <UnityEnd+0x1b8>)
   81294:	47a0      	blx	r4
   81296:	6970      	ldr	r0, [r6, #20]
   81298:	47a8      	blx	r5
   8129a:	483a      	ldr	r0, [pc, #232]	; (81384 <UnityEnd+0x1bc>)
   8129c:	47a0      	blx	r4
   8129e:	4b31      	ldr	r3, [pc, #196]	; (81364 <UnityEnd+0x19c>)
   812a0:	6818      	ldr	r0, [r3, #0]
   812a2:	6882      	ldr	r2, [r0, #8]
   812a4:	6893      	ldr	r3, [r2, #8]
   812a6:	3b01      	subs	r3, #1
   812a8:	6093      	str	r3, [r2, #8]
   812aa:	2b00      	cmp	r3, #0
   812ac:	da19      	bge.n	812e2 <UnityEnd+0x11a>
   812ae:	6882      	ldr	r2, [r0, #8]
   812b0:	6891      	ldr	r1, [r2, #8]
   812b2:	6993      	ldr	r3, [r2, #24]
   812b4:	4299      	cmp	r1, r3
   812b6:	db10      	blt.n	812da <UnityEnd+0x112>
   812b8:	6813      	ldr	r3, [r2, #0]
   812ba:	220a      	movs	r2, #10
   812bc:	701a      	strb	r2, [r3, #0]
   812be:	4b29      	ldr	r3, [pc, #164]	; (81364 <UnityEnd+0x19c>)
   812c0:	6818      	ldr	r0, [r3, #0]
   812c2:	6882      	ldr	r2, [r0, #8]
   812c4:	6813      	ldr	r3, [r2, #0]
   812c6:	7819      	ldrb	r1, [r3, #0]
   812c8:	290a      	cmp	r1, #10
   812ca:	d002      	beq.n	812d2 <UnityEnd+0x10a>
   812cc:	3301      	adds	r3, #1
   812ce:	6013      	str	r3, [r2, #0]
   812d0:	e011      	b.n	812f6 <UnityEnd+0x12e>
   812d2:	210a      	movs	r1, #10
   812d4:	4b24      	ldr	r3, [pc, #144]	; (81368 <UnityEnd+0x1a0>)
   812d6:	4798      	blx	r3
   812d8:	e00d      	b.n	812f6 <UnityEnd+0x12e>
   812da:	210a      	movs	r1, #10
   812dc:	4b22      	ldr	r3, [pc, #136]	; (81368 <UnityEnd+0x1a0>)
   812de:	4798      	blx	r3
   812e0:	e009      	b.n	812f6 <UnityEnd+0x12e>
   812e2:	6883      	ldr	r3, [r0, #8]
   812e4:	681b      	ldr	r3, [r3, #0]
   812e6:	220a      	movs	r2, #10
   812e8:	701a      	strb	r2, [r3, #0]
   812ea:	4b1e      	ldr	r3, [pc, #120]	; (81364 <UnityEnd+0x19c>)
   812ec:	681b      	ldr	r3, [r3, #0]
   812ee:	689b      	ldr	r3, [r3, #8]
   812f0:	681a      	ldr	r2, [r3, #0]
   812f2:	3201      	adds	r2, #1
   812f4:	601a      	str	r2, [r3, #0]
   812f6:	4b1f      	ldr	r3, [pc, #124]	; (81374 <UnityEnd+0x1ac>)
   812f8:	691b      	ldr	r3, [r3, #16]
   812fa:	b913      	cbnz	r3, 81302 <UnityEnd+0x13a>
   812fc:	4b22      	ldr	r3, [pc, #136]	; (81388 <UnityEnd+0x1c0>)
   812fe:	4798      	blx	r3
   81300:	e001      	b.n	81306 <UnityEnd+0x13e>
   81302:	4b22      	ldr	r3, [pc, #136]	; (8138c <UnityEnd+0x1c4>)
   81304:	4798      	blx	r3
   81306:	4b17      	ldr	r3, [pc, #92]	; (81364 <UnityEnd+0x19c>)
   81308:	6818      	ldr	r0, [r3, #0]
   8130a:	6882      	ldr	r2, [r0, #8]
   8130c:	6893      	ldr	r3, [r2, #8]
   8130e:	3b01      	subs	r3, #1
   81310:	6093      	str	r3, [r2, #8]
   81312:	2b00      	cmp	r3, #0
   81314:	da19      	bge.n	8134a <UnityEnd+0x182>
   81316:	6882      	ldr	r2, [r0, #8]
   81318:	6891      	ldr	r1, [r2, #8]
   8131a:	6993      	ldr	r3, [r2, #24]
   8131c:	4299      	cmp	r1, r3
   8131e:	db10      	blt.n	81342 <UnityEnd+0x17a>
   81320:	6813      	ldr	r3, [r2, #0]
   81322:	220a      	movs	r2, #10
   81324:	701a      	strb	r2, [r3, #0]
   81326:	4b0f      	ldr	r3, [pc, #60]	; (81364 <UnityEnd+0x19c>)
   81328:	6818      	ldr	r0, [r3, #0]
   8132a:	6882      	ldr	r2, [r0, #8]
   8132c:	6813      	ldr	r3, [r2, #0]
   8132e:	7819      	ldrb	r1, [r3, #0]
   81330:	290a      	cmp	r1, #10
   81332:	d002      	beq.n	8133a <UnityEnd+0x172>
   81334:	3301      	adds	r3, #1
   81336:	6013      	str	r3, [r2, #0]
   81338:	e011      	b.n	8135e <UnityEnd+0x196>
   8133a:	210a      	movs	r1, #10
   8133c:	4b0a      	ldr	r3, [pc, #40]	; (81368 <UnityEnd+0x1a0>)
   8133e:	4798      	blx	r3
   81340:	e00d      	b.n	8135e <UnityEnd+0x196>
   81342:	210a      	movs	r1, #10
   81344:	4b08      	ldr	r3, [pc, #32]	; (81368 <UnityEnd+0x1a0>)
   81346:	4798      	blx	r3
   81348:	e009      	b.n	8135e <UnityEnd+0x196>
   8134a:	6883      	ldr	r3, [r0, #8]
   8134c:	681b      	ldr	r3, [r3, #0]
   8134e:	220a      	movs	r2, #10
   81350:	701a      	strb	r2, [r3, #0]
   81352:	4b04      	ldr	r3, [pc, #16]	; (81364 <UnityEnd+0x19c>)
   81354:	681b      	ldr	r3, [r3, #0]
   81356:	689b      	ldr	r3, [r3, #8]
   81358:	681a      	ldr	r2, [r3, #0]
   8135a:	3201      	adds	r2, #1
   8135c:	601a      	str	r2, [r3, #0]
   8135e:	4b05      	ldr	r3, [pc, #20]	; (81374 <UnityEnd+0x1ac>)
   81360:	6918      	ldr	r0, [r3, #16]
   81362:	bd70      	pop	{r4, r5, r6, pc}
   81364:	20070560 	.word	0x20070560
   81368:	00081ca5 	.word	0x00081ca5
   8136c:	00082e88 	.word	0x00082e88
   81370:	00080c15 	.word	0x00080c15
   81374:	20070afc 	.word	0x20070afc
   81378:	000808ed 	.word	0x000808ed
   8137c:	00082eb8 	.word	0x00082eb8
   81380:	00082ea0 	.word	0x00082ea0
   81384:	00082eac 	.word	0x00082eac
   81388:	00080f89 	.word	0x00080f89
   8138c:	00080f75 	.word	0x00080f75

00081390 <sysclk_init>:
   81390:	b510      	push	{r4, lr}
   81392:	480e      	ldr	r0, [pc, #56]	; (813cc <sysclk_init+0x3c>)
   81394:	4b0e      	ldr	r3, [pc, #56]	; (813d0 <sysclk_init+0x40>)
   81396:	4798      	blx	r3
   81398:	2000      	movs	r0, #0
   8139a:	213e      	movs	r1, #62	; 0x3e
   8139c:	4b0d      	ldr	r3, [pc, #52]	; (813d4 <sysclk_init+0x44>)
   8139e:	4798      	blx	r3
   813a0:	4c0d      	ldr	r4, [pc, #52]	; (813d8 <sysclk_init+0x48>)
   813a2:	47a0      	blx	r4
   813a4:	2800      	cmp	r0, #0
   813a6:	d0fc      	beq.n	813a2 <sysclk_init+0x12>
   813a8:	4b0c      	ldr	r3, [pc, #48]	; (813dc <sysclk_init+0x4c>)
   813aa:	4798      	blx	r3
   813ac:	4a0c      	ldr	r2, [pc, #48]	; (813e0 <sysclk_init+0x50>)
   813ae:	4b0d      	ldr	r3, [pc, #52]	; (813e4 <sysclk_init+0x54>)
   813b0:	629a      	str	r2, [r3, #40]	; 0x28
   813b2:	4c0d      	ldr	r4, [pc, #52]	; (813e8 <sysclk_init+0x58>)
   813b4:	47a0      	blx	r4
   813b6:	2800      	cmp	r0, #0
   813b8:	d0fc      	beq.n	813b4 <sysclk_init+0x24>
   813ba:	2010      	movs	r0, #16
   813bc:	4b0b      	ldr	r3, [pc, #44]	; (813ec <sysclk_init+0x5c>)
   813be:	4798      	blx	r3
   813c0:	4b0b      	ldr	r3, [pc, #44]	; (813f0 <sysclk_init+0x60>)
   813c2:	4798      	blx	r3
   813c4:	4801      	ldr	r0, [pc, #4]	; (813cc <sysclk_init+0x3c>)
   813c6:	4b02      	ldr	r3, [pc, #8]	; (813d0 <sysclk_init+0x40>)
   813c8:	4798      	blx	r3
   813ca:	bd10      	pop	{r4, pc}
   813cc:	0501bd00 	.word	0x0501bd00
   813d0:	200700a5 	.word	0x200700a5
   813d4:	00081799 	.word	0x00081799
   813d8:	000817ed 	.word	0x000817ed
   813dc:	000817fd 	.word	0x000817fd
   813e0:	200d3f01 	.word	0x200d3f01
   813e4:	400e0600 	.word	0x400e0600
   813e8:	0008180d 	.word	0x0008180d
   813ec:	00081735 	.word	0x00081735
   813f0:	00081929 	.word	0x00081929

000813f4 <board_init>:
   813f4:	b510      	push	{r4, lr}
   813f6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   813fa:	4b16      	ldr	r3, [pc, #88]	; (81454 <board_init+0x60>)
   813fc:	605a      	str	r2, [r3, #4]
   813fe:	200b      	movs	r0, #11
   81400:	4c15      	ldr	r4, [pc, #84]	; (81458 <board_init+0x64>)
   81402:	47a0      	blx	r4
   81404:	200c      	movs	r0, #12
   81406:	47a0      	blx	r4
   81408:	200d      	movs	r0, #13
   8140a:	47a0      	blx	r4
   8140c:	200e      	movs	r0, #14
   8140e:	47a0      	blx	r4
   81410:	203b      	movs	r0, #59	; 0x3b
   81412:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   81416:	4c11      	ldr	r4, [pc, #68]	; (8145c <board_init+0x68>)
   81418:	47a0      	blx	r4
   8141a:	2055      	movs	r0, #85	; 0x55
   8141c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   81420:	47a0      	blx	r4
   81422:	2056      	movs	r0, #86	; 0x56
   81424:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   81428:	47a0      	blx	r4
   8142a:	2068      	movs	r0, #104	; 0x68
   8142c:	490c      	ldr	r1, [pc, #48]	; (81460 <board_init+0x6c>)
   8142e:	47a0      	blx	r4
   81430:	205c      	movs	r0, #92	; 0x5c
   81432:	490c      	ldr	r1, [pc, #48]	; (81464 <board_init+0x70>)
   81434:	47a0      	blx	r4
   81436:	480c      	ldr	r0, [pc, #48]	; (81468 <board_init+0x74>)
   81438:	f44f 7140 	mov.w	r1, #768	; 0x300
   8143c:	4a0b      	ldr	r2, [pc, #44]	; (8146c <board_init+0x78>)
   8143e:	4b0c      	ldr	r3, [pc, #48]	; (81470 <board_init+0x7c>)
   81440:	4798      	blx	r3
   81442:	202b      	movs	r0, #43	; 0x2b
   81444:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   81448:	47a0      	blx	r4
   8144a:	202a      	movs	r0, #42	; 0x2a
   8144c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   81450:	47a0      	blx	r4
   81452:	bd10      	pop	{r4, pc}
   81454:	400e1a50 	.word	0x400e1a50
   81458:	0008181d 	.word	0x0008181d
   8145c:	00081519 	.word	0x00081519
   81460:	28000079 	.word	0x28000079
   81464:	28000001 	.word	0x28000001
   81468:	400e0e00 	.word	0x400e0e00
   8146c:	08000001 	.word	0x08000001
   81470:	000815ed 	.word	0x000815ed

00081474 <pio_set_peripheral>:
   81474:	6442      	str	r2, [r0, #68]	; 0x44
   81476:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   8147a:	d016      	beq.n	814aa <pio_set_peripheral+0x36>
   8147c:	d804      	bhi.n	81488 <pio_set_peripheral+0x14>
   8147e:	b1c1      	cbz	r1, 814b2 <pio_set_peripheral+0x3e>
   81480:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   81484:	d00a      	beq.n	8149c <pio_set_peripheral+0x28>
   81486:	e013      	b.n	814b0 <pio_set_peripheral+0x3c>
   81488:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   8148c:	d011      	beq.n	814b2 <pio_set_peripheral+0x3e>
   8148e:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   81492:	d00e      	beq.n	814b2 <pio_set_peripheral+0x3e>
   81494:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   81498:	d10a      	bne.n	814b0 <pio_set_peripheral+0x3c>
   8149a:	4770      	bx	lr
   8149c:	6f03      	ldr	r3, [r0, #112]	; 0x70
   8149e:	6f01      	ldr	r1, [r0, #112]	; 0x70
   814a0:	400b      	ands	r3, r1
   814a2:	ea23 0302 	bic.w	r3, r3, r2
   814a6:	6703      	str	r3, [r0, #112]	; 0x70
   814a8:	e002      	b.n	814b0 <pio_set_peripheral+0x3c>
   814aa:	6f03      	ldr	r3, [r0, #112]	; 0x70
   814ac:	4313      	orrs	r3, r2
   814ae:	6703      	str	r3, [r0, #112]	; 0x70
   814b0:	6042      	str	r2, [r0, #4]
   814b2:	4770      	bx	lr

000814b4 <pio_set_input>:
   814b4:	6441      	str	r1, [r0, #68]	; 0x44
   814b6:	f012 0f01 	tst.w	r2, #1
   814ba:	bf14      	ite	ne
   814bc:	6641      	strne	r1, [r0, #100]	; 0x64
   814be:	6601      	streq	r1, [r0, #96]	; 0x60
   814c0:	f012 0f0a 	tst.w	r2, #10
   814c4:	bf14      	ite	ne
   814c6:	6201      	strne	r1, [r0, #32]
   814c8:	6241      	streq	r1, [r0, #36]	; 0x24
   814ca:	f012 0f02 	tst.w	r2, #2
   814ce:	d002      	beq.n	814d6 <pio_set_input+0x22>
   814d0:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   814d4:	e004      	b.n	814e0 <pio_set_input+0x2c>
   814d6:	f012 0f08 	tst.w	r2, #8
   814da:	bf18      	it	ne
   814dc:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
   814e0:	6141      	str	r1, [r0, #20]
   814e2:	6001      	str	r1, [r0, #0]
   814e4:	4770      	bx	lr
   814e6:	bf00      	nop

000814e8 <pio_set_output>:
   814e8:	b410      	push	{r4}
   814ea:	6441      	str	r1, [r0, #68]	; 0x44
   814ec:	9c01      	ldr	r4, [sp, #4]
   814ee:	b10c      	cbz	r4, 814f4 <pio_set_output+0xc>
   814f0:	6641      	str	r1, [r0, #100]	; 0x64
   814f2:	e000      	b.n	814f6 <pio_set_output+0xe>
   814f4:	6601      	str	r1, [r0, #96]	; 0x60
   814f6:	b10b      	cbz	r3, 814fc <pio_set_output+0x14>
   814f8:	6501      	str	r1, [r0, #80]	; 0x50
   814fa:	e000      	b.n	814fe <pio_set_output+0x16>
   814fc:	6541      	str	r1, [r0, #84]	; 0x54
   814fe:	b10a      	cbz	r2, 81504 <pio_set_output+0x1c>
   81500:	6301      	str	r1, [r0, #48]	; 0x30
   81502:	e000      	b.n	81506 <pio_set_output+0x1e>
   81504:	6341      	str	r1, [r0, #52]	; 0x34
   81506:	6101      	str	r1, [r0, #16]
   81508:	6001      	str	r1, [r0, #0]
   8150a:	f85d 4b04 	ldr.w	r4, [sp], #4
   8150e:	4770      	bx	lr

00081510 <pio_get_interrupt_status>:
   81510:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
   81512:	4770      	bx	lr

00081514 <pio_get_interrupt_mask>:
   81514:	6c80      	ldr	r0, [r0, #72]	; 0x48
   81516:	4770      	bx	lr

00081518 <pio_configure_pin>:
   81518:	b570      	push	{r4, r5, r6, lr}
   8151a:	b082      	sub	sp, #8
   8151c:	460d      	mov	r5, r1
   8151e:	0944      	lsrs	r4, r0, #5
   81520:	f504 1400 	add.w	r4, r4, #2097152	; 0x200000
   81524:	f204 7407 	addw	r4, r4, #1799	; 0x707
   81528:	0266      	lsls	r6, r4, #9
   8152a:	f001 44f0 	and.w	r4, r1, #2013265920	; 0x78000000
   8152e:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   81532:	d030      	beq.n	81596 <pio_configure_pin+0x7e>
   81534:	d806      	bhi.n	81544 <pio_configure_pin+0x2c>
   81536:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   8153a:	d00a      	beq.n	81552 <pio_configure_pin+0x3a>
   8153c:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   81540:	d018      	beq.n	81574 <pio_configure_pin+0x5c>
   81542:	e049      	b.n	815d8 <pio_configure_pin+0xc0>
   81544:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   81548:	d030      	beq.n	815ac <pio_configure_pin+0x94>
   8154a:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   8154e:	d02d      	beq.n	815ac <pio_configure_pin+0x94>
   81550:	e042      	b.n	815d8 <pio_configure_pin+0xc0>
   81552:	f000 001f 	and.w	r0, r0, #31
   81556:	2401      	movs	r4, #1
   81558:	4084      	lsls	r4, r0
   8155a:	4630      	mov	r0, r6
   8155c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   81560:	4622      	mov	r2, r4
   81562:	4b1f      	ldr	r3, [pc, #124]	; (815e0 <pio_configure_pin+0xc8>)
   81564:	4798      	blx	r3
   81566:	f015 0f01 	tst.w	r5, #1
   8156a:	bf14      	ite	ne
   8156c:	6674      	strne	r4, [r6, #100]	; 0x64
   8156e:	6634      	streq	r4, [r6, #96]	; 0x60
   81570:	2001      	movs	r0, #1
   81572:	e032      	b.n	815da <pio_configure_pin+0xc2>
   81574:	f000 001f 	and.w	r0, r0, #31
   81578:	2401      	movs	r4, #1
   8157a:	4084      	lsls	r4, r0
   8157c:	4630      	mov	r0, r6
   8157e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   81582:	4622      	mov	r2, r4
   81584:	4b16      	ldr	r3, [pc, #88]	; (815e0 <pio_configure_pin+0xc8>)
   81586:	4798      	blx	r3
   81588:	f015 0f01 	tst.w	r5, #1
   8158c:	bf14      	ite	ne
   8158e:	6674      	strne	r4, [r6, #100]	; 0x64
   81590:	6634      	streq	r4, [r6, #96]	; 0x60
   81592:	2001      	movs	r0, #1
   81594:	e021      	b.n	815da <pio_configure_pin+0xc2>
   81596:	f000 011f 	and.w	r1, r0, #31
   8159a:	2401      	movs	r4, #1
   8159c:	4630      	mov	r0, r6
   8159e:	fa04 f101 	lsl.w	r1, r4, r1
   815a2:	462a      	mov	r2, r5
   815a4:	4b0f      	ldr	r3, [pc, #60]	; (815e4 <pio_configure_pin+0xcc>)
   815a6:	4798      	blx	r3
   815a8:	4620      	mov	r0, r4
   815aa:	e016      	b.n	815da <pio_configure_pin+0xc2>
   815ac:	f000 011f 	and.w	r1, r0, #31
   815b0:	2401      	movs	r4, #1
   815b2:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
   815b6:	ea05 0304 	and.w	r3, r5, r4
   815ba:	9300      	str	r3, [sp, #0]
   815bc:	4630      	mov	r0, r6
   815be:	fa04 f101 	lsl.w	r1, r4, r1
   815c2:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   815c6:	bf14      	ite	ne
   815c8:	2200      	movne	r2, #0
   815ca:	2201      	moveq	r2, #1
   815cc:	f3c5 0380 	ubfx	r3, r5, #2, #1
   815d0:	4d05      	ldr	r5, [pc, #20]	; (815e8 <pio_configure_pin+0xd0>)
   815d2:	47a8      	blx	r5
   815d4:	4620      	mov	r0, r4
   815d6:	e000      	b.n	815da <pio_configure_pin+0xc2>
   815d8:	2000      	movs	r0, #0
   815da:	b002      	add	sp, #8
   815dc:	bd70      	pop	{r4, r5, r6, pc}
   815de:	bf00      	nop
   815e0:	00081475 	.word	0x00081475
   815e4:	000814b5 	.word	0x000814b5
   815e8:	000814e9 	.word	0x000814e9

000815ec <pio_configure_pin_group>:
   815ec:	b5f0      	push	{r4, r5, r6, r7, lr}
   815ee:	b083      	sub	sp, #12
   815f0:	4607      	mov	r7, r0
   815f2:	460e      	mov	r6, r1
   815f4:	4615      	mov	r5, r2
   815f6:	f002 44f0 	and.w	r4, r2, #2013265920	; 0x78000000
   815fa:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   815fe:	d026      	beq.n	8164e <pio_configure_pin_group+0x62>
   81600:	d806      	bhi.n	81610 <pio_configure_pin_group+0x24>
   81602:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   81606:	d00a      	beq.n	8161e <pio_configure_pin_group+0x32>
   81608:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   8160c:	d013      	beq.n	81636 <pio_configure_pin_group+0x4a>
   8160e:	e034      	b.n	8167a <pio_configure_pin_group+0x8e>
   81610:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   81614:	d01f      	beq.n	81656 <pio_configure_pin_group+0x6a>
   81616:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   8161a:	d01c      	beq.n	81656 <pio_configure_pin_group+0x6a>
   8161c:	e02d      	b.n	8167a <pio_configure_pin_group+0x8e>
   8161e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   81622:	4632      	mov	r2, r6
   81624:	4b16      	ldr	r3, [pc, #88]	; (81680 <pio_configure_pin_group+0x94>)
   81626:	4798      	blx	r3
   81628:	f015 0f01 	tst.w	r5, #1
   8162c:	bf14      	ite	ne
   8162e:	667e      	strne	r6, [r7, #100]	; 0x64
   81630:	663e      	streq	r6, [r7, #96]	; 0x60
   81632:	2001      	movs	r0, #1
   81634:	e022      	b.n	8167c <pio_configure_pin_group+0x90>
   81636:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   8163a:	4632      	mov	r2, r6
   8163c:	4b10      	ldr	r3, [pc, #64]	; (81680 <pio_configure_pin_group+0x94>)
   8163e:	4798      	blx	r3
   81640:	f015 0f01 	tst.w	r5, #1
   81644:	bf14      	ite	ne
   81646:	667e      	strne	r6, [r7, #100]	; 0x64
   81648:	663e      	streq	r6, [r7, #96]	; 0x60
   8164a:	2001      	movs	r0, #1
   8164c:	e016      	b.n	8167c <pio_configure_pin_group+0x90>
   8164e:	4b0d      	ldr	r3, [pc, #52]	; (81684 <pio_configure_pin_group+0x98>)
   81650:	4798      	blx	r3
   81652:	2001      	movs	r0, #1
   81654:	e012      	b.n	8167c <pio_configure_pin_group+0x90>
   81656:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
   8165a:	f005 0301 	and.w	r3, r5, #1
   8165e:	9300      	str	r3, [sp, #0]
   81660:	4638      	mov	r0, r7
   81662:	4631      	mov	r1, r6
   81664:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   81668:	bf14      	ite	ne
   8166a:	2200      	movne	r2, #0
   8166c:	2201      	moveq	r2, #1
   8166e:	f3c5 0380 	ubfx	r3, r5, #2, #1
   81672:	4c05      	ldr	r4, [pc, #20]	; (81688 <pio_configure_pin_group+0x9c>)
   81674:	47a0      	blx	r4
   81676:	2001      	movs	r0, #1
   81678:	e000      	b.n	8167c <pio_configure_pin_group+0x90>
   8167a:	2000      	movs	r0, #0
   8167c:	b003      	add	sp, #12
   8167e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   81680:	00081475 	.word	0x00081475
   81684:	000814b5 	.word	0x000814b5
   81688:	000814e9 	.word	0x000814e9

0008168c <pio_handler_process>:
   8168c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81690:	4604      	mov	r4, r0
   81692:	460e      	mov	r6, r1
   81694:	4b10      	ldr	r3, [pc, #64]	; (816d8 <pio_handler_process+0x4c>)
   81696:	4798      	blx	r3
   81698:	4605      	mov	r5, r0
   8169a:	4620      	mov	r0, r4
   8169c:	4b0f      	ldr	r3, [pc, #60]	; (816dc <pio_handler_process+0x50>)
   8169e:	4798      	blx	r3
   816a0:	4005      	ands	r5, r0
   816a2:	d017      	beq.n	816d4 <pio_handler_process+0x48>
   816a4:	4f0e      	ldr	r7, [pc, #56]	; (816e0 <pio_handler_process+0x54>)
   816a6:	f107 040c 	add.w	r4, r7, #12
   816aa:	376c      	adds	r7, #108	; 0x6c
   816ac:	f854 3c0c 	ldr.w	r3, [r4, #-12]
   816b0:	42b3      	cmp	r3, r6
   816b2:	d10a      	bne.n	816ca <pio_handler_process+0x3e>
   816b4:	f854 1c08 	ldr.w	r1, [r4, #-8]
   816b8:	4229      	tst	r1, r5
   816ba:	d006      	beq.n	816ca <pio_handler_process+0x3e>
   816bc:	6823      	ldr	r3, [r4, #0]
   816be:	4630      	mov	r0, r6
   816c0:	4798      	blx	r3
   816c2:	f854 3c08 	ldr.w	r3, [r4, #-8]
   816c6:	ea25 0503 	bic.w	r5, r5, r3
   816ca:	42bc      	cmp	r4, r7
   816cc:	d002      	beq.n	816d4 <pio_handler_process+0x48>
   816ce:	3410      	adds	r4, #16
   816d0:	2d00      	cmp	r5, #0
   816d2:	d1eb      	bne.n	816ac <pio_handler_process+0x20>
   816d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   816d8:	00081511 	.word	0x00081511
   816dc:	00081515 	.word	0x00081515
   816e0:	20070a30 	.word	0x20070a30

000816e4 <PIOA_Handler>:
   816e4:	b508      	push	{r3, lr}
   816e6:	4802      	ldr	r0, [pc, #8]	; (816f0 <PIOA_Handler+0xc>)
   816e8:	210b      	movs	r1, #11
   816ea:	4b02      	ldr	r3, [pc, #8]	; (816f4 <PIOA_Handler+0x10>)
   816ec:	4798      	blx	r3
   816ee:	bd08      	pop	{r3, pc}
   816f0:	400e0e00 	.word	0x400e0e00
   816f4:	0008168d 	.word	0x0008168d

000816f8 <PIOB_Handler>:
   816f8:	b508      	push	{r3, lr}
   816fa:	4802      	ldr	r0, [pc, #8]	; (81704 <PIOB_Handler+0xc>)
   816fc:	210c      	movs	r1, #12
   816fe:	4b02      	ldr	r3, [pc, #8]	; (81708 <PIOB_Handler+0x10>)
   81700:	4798      	blx	r3
   81702:	bd08      	pop	{r3, pc}
   81704:	400e1000 	.word	0x400e1000
   81708:	0008168d 	.word	0x0008168d

0008170c <PIOC_Handler>:
   8170c:	b508      	push	{r3, lr}
   8170e:	4802      	ldr	r0, [pc, #8]	; (81718 <PIOC_Handler+0xc>)
   81710:	210d      	movs	r1, #13
   81712:	4b02      	ldr	r3, [pc, #8]	; (8171c <PIOC_Handler+0x10>)
   81714:	4798      	blx	r3
   81716:	bd08      	pop	{r3, pc}
   81718:	400e1200 	.word	0x400e1200
   8171c:	0008168d 	.word	0x0008168d

00081720 <PIOD_Handler>:
   81720:	b508      	push	{r3, lr}
   81722:	4802      	ldr	r0, [pc, #8]	; (8172c <PIOD_Handler+0xc>)
   81724:	210e      	movs	r1, #14
   81726:	4b02      	ldr	r3, [pc, #8]	; (81730 <PIOD_Handler+0x10>)
   81728:	4798      	blx	r3
   8172a:	bd08      	pop	{r3, pc}
   8172c:	400e1400 	.word	0x400e1400
   81730:	0008168d 	.word	0x0008168d

00081734 <pmc_switch_mck_to_pllack>:
   81734:	4b17      	ldr	r3, [pc, #92]	; (81794 <pmc_switch_mck_to_pllack+0x60>)
   81736:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   81738:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   8173c:	4310      	orrs	r0, r2
   8173e:	6318      	str	r0, [r3, #48]	; 0x30
   81740:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   81742:	f013 0f08 	tst.w	r3, #8
   81746:	d109      	bne.n	8175c <pmc_switch_mck_to_pllack+0x28>
   81748:	f44f 6300 	mov.w	r3, #2048	; 0x800
   8174c:	4911      	ldr	r1, [pc, #68]	; (81794 <pmc_switch_mck_to_pllack+0x60>)
   8174e:	e001      	b.n	81754 <pmc_switch_mck_to_pllack+0x20>
   81750:	3b01      	subs	r3, #1
   81752:	d019      	beq.n	81788 <pmc_switch_mck_to_pllack+0x54>
   81754:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   81756:	f012 0f08 	tst.w	r2, #8
   8175a:	d0f9      	beq.n	81750 <pmc_switch_mck_to_pllack+0x1c>
   8175c:	4b0d      	ldr	r3, [pc, #52]	; (81794 <pmc_switch_mck_to_pllack+0x60>)
   8175e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   81760:	f022 0203 	bic.w	r2, r2, #3
   81764:	f042 0202 	orr.w	r2, r2, #2
   81768:	631a      	str	r2, [r3, #48]	; 0x30
   8176a:	6e98      	ldr	r0, [r3, #104]	; 0x68
   8176c:	f010 0008 	ands.w	r0, r0, #8
   81770:	d10c      	bne.n	8178c <pmc_switch_mck_to_pllack+0x58>
   81772:	f44f 6300 	mov.w	r3, #2048	; 0x800
   81776:	4907      	ldr	r1, [pc, #28]	; (81794 <pmc_switch_mck_to_pllack+0x60>)
   81778:	e001      	b.n	8177e <pmc_switch_mck_to_pllack+0x4a>
   8177a:	3b01      	subs	r3, #1
   8177c:	d008      	beq.n	81790 <pmc_switch_mck_to_pllack+0x5c>
   8177e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   81780:	f012 0f08 	tst.w	r2, #8
   81784:	d0f9      	beq.n	8177a <pmc_switch_mck_to_pllack+0x46>
   81786:	4770      	bx	lr
   81788:	2001      	movs	r0, #1
   8178a:	4770      	bx	lr
   8178c:	2000      	movs	r0, #0
   8178e:	4770      	bx	lr
   81790:	2001      	movs	r0, #1
   81792:	4770      	bx	lr
   81794:	400e0600 	.word	0x400e0600

00081798 <pmc_switch_mainck_to_xtal>:
   81798:	b138      	cbz	r0, 817aa <pmc_switch_mainck_to_xtal+0x12>
   8179a:	4911      	ldr	r1, [pc, #68]	; (817e0 <pmc_switch_mainck_to_xtal+0x48>)
   8179c:	6a0b      	ldr	r3, [r1, #32]
   8179e:	4a11      	ldr	r2, [pc, #68]	; (817e4 <pmc_switch_mainck_to_xtal+0x4c>)
   817a0:	401a      	ands	r2, r3
   817a2:	4b11      	ldr	r3, [pc, #68]	; (817e8 <pmc_switch_mainck_to_xtal+0x50>)
   817a4:	4313      	orrs	r3, r2
   817a6:	620b      	str	r3, [r1, #32]
   817a8:	4770      	bx	lr
   817aa:	4a0d      	ldr	r2, [pc, #52]	; (817e0 <pmc_switch_mainck_to_xtal+0x48>)
   817ac:	6a13      	ldr	r3, [r2, #32]
   817ae:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   817b2:	f023 0303 	bic.w	r3, r3, #3
   817b6:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   817ba:	f043 0301 	orr.w	r3, r3, #1
   817be:	0209      	lsls	r1, r1, #8
   817c0:	b289      	uxth	r1, r1
   817c2:	430b      	orrs	r3, r1
   817c4:	6213      	str	r3, [r2, #32]
   817c6:	6e93      	ldr	r3, [r2, #104]	; 0x68
   817c8:	f013 0f01 	tst.w	r3, #1
   817cc:	d0fb      	beq.n	817c6 <pmc_switch_mainck_to_xtal+0x2e>
   817ce:	4a04      	ldr	r2, [pc, #16]	; (817e0 <pmc_switch_mainck_to_xtal+0x48>)
   817d0:	6a13      	ldr	r3, [r2, #32]
   817d2:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   817d6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   817da:	6213      	str	r3, [r2, #32]
   817dc:	4770      	bx	lr
   817de:	bf00      	nop
   817e0:	400e0600 	.word	0x400e0600
   817e4:	fec8fffc 	.word	0xfec8fffc
   817e8:	01370002 	.word	0x01370002

000817ec <pmc_osc_is_ready_mainck>:
   817ec:	4b02      	ldr	r3, [pc, #8]	; (817f8 <pmc_osc_is_ready_mainck+0xc>)
   817ee:	6e98      	ldr	r0, [r3, #104]	; 0x68
   817f0:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   817f4:	4770      	bx	lr
   817f6:	bf00      	nop
   817f8:	400e0600 	.word	0x400e0600

000817fc <pmc_disable_pllack>:
   817fc:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   81800:	4b01      	ldr	r3, [pc, #4]	; (81808 <pmc_disable_pllack+0xc>)
   81802:	629a      	str	r2, [r3, #40]	; 0x28
   81804:	4770      	bx	lr
   81806:	bf00      	nop
   81808:	400e0600 	.word	0x400e0600

0008180c <pmc_is_locked_pllack>:
   8180c:	4b02      	ldr	r3, [pc, #8]	; (81818 <pmc_is_locked_pllack+0xc>)
   8180e:	6e98      	ldr	r0, [r3, #104]	; 0x68
   81810:	f000 0002 	and.w	r0, r0, #2
   81814:	4770      	bx	lr
   81816:	bf00      	nop
   81818:	400e0600 	.word	0x400e0600

0008181c <pmc_enable_periph_clk>:
   8181c:	282c      	cmp	r0, #44	; 0x2c
   8181e:	d820      	bhi.n	81862 <pmc_enable_periph_clk+0x46>
   81820:	281f      	cmp	r0, #31
   81822:	d80d      	bhi.n	81840 <pmc_enable_periph_clk+0x24>
   81824:	4b12      	ldr	r3, [pc, #72]	; (81870 <pmc_enable_periph_clk+0x54>)
   81826:	699a      	ldr	r2, [r3, #24]
   81828:	2301      	movs	r3, #1
   8182a:	4083      	lsls	r3, r0
   8182c:	401a      	ands	r2, r3
   8182e:	4293      	cmp	r3, r2
   81830:	d019      	beq.n	81866 <pmc_enable_periph_clk+0x4a>
   81832:	2301      	movs	r3, #1
   81834:	fa03 f000 	lsl.w	r0, r3, r0
   81838:	4b0d      	ldr	r3, [pc, #52]	; (81870 <pmc_enable_periph_clk+0x54>)
   8183a:	6118      	str	r0, [r3, #16]
   8183c:	2000      	movs	r0, #0
   8183e:	4770      	bx	lr
   81840:	4b0b      	ldr	r3, [pc, #44]	; (81870 <pmc_enable_periph_clk+0x54>)
   81842:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
   81846:	3820      	subs	r0, #32
   81848:	2301      	movs	r3, #1
   8184a:	4083      	lsls	r3, r0
   8184c:	401a      	ands	r2, r3
   8184e:	4293      	cmp	r3, r2
   81850:	d00b      	beq.n	8186a <pmc_enable_periph_clk+0x4e>
   81852:	2301      	movs	r3, #1
   81854:	fa03 f000 	lsl.w	r0, r3, r0
   81858:	4b05      	ldr	r3, [pc, #20]	; (81870 <pmc_enable_periph_clk+0x54>)
   8185a:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
   8185e:	2000      	movs	r0, #0
   81860:	4770      	bx	lr
   81862:	2001      	movs	r0, #1
   81864:	4770      	bx	lr
   81866:	2000      	movs	r0, #0
   81868:	4770      	bx	lr
   8186a:	2000      	movs	r0, #0
   8186c:	4770      	bx	lr
   8186e:	bf00      	nop
   81870:	400e0600 	.word	0x400e0600

00081874 <Dummy_Handler>:
   81874:	e7fe      	b.n	81874 <Dummy_Handler>
   81876:	bf00      	nop

00081878 <Reset_Handler>:
   81878:	b510      	push	{r4, lr}
   8187a:	4b1e      	ldr	r3, [pc, #120]	; (818f4 <Reset_Handler+0x7c>)
   8187c:	4a1e      	ldr	r2, [pc, #120]	; (818f8 <Reset_Handler+0x80>)
   8187e:	429a      	cmp	r2, r3
   81880:	d003      	beq.n	8188a <Reset_Handler+0x12>
   81882:	4b1e      	ldr	r3, [pc, #120]	; (818fc <Reset_Handler+0x84>)
   81884:	4a1b      	ldr	r2, [pc, #108]	; (818f4 <Reset_Handler+0x7c>)
   81886:	429a      	cmp	r2, r3
   81888:	d304      	bcc.n	81894 <Reset_Handler+0x1c>
   8188a:	4b1d      	ldr	r3, [pc, #116]	; (81900 <Reset_Handler+0x88>)
   8188c:	4a1d      	ldr	r2, [pc, #116]	; (81904 <Reset_Handler+0x8c>)
   8188e:	429a      	cmp	r2, r3
   81890:	d30f      	bcc.n	818b2 <Reset_Handler+0x3a>
   81892:	e01a      	b.n	818ca <Reset_Handler+0x52>
   81894:	4b1c      	ldr	r3, [pc, #112]	; (81908 <Reset_Handler+0x90>)
   81896:	4c1d      	ldr	r4, [pc, #116]	; (8190c <Reset_Handler+0x94>)
   81898:	1ae4      	subs	r4, r4, r3
   8189a:	f024 0403 	bic.w	r4, r4, #3
   8189e:	3404      	adds	r4, #4
   818a0:	2300      	movs	r3, #0
   818a2:	4814      	ldr	r0, [pc, #80]	; (818f4 <Reset_Handler+0x7c>)
   818a4:	4914      	ldr	r1, [pc, #80]	; (818f8 <Reset_Handler+0x80>)
   818a6:	585a      	ldr	r2, [r3, r1]
   818a8:	501a      	str	r2, [r3, r0]
   818aa:	3304      	adds	r3, #4
   818ac:	42a3      	cmp	r3, r4
   818ae:	d1fa      	bne.n	818a6 <Reset_Handler+0x2e>
   818b0:	e7eb      	b.n	8188a <Reset_Handler+0x12>
   818b2:	4b17      	ldr	r3, [pc, #92]	; (81910 <Reset_Handler+0x98>)
   818b4:	4917      	ldr	r1, [pc, #92]	; (81914 <Reset_Handler+0x9c>)
   818b6:	1ac9      	subs	r1, r1, r3
   818b8:	f021 0103 	bic.w	r1, r1, #3
   818bc:	1d1a      	adds	r2, r3, #4
   818be:	4411      	add	r1, r2
   818c0:	2200      	movs	r2, #0
   818c2:	f843 2f04 	str.w	r2, [r3, #4]!
   818c6:	428b      	cmp	r3, r1
   818c8:	d1fb      	bne.n	818c2 <Reset_Handler+0x4a>
   818ca:	4a13      	ldr	r2, [pc, #76]	; (81918 <Reset_Handler+0xa0>)
   818cc:	f022 4360 	bic.w	r3, r2, #3758096384	; 0xe0000000
   818d0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   818d4:	4911      	ldr	r1, [pc, #68]	; (8191c <Reset_Handler+0xa4>)
   818d6:	608b      	str	r3, [r1, #8]
   818d8:	f102 4260 	add.w	r2, r2, #3758096384	; 0xe0000000
   818dc:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
   818e0:	d203      	bcs.n	818ea <Reset_Handler+0x72>
   818e2:	688a      	ldr	r2, [r1, #8]
   818e4:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
   818e8:	608a      	str	r2, [r1, #8]
   818ea:	4b0d      	ldr	r3, [pc, #52]	; (81920 <Reset_Handler+0xa8>)
   818ec:	4798      	blx	r3
   818ee:	4b0d      	ldr	r3, [pc, #52]	; (81924 <Reset_Handler+0xac>)
   818f0:	4798      	blx	r3
   818f2:	e7fe      	b.n	818f2 <Reset_Handler+0x7a>
   818f4:	20070000 	.word	0x20070000
   818f8:	00082ef4 	.word	0x00082ef4
   818fc:	20070974 	.word	0x20070974
   81900:	20070b7c 	.word	0x20070b7c
   81904:	20070974 	.word	0x20070974
   81908:	20070004 	.word	0x20070004
   8190c:	20070977 	.word	0x20070977
   81910:	20070970 	.word	0x20070970
   81914:	20070b77 	.word	0x20070b77
   81918:	00080000 	.word	0x00080000
   8191c:	e000ed00 	.word	0xe000ed00
   81920:	00081a95 	.word	0x00081a95
   81924:	0008080d 	.word	0x0008080d

00081928 <SystemCoreClockUpdate>:
   81928:	4b3e      	ldr	r3, [pc, #248]	; (81a24 <SystemCoreClockUpdate+0xfc>)
   8192a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   8192c:	f003 0303 	and.w	r3, r3, #3
   81930:	2b03      	cmp	r3, #3
   81932:	d85f      	bhi.n	819f4 <SystemCoreClockUpdate+0xcc>
   81934:	e8df f003 	tbb	[pc, r3]
   81938:	2b2b0e02 	.word	0x2b2b0e02
   8193c:	4b3a      	ldr	r3, [pc, #232]	; (81a28 <SystemCoreClockUpdate+0x100>)
   8193e:	695b      	ldr	r3, [r3, #20]
   81940:	f013 0f80 	tst.w	r3, #128	; 0x80
   81944:	bf14      	ite	ne
   81946:	f44f 4200 	movne.w	r2, #32768	; 0x8000
   8194a:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   8194e:	4b37      	ldr	r3, [pc, #220]	; (81a2c <SystemCoreClockUpdate+0x104>)
   81950:	601a      	str	r2, [r3, #0]
   81952:	e04f      	b.n	819f4 <SystemCoreClockUpdate+0xcc>
   81954:	4b33      	ldr	r3, [pc, #204]	; (81a24 <SystemCoreClockUpdate+0xfc>)
   81956:	6a1b      	ldr	r3, [r3, #32]
   81958:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   8195c:	d003      	beq.n	81966 <SystemCoreClockUpdate+0x3e>
   8195e:	4a34      	ldr	r2, [pc, #208]	; (81a30 <SystemCoreClockUpdate+0x108>)
   81960:	4b32      	ldr	r3, [pc, #200]	; (81a2c <SystemCoreClockUpdate+0x104>)
   81962:	601a      	str	r2, [r3, #0]
   81964:	e046      	b.n	819f4 <SystemCoreClockUpdate+0xcc>
   81966:	4a33      	ldr	r2, [pc, #204]	; (81a34 <SystemCoreClockUpdate+0x10c>)
   81968:	4b30      	ldr	r3, [pc, #192]	; (81a2c <SystemCoreClockUpdate+0x104>)
   8196a:	601a      	str	r2, [r3, #0]
   8196c:	4b2d      	ldr	r3, [pc, #180]	; (81a24 <SystemCoreClockUpdate+0xfc>)
   8196e:	6a1b      	ldr	r3, [r3, #32]
   81970:	f003 0370 	and.w	r3, r3, #112	; 0x70
   81974:	2b10      	cmp	r3, #16
   81976:	d002      	beq.n	8197e <SystemCoreClockUpdate+0x56>
   81978:	2b20      	cmp	r3, #32
   8197a:	d004      	beq.n	81986 <SystemCoreClockUpdate+0x5e>
   8197c:	e03a      	b.n	819f4 <SystemCoreClockUpdate+0xcc>
   8197e:	4a2e      	ldr	r2, [pc, #184]	; (81a38 <SystemCoreClockUpdate+0x110>)
   81980:	4b2a      	ldr	r3, [pc, #168]	; (81a2c <SystemCoreClockUpdate+0x104>)
   81982:	601a      	str	r2, [r3, #0]
   81984:	e036      	b.n	819f4 <SystemCoreClockUpdate+0xcc>
   81986:	4a2a      	ldr	r2, [pc, #168]	; (81a30 <SystemCoreClockUpdate+0x108>)
   81988:	4b28      	ldr	r3, [pc, #160]	; (81a2c <SystemCoreClockUpdate+0x104>)
   8198a:	601a      	str	r2, [r3, #0]
   8198c:	e032      	b.n	819f4 <SystemCoreClockUpdate+0xcc>
   8198e:	4b25      	ldr	r3, [pc, #148]	; (81a24 <SystemCoreClockUpdate+0xfc>)
   81990:	6a1b      	ldr	r3, [r3, #32]
   81992:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   81996:	d003      	beq.n	819a0 <SystemCoreClockUpdate+0x78>
   81998:	4a25      	ldr	r2, [pc, #148]	; (81a30 <SystemCoreClockUpdate+0x108>)
   8199a:	4b24      	ldr	r3, [pc, #144]	; (81a2c <SystemCoreClockUpdate+0x104>)
   8199c:	601a      	str	r2, [r3, #0]
   8199e:	e012      	b.n	819c6 <SystemCoreClockUpdate+0x9e>
   819a0:	4a24      	ldr	r2, [pc, #144]	; (81a34 <SystemCoreClockUpdate+0x10c>)
   819a2:	4b22      	ldr	r3, [pc, #136]	; (81a2c <SystemCoreClockUpdate+0x104>)
   819a4:	601a      	str	r2, [r3, #0]
   819a6:	4b1f      	ldr	r3, [pc, #124]	; (81a24 <SystemCoreClockUpdate+0xfc>)
   819a8:	6a1b      	ldr	r3, [r3, #32]
   819aa:	f003 0370 	and.w	r3, r3, #112	; 0x70
   819ae:	2b10      	cmp	r3, #16
   819b0:	d002      	beq.n	819b8 <SystemCoreClockUpdate+0x90>
   819b2:	2b20      	cmp	r3, #32
   819b4:	d004      	beq.n	819c0 <SystemCoreClockUpdate+0x98>
   819b6:	e006      	b.n	819c6 <SystemCoreClockUpdate+0x9e>
   819b8:	4a1f      	ldr	r2, [pc, #124]	; (81a38 <SystemCoreClockUpdate+0x110>)
   819ba:	4b1c      	ldr	r3, [pc, #112]	; (81a2c <SystemCoreClockUpdate+0x104>)
   819bc:	601a      	str	r2, [r3, #0]
   819be:	e002      	b.n	819c6 <SystemCoreClockUpdate+0x9e>
   819c0:	4a1b      	ldr	r2, [pc, #108]	; (81a30 <SystemCoreClockUpdate+0x108>)
   819c2:	4b1a      	ldr	r3, [pc, #104]	; (81a2c <SystemCoreClockUpdate+0x104>)
   819c4:	601a      	str	r2, [r3, #0]
   819c6:	4b17      	ldr	r3, [pc, #92]	; (81a24 <SystemCoreClockUpdate+0xfc>)
   819c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   819ca:	f003 0303 	and.w	r3, r3, #3
   819ce:	2b02      	cmp	r3, #2
   819d0:	d10d      	bne.n	819ee <SystemCoreClockUpdate+0xc6>
   819d2:	4b14      	ldr	r3, [pc, #80]	; (81a24 <SystemCoreClockUpdate+0xfc>)
   819d4:	6a98      	ldr	r0, [r3, #40]	; 0x28
   819d6:	6a99      	ldr	r1, [r3, #40]	; 0x28
   819d8:	4b14      	ldr	r3, [pc, #80]	; (81a2c <SystemCoreClockUpdate+0x104>)
   819da:	f3c0 400a 	ubfx	r0, r0, #16, #11
   819de:	681a      	ldr	r2, [r3, #0]
   819e0:	fb00 2202 	mla	r2, r0, r2, r2
   819e4:	b2c9      	uxtb	r1, r1
   819e6:	fbb2 f2f1 	udiv	r2, r2, r1
   819ea:	601a      	str	r2, [r3, #0]
   819ec:	e002      	b.n	819f4 <SystemCoreClockUpdate+0xcc>
   819ee:	4a13      	ldr	r2, [pc, #76]	; (81a3c <SystemCoreClockUpdate+0x114>)
   819f0:	4b0e      	ldr	r3, [pc, #56]	; (81a2c <SystemCoreClockUpdate+0x104>)
   819f2:	601a      	str	r2, [r3, #0]
   819f4:	4b0b      	ldr	r3, [pc, #44]	; (81a24 <SystemCoreClockUpdate+0xfc>)
   819f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   819f8:	f003 0370 	and.w	r3, r3, #112	; 0x70
   819fc:	2b70      	cmp	r3, #112	; 0x70
   819fe:	d107      	bne.n	81a10 <SystemCoreClockUpdate+0xe8>
   81a00:	4b0a      	ldr	r3, [pc, #40]	; (81a2c <SystemCoreClockUpdate+0x104>)
   81a02:	681a      	ldr	r2, [r3, #0]
   81a04:	490e      	ldr	r1, [pc, #56]	; (81a40 <SystemCoreClockUpdate+0x118>)
   81a06:	fba1 0202 	umull	r0, r2, r1, r2
   81a0a:	0852      	lsrs	r2, r2, #1
   81a0c:	601a      	str	r2, [r3, #0]
   81a0e:	4770      	bx	lr
   81a10:	4b04      	ldr	r3, [pc, #16]	; (81a24 <SystemCoreClockUpdate+0xfc>)
   81a12:	6b19      	ldr	r1, [r3, #48]	; 0x30
   81a14:	4b05      	ldr	r3, [pc, #20]	; (81a2c <SystemCoreClockUpdate+0x104>)
   81a16:	f3c1 1102 	ubfx	r1, r1, #4, #3
   81a1a:	681a      	ldr	r2, [r3, #0]
   81a1c:	40ca      	lsrs	r2, r1
   81a1e:	601a      	str	r2, [r3, #0]
   81a20:	4770      	bx	lr
   81a22:	bf00      	nop
   81a24:	400e0600 	.word	0x400e0600
   81a28:	400e1a10 	.word	0x400e1a10
   81a2c:	20070130 	.word	0x20070130
   81a30:	00b71b00 	.word	0x00b71b00
   81a34:	003d0900 	.word	0x003d0900
   81a38:	007a1200 	.word	0x007a1200
   81a3c:	0e4e1c00 	.word	0x0e4e1c00
   81a40:	aaaaaaab 	.word	0xaaaaaaab

00081a44 <_sbrk>:
   81a44:	4b09      	ldr	r3, [pc, #36]	; (81a6c <_sbrk+0x28>)
   81a46:	681b      	ldr	r3, [r3, #0]
   81a48:	b913      	cbnz	r3, 81a50 <_sbrk+0xc>
   81a4a:	4a09      	ldr	r2, [pc, #36]	; (81a70 <_sbrk+0x2c>)
   81a4c:	4b07      	ldr	r3, [pc, #28]	; (81a6c <_sbrk+0x28>)
   81a4e:	601a      	str	r2, [r3, #0]
   81a50:	4b06      	ldr	r3, [pc, #24]	; (81a6c <_sbrk+0x28>)
   81a52:	681b      	ldr	r3, [r3, #0]
   81a54:	181a      	adds	r2, r3, r0
   81a56:	4907      	ldr	r1, [pc, #28]	; (81a74 <_sbrk+0x30>)
   81a58:	4291      	cmp	r1, r2
   81a5a:	db04      	blt.n	81a66 <_sbrk+0x22>
   81a5c:	4610      	mov	r0, r2
   81a5e:	4a03      	ldr	r2, [pc, #12]	; (81a6c <_sbrk+0x28>)
   81a60:	6010      	str	r0, [r2, #0]
   81a62:	4618      	mov	r0, r3
   81a64:	4770      	bx	lr
   81a66:	f04f 30ff 	mov.w	r0, #4294967295
   81a6a:	4770      	bx	lr
   81a6c:	20070aa0 	.word	0x20070aa0
   81a70:	20072b80 	.word	0x20072b80
   81a74:	20087ffc 	.word	0x20087ffc

00081a78 <_close>:
   81a78:	f04f 30ff 	mov.w	r0, #4294967295
   81a7c:	4770      	bx	lr
   81a7e:	bf00      	nop

00081a80 <_fstat>:
   81a80:	f44f 5300 	mov.w	r3, #8192	; 0x2000
   81a84:	604b      	str	r3, [r1, #4]
   81a86:	2000      	movs	r0, #0
   81a88:	4770      	bx	lr
   81a8a:	bf00      	nop

00081a8c <_isatty>:
   81a8c:	2001      	movs	r0, #1
   81a8e:	4770      	bx	lr

00081a90 <_lseek>:
   81a90:	2000      	movs	r0, #0
   81a92:	4770      	bx	lr

00081a94 <__libc_init_array>:
   81a94:	b570      	push	{r4, r5, r6, lr}
   81a96:	4e0f      	ldr	r6, [pc, #60]	; (81ad4 <__libc_init_array+0x40>)
   81a98:	4d0f      	ldr	r5, [pc, #60]	; (81ad8 <__libc_init_array+0x44>)
   81a9a:	1b76      	subs	r6, r6, r5
   81a9c:	10b6      	asrs	r6, r6, #2
   81a9e:	d007      	beq.n	81ab0 <__libc_init_array+0x1c>
   81aa0:	3d04      	subs	r5, #4
   81aa2:	2400      	movs	r4, #0
   81aa4:	3401      	adds	r4, #1
   81aa6:	f855 3f04 	ldr.w	r3, [r5, #4]!
   81aaa:	4798      	blx	r3
   81aac:	42a6      	cmp	r6, r4
   81aae:	d1f9      	bne.n	81aa4 <__libc_init_array+0x10>
   81ab0:	4e0a      	ldr	r6, [pc, #40]	; (81adc <__libc_init_array+0x48>)
   81ab2:	4d0b      	ldr	r5, [pc, #44]	; (81ae0 <__libc_init_array+0x4c>)
   81ab4:	f001 fa0c 	bl	82ed0 <_init>
   81ab8:	1b76      	subs	r6, r6, r5
   81aba:	10b6      	asrs	r6, r6, #2
   81abc:	d008      	beq.n	81ad0 <__libc_init_array+0x3c>
   81abe:	3d04      	subs	r5, #4
   81ac0:	2400      	movs	r4, #0
   81ac2:	3401      	adds	r4, #1
   81ac4:	f855 3f04 	ldr.w	r3, [r5, #4]!
   81ac8:	4798      	blx	r3
   81aca:	42a6      	cmp	r6, r4
   81acc:	d1f9      	bne.n	81ac2 <__libc_init_array+0x2e>
   81ace:	bd70      	pop	{r4, r5, r6, pc}
   81ad0:	bd70      	pop	{r4, r5, r6, pc}
   81ad2:	bf00      	nop
   81ad4:	00082edc 	.word	0x00082edc
   81ad8:	00082edc 	.word	0x00082edc
   81adc:	00082ee4 	.word	0x00082ee4
   81ae0:	00082edc 	.word	0x00082edc

00081ae4 <memset>:
   81ae4:	b4f0      	push	{r4, r5, r6, r7}
   81ae6:	0784      	lsls	r4, r0, #30
   81ae8:	d043      	beq.n	81b72 <memset+0x8e>
   81aea:	1e54      	subs	r4, r2, #1
   81aec:	2a00      	cmp	r2, #0
   81aee:	d03e      	beq.n	81b6e <memset+0x8a>
   81af0:	b2cd      	uxtb	r5, r1
   81af2:	4603      	mov	r3, r0
   81af4:	e003      	b.n	81afe <memset+0x1a>
   81af6:	1e62      	subs	r2, r4, #1
   81af8:	2c00      	cmp	r4, #0
   81afa:	d038      	beq.n	81b6e <memset+0x8a>
   81afc:	4614      	mov	r4, r2
   81afe:	f803 5b01 	strb.w	r5, [r3], #1
   81b02:	079a      	lsls	r2, r3, #30
   81b04:	d1f7      	bne.n	81af6 <memset+0x12>
   81b06:	2c03      	cmp	r4, #3
   81b08:	d92a      	bls.n	81b60 <memset+0x7c>
   81b0a:	b2cd      	uxtb	r5, r1
   81b0c:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   81b10:	2c0f      	cmp	r4, #15
   81b12:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   81b16:	d915      	bls.n	81b44 <memset+0x60>
   81b18:	f1a4 0710 	sub.w	r7, r4, #16
   81b1c:	093f      	lsrs	r7, r7, #4
   81b1e:	f103 0610 	add.w	r6, r3, #16
   81b22:	eb06 1607 	add.w	r6, r6, r7, lsl #4
   81b26:	461a      	mov	r2, r3
   81b28:	6015      	str	r5, [r2, #0]
   81b2a:	6055      	str	r5, [r2, #4]
   81b2c:	6095      	str	r5, [r2, #8]
   81b2e:	60d5      	str	r5, [r2, #12]
   81b30:	3210      	adds	r2, #16
   81b32:	42b2      	cmp	r2, r6
   81b34:	d1f8      	bne.n	81b28 <memset+0x44>
   81b36:	f004 040f 	and.w	r4, r4, #15
   81b3a:	3701      	adds	r7, #1
   81b3c:	2c03      	cmp	r4, #3
   81b3e:	eb03 1307 	add.w	r3, r3, r7, lsl #4
   81b42:	d90d      	bls.n	81b60 <memset+0x7c>
   81b44:	461e      	mov	r6, r3
   81b46:	4622      	mov	r2, r4
   81b48:	3a04      	subs	r2, #4
   81b4a:	2a03      	cmp	r2, #3
   81b4c:	f846 5b04 	str.w	r5, [r6], #4
   81b50:	d8fa      	bhi.n	81b48 <memset+0x64>
   81b52:	1f22      	subs	r2, r4, #4
   81b54:	f022 0203 	bic.w	r2, r2, #3
   81b58:	3204      	adds	r2, #4
   81b5a:	4413      	add	r3, r2
   81b5c:	f004 0403 	and.w	r4, r4, #3
   81b60:	b12c      	cbz	r4, 81b6e <memset+0x8a>
   81b62:	b2c9      	uxtb	r1, r1
   81b64:	441c      	add	r4, r3
   81b66:	f803 1b01 	strb.w	r1, [r3], #1
   81b6a:	42a3      	cmp	r3, r4
   81b6c:	d1fb      	bne.n	81b66 <memset+0x82>
   81b6e:	bcf0      	pop	{r4, r5, r6, r7}
   81b70:	4770      	bx	lr
   81b72:	4614      	mov	r4, r2
   81b74:	4603      	mov	r3, r0
   81b76:	e7c6      	b.n	81b06 <memset+0x22>

00081b78 <setbuf>:
   81b78:	2900      	cmp	r1, #0
   81b7a:	bf0c      	ite	eq
   81b7c:	2202      	moveq	r2, #2
   81b7e:	2200      	movne	r2, #0
   81b80:	f44f 6380 	mov.w	r3, #1024	; 0x400
   81b84:	f000 b80e 	b.w	81ba4 <setvbuf>

00081b88 <setjmp>:
   81b88:	46ec      	mov	ip, sp
   81b8a:	e8a0 5ff0 	stmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
   81b8e:	f04f 0000 	mov.w	r0, #0
   81b92:	4770      	bx	lr

00081b94 <longjmp>:
   81b94:	e8b0 5ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
   81b98:	46e5      	mov	sp, ip
   81b9a:	0008      	movs	r0, r1
   81b9c:	bf08      	it	eq
   81b9e:	2001      	moveq	r0, #1
   81ba0:	4770      	bx	lr
   81ba2:	bf00      	nop

00081ba4 <setvbuf>:
   81ba4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81ba8:	4d3c      	ldr	r5, [pc, #240]	; (81c9c <setvbuf+0xf8>)
   81baa:	4604      	mov	r4, r0
   81bac:	682d      	ldr	r5, [r5, #0]
   81bae:	4688      	mov	r8, r1
   81bb0:	4616      	mov	r6, r2
   81bb2:	461f      	mov	r7, r3
   81bb4:	b115      	cbz	r5, 81bbc <setvbuf+0x18>
   81bb6:	6bab      	ldr	r3, [r5, #56]	; 0x38
   81bb8:	2b00      	cmp	r3, #0
   81bba:	d04f      	beq.n	81c5c <setvbuf+0xb8>
   81bbc:	2e02      	cmp	r6, #2
   81bbe:	d830      	bhi.n	81c22 <setvbuf+0x7e>
   81bc0:	2f00      	cmp	r7, #0
   81bc2:	db2e      	blt.n	81c22 <setvbuf+0x7e>
   81bc4:	4628      	mov	r0, r5
   81bc6:	4621      	mov	r1, r4
   81bc8:	f000 f9d6 	bl	81f78 <_fflush_r>
   81bcc:	89a3      	ldrh	r3, [r4, #12]
   81bce:	2200      	movs	r2, #0
   81bd0:	6062      	str	r2, [r4, #4]
   81bd2:	61a2      	str	r2, [r4, #24]
   81bd4:	061a      	lsls	r2, r3, #24
   81bd6:	d428      	bmi.n	81c2a <setvbuf+0x86>
   81bd8:	f023 0383 	bic.w	r3, r3, #131	; 0x83
   81bdc:	b29b      	uxth	r3, r3
   81bde:	2e02      	cmp	r6, #2
   81be0:	81a3      	strh	r3, [r4, #12]
   81be2:	d02d      	beq.n	81c40 <setvbuf+0x9c>
   81be4:	f1b8 0f00 	cmp.w	r8, #0
   81be8:	d03c      	beq.n	81c64 <setvbuf+0xc0>
   81bea:	2e01      	cmp	r6, #1
   81bec:	d013      	beq.n	81c16 <setvbuf+0x72>
   81bee:	b29b      	uxth	r3, r3
   81bf0:	f003 0008 	and.w	r0, r3, #8
   81bf4:	4a2a      	ldr	r2, [pc, #168]	; (81ca0 <setvbuf+0xfc>)
   81bf6:	b280      	uxth	r0, r0
   81bf8:	63ea      	str	r2, [r5, #60]	; 0x3c
   81bfa:	f8c4 8000 	str.w	r8, [r4]
   81bfe:	f8c4 8010 	str.w	r8, [r4, #16]
   81c02:	6167      	str	r7, [r4, #20]
   81c04:	b178      	cbz	r0, 81c26 <setvbuf+0x82>
   81c06:	f013 0f03 	tst.w	r3, #3
   81c0a:	bf18      	it	ne
   81c0c:	2700      	movne	r7, #0
   81c0e:	60a7      	str	r7, [r4, #8]
   81c10:	2000      	movs	r0, #0
   81c12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81c16:	f043 0301 	orr.w	r3, r3, #1
   81c1a:	427a      	negs	r2, r7
   81c1c:	81a3      	strh	r3, [r4, #12]
   81c1e:	61a2      	str	r2, [r4, #24]
   81c20:	e7e5      	b.n	81bee <setvbuf+0x4a>
   81c22:	f04f 30ff 	mov.w	r0, #4294967295
   81c26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81c2a:	4628      	mov	r0, r5
   81c2c:	6921      	ldr	r1, [r4, #16]
   81c2e:	f000 faa3 	bl	82178 <_free_r>
   81c32:	89a3      	ldrh	r3, [r4, #12]
   81c34:	2e02      	cmp	r6, #2
   81c36:	f023 0383 	bic.w	r3, r3, #131	; 0x83
   81c3a:	b29b      	uxth	r3, r3
   81c3c:	81a3      	strh	r3, [r4, #12]
   81c3e:	d1d1      	bne.n	81be4 <setvbuf+0x40>
   81c40:	2000      	movs	r0, #0
   81c42:	f104 0243 	add.w	r2, r4, #67	; 0x43
   81c46:	f043 0302 	orr.w	r3, r3, #2
   81c4a:	2500      	movs	r5, #0
   81c4c:	2101      	movs	r1, #1
   81c4e:	81a3      	strh	r3, [r4, #12]
   81c50:	60a5      	str	r5, [r4, #8]
   81c52:	6022      	str	r2, [r4, #0]
   81c54:	6122      	str	r2, [r4, #16]
   81c56:	6161      	str	r1, [r4, #20]
   81c58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81c5c:	4628      	mov	r0, r5
   81c5e:	f000 f9a7 	bl	81fb0 <__sinit>
   81c62:	e7ab      	b.n	81bbc <setvbuf+0x18>
   81c64:	2f00      	cmp	r7, #0
   81c66:	bf08      	it	eq
   81c68:	f44f 6780 	moveq.w	r7, #1024	; 0x400
   81c6c:	4638      	mov	r0, r7
   81c6e:	f000 fbe3 	bl	82438 <malloc>
   81c72:	4680      	mov	r8, r0
   81c74:	b128      	cbz	r0, 81c82 <setvbuf+0xde>
   81c76:	89a3      	ldrh	r3, [r4, #12]
   81c78:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   81c7c:	b29b      	uxth	r3, r3
   81c7e:	81a3      	strh	r3, [r4, #12]
   81c80:	e7b3      	b.n	81bea <setvbuf+0x46>
   81c82:	f44f 6080 	mov.w	r0, #1024	; 0x400
   81c86:	f000 fbd7 	bl	82438 <malloc>
   81c8a:	4680      	mov	r8, r0
   81c8c:	b918      	cbnz	r0, 81c96 <setvbuf+0xf2>
   81c8e:	89a3      	ldrh	r3, [r4, #12]
   81c90:	f04f 30ff 	mov.w	r0, #4294967295
   81c94:	e7d5      	b.n	81c42 <setvbuf+0x9e>
   81c96:	f44f 6780 	mov.w	r7, #1024	; 0x400
   81c9a:	e7ec      	b.n	81c76 <setvbuf+0xd2>
   81c9c:	20070560 	.word	0x20070560
   81ca0:	00081fa5 	.word	0x00081fa5

00081ca4 <__swbuf_r>:
   81ca4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   81ca6:	460d      	mov	r5, r1
   81ca8:	4614      	mov	r4, r2
   81caa:	4607      	mov	r7, r0
   81cac:	b110      	cbz	r0, 81cb4 <__swbuf_r+0x10>
   81cae:	6b83      	ldr	r3, [r0, #56]	; 0x38
   81cb0:	2b00      	cmp	r3, #0
   81cb2:	d048      	beq.n	81d46 <__swbuf_r+0xa2>
   81cb4:	89a2      	ldrh	r2, [r4, #12]
   81cb6:	69a0      	ldr	r0, [r4, #24]
   81cb8:	b293      	uxth	r3, r2
   81cba:	60a0      	str	r0, [r4, #8]
   81cbc:	0718      	lsls	r0, r3, #28
   81cbe:	d538      	bpl.n	81d32 <__swbuf_r+0x8e>
   81cc0:	6926      	ldr	r6, [r4, #16]
   81cc2:	2e00      	cmp	r6, #0
   81cc4:	d035      	beq.n	81d32 <__swbuf_r+0x8e>
   81cc6:	0499      	lsls	r1, r3, #18
   81cc8:	b2ed      	uxtb	r5, r5
   81cca:	d515      	bpl.n	81cf8 <__swbuf_r+0x54>
   81ccc:	6823      	ldr	r3, [r4, #0]
   81cce:	6962      	ldr	r2, [r4, #20]
   81cd0:	1b9e      	subs	r6, r3, r6
   81cd2:	4296      	cmp	r6, r2
   81cd4:	da1c      	bge.n	81d10 <__swbuf_r+0x6c>
   81cd6:	3601      	adds	r6, #1
   81cd8:	68a2      	ldr	r2, [r4, #8]
   81cda:	1c59      	adds	r1, r3, #1
   81cdc:	3a01      	subs	r2, #1
   81cde:	60a2      	str	r2, [r4, #8]
   81ce0:	6021      	str	r1, [r4, #0]
   81ce2:	701d      	strb	r5, [r3, #0]
   81ce4:	6963      	ldr	r3, [r4, #20]
   81ce6:	42b3      	cmp	r3, r6
   81ce8:	d01a      	beq.n	81d20 <__swbuf_r+0x7c>
   81cea:	89a3      	ldrh	r3, [r4, #12]
   81cec:	07db      	lsls	r3, r3, #31
   81cee:	d501      	bpl.n	81cf4 <__swbuf_r+0x50>
   81cf0:	2d0a      	cmp	r5, #10
   81cf2:	d015      	beq.n	81d20 <__swbuf_r+0x7c>
   81cf4:	4628      	mov	r0, r5
   81cf6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   81cf8:	6e63      	ldr	r3, [r4, #100]	; 0x64
   81cfa:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   81cfe:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
   81d02:	6663      	str	r3, [r4, #100]	; 0x64
   81d04:	6823      	ldr	r3, [r4, #0]
   81d06:	81a2      	strh	r2, [r4, #12]
   81d08:	6962      	ldr	r2, [r4, #20]
   81d0a:	1b9e      	subs	r6, r3, r6
   81d0c:	4296      	cmp	r6, r2
   81d0e:	dbe2      	blt.n	81cd6 <__swbuf_r+0x32>
   81d10:	4638      	mov	r0, r7
   81d12:	4621      	mov	r1, r4
   81d14:	f000 f930 	bl	81f78 <_fflush_r>
   81d18:	b940      	cbnz	r0, 81d2c <__swbuf_r+0x88>
   81d1a:	6823      	ldr	r3, [r4, #0]
   81d1c:	2601      	movs	r6, #1
   81d1e:	e7db      	b.n	81cd8 <__swbuf_r+0x34>
   81d20:	4638      	mov	r0, r7
   81d22:	4621      	mov	r1, r4
   81d24:	f000 f928 	bl	81f78 <_fflush_r>
   81d28:	2800      	cmp	r0, #0
   81d2a:	d0e3      	beq.n	81cf4 <__swbuf_r+0x50>
   81d2c:	f04f 30ff 	mov.w	r0, #4294967295
   81d30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   81d32:	4638      	mov	r0, r7
   81d34:	4621      	mov	r1, r4
   81d36:	f000 f809 	bl	81d4c <__swsetup_r>
   81d3a:	2800      	cmp	r0, #0
   81d3c:	d1f6      	bne.n	81d2c <__swbuf_r+0x88>
   81d3e:	89a2      	ldrh	r2, [r4, #12]
   81d40:	6926      	ldr	r6, [r4, #16]
   81d42:	b293      	uxth	r3, r2
   81d44:	e7bf      	b.n	81cc6 <__swbuf_r+0x22>
   81d46:	f000 f933 	bl	81fb0 <__sinit>
   81d4a:	e7b3      	b.n	81cb4 <__swbuf_r+0x10>

00081d4c <__swsetup_r>:
   81d4c:	4b2f      	ldr	r3, [pc, #188]	; (81e0c <__swsetup_r+0xc0>)
   81d4e:	b570      	push	{r4, r5, r6, lr}
   81d50:	4606      	mov	r6, r0
   81d52:	6818      	ldr	r0, [r3, #0]
   81d54:	460c      	mov	r4, r1
   81d56:	b110      	cbz	r0, 81d5e <__swsetup_r+0x12>
   81d58:	6b82      	ldr	r2, [r0, #56]	; 0x38
   81d5a:	2a00      	cmp	r2, #0
   81d5c:	d036      	beq.n	81dcc <__swsetup_r+0x80>
   81d5e:	89a5      	ldrh	r5, [r4, #12]
   81d60:	b2ab      	uxth	r3, r5
   81d62:	0719      	lsls	r1, r3, #28
   81d64:	d50c      	bpl.n	81d80 <__swsetup_r+0x34>
   81d66:	6922      	ldr	r2, [r4, #16]
   81d68:	b1aa      	cbz	r2, 81d96 <__swsetup_r+0x4a>
   81d6a:	f013 0101 	ands.w	r1, r3, #1
   81d6e:	d01e      	beq.n	81dae <__swsetup_r+0x62>
   81d70:	6963      	ldr	r3, [r4, #20]
   81d72:	2100      	movs	r1, #0
   81d74:	425b      	negs	r3, r3
   81d76:	61a3      	str	r3, [r4, #24]
   81d78:	60a1      	str	r1, [r4, #8]
   81d7a:	b1f2      	cbz	r2, 81dba <__swsetup_r+0x6e>
   81d7c:	2000      	movs	r0, #0
   81d7e:	bd70      	pop	{r4, r5, r6, pc}
   81d80:	06da      	lsls	r2, r3, #27
   81d82:	d53a      	bpl.n	81dfa <__swsetup_r+0xae>
   81d84:	075b      	lsls	r3, r3, #29
   81d86:	d424      	bmi.n	81dd2 <__swsetup_r+0x86>
   81d88:	6922      	ldr	r2, [r4, #16]
   81d8a:	f045 0308 	orr.w	r3, r5, #8
   81d8e:	81a3      	strh	r3, [r4, #12]
   81d90:	b29b      	uxth	r3, r3
   81d92:	2a00      	cmp	r2, #0
   81d94:	d1e9      	bne.n	81d6a <__swsetup_r+0x1e>
   81d96:	f403 7120 	and.w	r1, r3, #640	; 0x280
   81d9a:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   81d9e:	d0e4      	beq.n	81d6a <__swsetup_r+0x1e>
   81da0:	4630      	mov	r0, r6
   81da2:	4621      	mov	r1, r4
   81da4:	f000 fad8 	bl	82358 <__smakebuf_r>
   81da8:	89a3      	ldrh	r3, [r4, #12]
   81daa:	6922      	ldr	r2, [r4, #16]
   81dac:	e7dd      	b.n	81d6a <__swsetup_r+0x1e>
   81dae:	0798      	lsls	r0, r3, #30
   81db0:	bf58      	it	pl
   81db2:	6961      	ldrpl	r1, [r4, #20]
   81db4:	60a1      	str	r1, [r4, #8]
   81db6:	2a00      	cmp	r2, #0
   81db8:	d1e0      	bne.n	81d7c <__swsetup_r+0x30>
   81dba:	89a3      	ldrh	r3, [r4, #12]
   81dbc:	061a      	lsls	r2, r3, #24
   81dbe:	d5dd      	bpl.n	81d7c <__swsetup_r+0x30>
   81dc0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   81dc4:	81a3      	strh	r3, [r4, #12]
   81dc6:	f04f 30ff 	mov.w	r0, #4294967295
   81dca:	bd70      	pop	{r4, r5, r6, pc}
   81dcc:	f000 f8f0 	bl	81fb0 <__sinit>
   81dd0:	e7c5      	b.n	81d5e <__swsetup_r+0x12>
   81dd2:	6b21      	ldr	r1, [r4, #48]	; 0x30
   81dd4:	b149      	cbz	r1, 81dea <__swsetup_r+0x9e>
   81dd6:	f104 0340 	add.w	r3, r4, #64	; 0x40
   81dda:	4299      	cmp	r1, r3
   81ddc:	d003      	beq.n	81de6 <__swsetup_r+0x9a>
   81dde:	4630      	mov	r0, r6
   81de0:	f000 f9ca 	bl	82178 <_free_r>
   81de4:	89a5      	ldrh	r5, [r4, #12]
   81de6:	2300      	movs	r3, #0
   81de8:	6323      	str	r3, [r4, #48]	; 0x30
   81dea:	6922      	ldr	r2, [r4, #16]
   81dec:	f025 0524 	bic.w	r5, r5, #36	; 0x24
   81df0:	2100      	movs	r1, #0
   81df2:	b2ad      	uxth	r5, r5
   81df4:	6022      	str	r2, [r4, #0]
   81df6:	6061      	str	r1, [r4, #4]
   81df8:	e7c7      	b.n	81d8a <__swsetup_r+0x3e>
   81dfa:	f045 0540 	orr.w	r5, r5, #64	; 0x40
   81dfe:	2309      	movs	r3, #9
   81e00:	6033      	str	r3, [r6, #0]
   81e02:	f04f 30ff 	mov.w	r0, #4294967295
   81e06:	81a5      	strh	r5, [r4, #12]
   81e08:	bd70      	pop	{r4, r5, r6, pc}
   81e0a:	bf00      	nop
   81e0c:	20070560 	.word	0x20070560

00081e10 <register_fini>:
   81e10:	4b02      	ldr	r3, [pc, #8]	; (81e1c <register_fini+0xc>)
   81e12:	b113      	cbz	r3, 81e1a <register_fini+0xa>
   81e14:	4802      	ldr	r0, [pc, #8]	; (81e20 <register_fini+0x10>)
   81e16:	f000 b805 	b.w	81e24 <atexit>
   81e1a:	4770      	bx	lr
   81e1c:	00000000 	.word	0x00000000
   81e20:	000820ad 	.word	0x000820ad

00081e24 <atexit>:
   81e24:	4601      	mov	r1, r0
   81e26:	2000      	movs	r0, #0
   81e28:	4602      	mov	r2, r0
   81e2a:	4603      	mov	r3, r0
   81e2c:	f000 be14 	b.w	82a58 <__register_exitproc>

00081e30 <__sflush_r>:
   81e30:	898b      	ldrh	r3, [r1, #12]
   81e32:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81e36:	b29a      	uxth	r2, r3
   81e38:	460d      	mov	r5, r1
   81e3a:	0711      	lsls	r1, r2, #28
   81e3c:	4680      	mov	r8, r0
   81e3e:	d43c      	bmi.n	81eba <__sflush_r+0x8a>
   81e40:	686a      	ldr	r2, [r5, #4]
   81e42:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   81e46:	2a00      	cmp	r2, #0
   81e48:	81ab      	strh	r3, [r5, #12]
   81e4a:	dd59      	ble.n	81f00 <__sflush_r+0xd0>
   81e4c:	6aac      	ldr	r4, [r5, #40]	; 0x28
   81e4e:	2c00      	cmp	r4, #0
   81e50:	d04b      	beq.n	81eea <__sflush_r+0xba>
   81e52:	b29b      	uxth	r3, r3
   81e54:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
   81e58:	2100      	movs	r1, #0
   81e5a:	b292      	uxth	r2, r2
   81e5c:	f8d8 6000 	ldr.w	r6, [r8]
   81e60:	f8c8 1000 	str.w	r1, [r8]
   81e64:	2a00      	cmp	r2, #0
   81e66:	d04f      	beq.n	81f08 <__sflush_r+0xd8>
   81e68:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   81e6a:	075f      	lsls	r7, r3, #29
   81e6c:	d505      	bpl.n	81e7a <__sflush_r+0x4a>
   81e6e:	6869      	ldr	r1, [r5, #4]
   81e70:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   81e72:	1a52      	subs	r2, r2, r1
   81e74:	b10b      	cbz	r3, 81e7a <__sflush_r+0x4a>
   81e76:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   81e78:	1ad2      	subs	r2, r2, r3
   81e7a:	4640      	mov	r0, r8
   81e7c:	69e9      	ldr	r1, [r5, #28]
   81e7e:	2300      	movs	r3, #0
   81e80:	47a0      	blx	r4
   81e82:	1c44      	adds	r4, r0, #1
   81e84:	d04a      	beq.n	81f1c <__sflush_r+0xec>
   81e86:	89ab      	ldrh	r3, [r5, #12]
   81e88:	692a      	ldr	r2, [r5, #16]
   81e8a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   81e8e:	b29b      	uxth	r3, r3
   81e90:	2100      	movs	r1, #0
   81e92:	602a      	str	r2, [r5, #0]
   81e94:	04da      	lsls	r2, r3, #19
   81e96:	81ab      	strh	r3, [r5, #12]
   81e98:	6069      	str	r1, [r5, #4]
   81e9a:	d44c      	bmi.n	81f36 <__sflush_r+0x106>
   81e9c:	6b29      	ldr	r1, [r5, #48]	; 0x30
   81e9e:	f8c8 6000 	str.w	r6, [r8]
   81ea2:	b311      	cbz	r1, 81eea <__sflush_r+0xba>
   81ea4:	f105 0340 	add.w	r3, r5, #64	; 0x40
   81ea8:	4299      	cmp	r1, r3
   81eaa:	d002      	beq.n	81eb2 <__sflush_r+0x82>
   81eac:	4640      	mov	r0, r8
   81eae:	f000 f963 	bl	82178 <_free_r>
   81eb2:	2000      	movs	r0, #0
   81eb4:	6328      	str	r0, [r5, #48]	; 0x30
   81eb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81eba:	692e      	ldr	r6, [r5, #16]
   81ebc:	b1ae      	cbz	r6, 81eea <__sflush_r+0xba>
   81ebe:	0791      	lsls	r1, r2, #30
   81ec0:	682c      	ldr	r4, [r5, #0]
   81ec2:	bf0c      	ite	eq
   81ec4:	696b      	ldreq	r3, [r5, #20]
   81ec6:	2300      	movne	r3, #0
   81ec8:	602e      	str	r6, [r5, #0]
   81eca:	1ba4      	subs	r4, r4, r6
   81ecc:	60ab      	str	r3, [r5, #8]
   81ece:	e00a      	b.n	81ee6 <__sflush_r+0xb6>
   81ed0:	4632      	mov	r2, r6
   81ed2:	4623      	mov	r3, r4
   81ed4:	6a6f      	ldr	r7, [r5, #36]	; 0x24
   81ed6:	4640      	mov	r0, r8
   81ed8:	69e9      	ldr	r1, [r5, #28]
   81eda:	47b8      	blx	r7
   81edc:	2800      	cmp	r0, #0
   81ede:	ebc0 0404 	rsb	r4, r0, r4
   81ee2:	4406      	add	r6, r0
   81ee4:	dd04      	ble.n	81ef0 <__sflush_r+0xc0>
   81ee6:	2c00      	cmp	r4, #0
   81ee8:	dcf2      	bgt.n	81ed0 <__sflush_r+0xa0>
   81eea:	2000      	movs	r0, #0
   81eec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81ef0:	89ab      	ldrh	r3, [r5, #12]
   81ef2:	f04f 30ff 	mov.w	r0, #4294967295
   81ef6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   81efa:	81ab      	strh	r3, [r5, #12]
   81efc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81f00:	6bea      	ldr	r2, [r5, #60]	; 0x3c
   81f02:	2a00      	cmp	r2, #0
   81f04:	dca2      	bgt.n	81e4c <__sflush_r+0x1c>
   81f06:	e7f0      	b.n	81eea <__sflush_r+0xba>
   81f08:	2301      	movs	r3, #1
   81f0a:	4640      	mov	r0, r8
   81f0c:	69e9      	ldr	r1, [r5, #28]
   81f0e:	47a0      	blx	r4
   81f10:	1c43      	adds	r3, r0, #1
   81f12:	4602      	mov	r2, r0
   81f14:	d01e      	beq.n	81f54 <__sflush_r+0x124>
   81f16:	89ab      	ldrh	r3, [r5, #12]
   81f18:	6aac      	ldr	r4, [r5, #40]	; 0x28
   81f1a:	e7a6      	b.n	81e6a <__sflush_r+0x3a>
   81f1c:	f8d8 3000 	ldr.w	r3, [r8]
   81f20:	b95b      	cbnz	r3, 81f3a <__sflush_r+0x10a>
   81f22:	89aa      	ldrh	r2, [r5, #12]
   81f24:	6929      	ldr	r1, [r5, #16]
   81f26:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
   81f2a:	b292      	uxth	r2, r2
   81f2c:	606b      	str	r3, [r5, #4]
   81f2e:	04d3      	lsls	r3, r2, #19
   81f30:	81aa      	strh	r2, [r5, #12]
   81f32:	6029      	str	r1, [r5, #0]
   81f34:	d5b2      	bpl.n	81e9c <__sflush_r+0x6c>
   81f36:	6528      	str	r0, [r5, #80]	; 0x50
   81f38:	e7b0      	b.n	81e9c <__sflush_r+0x6c>
   81f3a:	2b1d      	cmp	r3, #29
   81f3c:	d001      	beq.n	81f42 <__sflush_r+0x112>
   81f3e:	2b16      	cmp	r3, #22
   81f40:	d113      	bne.n	81f6a <__sflush_r+0x13a>
   81f42:	89a9      	ldrh	r1, [r5, #12]
   81f44:	692b      	ldr	r3, [r5, #16]
   81f46:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
   81f4a:	2200      	movs	r2, #0
   81f4c:	81a9      	strh	r1, [r5, #12]
   81f4e:	602b      	str	r3, [r5, #0]
   81f50:	606a      	str	r2, [r5, #4]
   81f52:	e7a3      	b.n	81e9c <__sflush_r+0x6c>
   81f54:	f8d8 3000 	ldr.w	r3, [r8]
   81f58:	2b00      	cmp	r3, #0
   81f5a:	d0dc      	beq.n	81f16 <__sflush_r+0xe6>
   81f5c:	2b1d      	cmp	r3, #29
   81f5e:	d001      	beq.n	81f64 <__sflush_r+0x134>
   81f60:	2b16      	cmp	r3, #22
   81f62:	d1c5      	bne.n	81ef0 <__sflush_r+0xc0>
   81f64:	f8c8 6000 	str.w	r6, [r8]
   81f68:	e7bf      	b.n	81eea <__sflush_r+0xba>
   81f6a:	89ab      	ldrh	r3, [r5, #12]
   81f6c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   81f70:	81ab      	strh	r3, [r5, #12]
   81f72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81f76:	bf00      	nop

00081f78 <_fflush_r>:
   81f78:	b510      	push	{r4, lr}
   81f7a:	4604      	mov	r4, r0
   81f7c:	b082      	sub	sp, #8
   81f7e:	b108      	cbz	r0, 81f84 <_fflush_r+0xc>
   81f80:	6b83      	ldr	r3, [r0, #56]	; 0x38
   81f82:	b153      	cbz	r3, 81f9a <_fflush_r+0x22>
   81f84:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
   81f88:	b908      	cbnz	r0, 81f8e <_fflush_r+0x16>
   81f8a:	b002      	add	sp, #8
   81f8c:	bd10      	pop	{r4, pc}
   81f8e:	4620      	mov	r0, r4
   81f90:	b002      	add	sp, #8
   81f92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   81f96:	f7ff bf4b 	b.w	81e30 <__sflush_r>
   81f9a:	9101      	str	r1, [sp, #4]
   81f9c:	f000 f808 	bl	81fb0 <__sinit>
   81fa0:	9901      	ldr	r1, [sp, #4]
   81fa2:	e7ef      	b.n	81f84 <_fflush_r+0xc>

00081fa4 <_cleanup_r>:
   81fa4:	4901      	ldr	r1, [pc, #4]	; (81fac <_cleanup_r+0x8>)
   81fa6:	f000 b9b3 	b.w	82310 <_fwalk>
   81faa:	bf00      	nop
   81fac:	00082ba5 	.word	0x00082ba5

00081fb0 <__sinit>:
   81fb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81fb4:	6b84      	ldr	r4, [r0, #56]	; 0x38
   81fb6:	b083      	sub	sp, #12
   81fb8:	4607      	mov	r7, r0
   81fba:	2c00      	cmp	r4, #0
   81fbc:	d165      	bne.n	8208a <__sinit+0xda>
   81fbe:	687d      	ldr	r5, [r7, #4]
   81fc0:	4833      	ldr	r0, [pc, #204]	; (82090 <__sinit+0xe0>)
   81fc2:	2304      	movs	r3, #4
   81fc4:	2103      	movs	r1, #3
   81fc6:	f507 723b 	add.w	r2, r7, #748	; 0x2ec
   81fca:	63f8      	str	r0, [r7, #60]	; 0x3c
   81fcc:	f8c7 12e4 	str.w	r1, [r7, #740]	; 0x2e4
   81fd0:	f8c7 22e8 	str.w	r2, [r7, #744]	; 0x2e8
   81fd4:	f8c7 42e0 	str.w	r4, [r7, #736]	; 0x2e0
   81fd8:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   81fdc:	81ab      	strh	r3, [r5, #12]
   81fde:	602c      	str	r4, [r5, #0]
   81fe0:	606c      	str	r4, [r5, #4]
   81fe2:	60ac      	str	r4, [r5, #8]
   81fe4:	666c      	str	r4, [r5, #100]	; 0x64
   81fe6:	81ec      	strh	r4, [r5, #14]
   81fe8:	612c      	str	r4, [r5, #16]
   81fea:	616c      	str	r4, [r5, #20]
   81fec:	61ac      	str	r4, [r5, #24]
   81fee:	4621      	mov	r1, r4
   81ff0:	2208      	movs	r2, #8
   81ff2:	f7ff fd77 	bl	81ae4 <memset>
   81ff6:	f8df b09c 	ldr.w	fp, [pc, #156]	; 82094 <__sinit+0xe4>
   81ffa:	68be      	ldr	r6, [r7, #8]
   81ffc:	f8df a098 	ldr.w	sl, [pc, #152]	; 82098 <__sinit+0xe8>
   82000:	f8df 9098 	ldr.w	r9, [pc, #152]	; 8209c <__sinit+0xec>
   82004:	f8df 8098 	ldr.w	r8, [pc, #152]	; 820a0 <__sinit+0xf0>
   82008:	2301      	movs	r3, #1
   8200a:	2209      	movs	r2, #9
   8200c:	61ed      	str	r5, [r5, #28]
   8200e:	f8c5 b020 	str.w	fp, [r5, #32]
   82012:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
   82016:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
   8201a:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
   8201e:	4621      	mov	r1, r4
   82020:	81f3      	strh	r3, [r6, #14]
   82022:	81b2      	strh	r2, [r6, #12]
   82024:	6034      	str	r4, [r6, #0]
   82026:	6074      	str	r4, [r6, #4]
   82028:	60b4      	str	r4, [r6, #8]
   8202a:	6674      	str	r4, [r6, #100]	; 0x64
   8202c:	6134      	str	r4, [r6, #16]
   8202e:	6174      	str	r4, [r6, #20]
   82030:	61b4      	str	r4, [r6, #24]
   82032:	2208      	movs	r2, #8
   82034:	f106 005c 	add.w	r0, r6, #92	; 0x5c
   82038:	9301      	str	r3, [sp, #4]
   8203a:	f7ff fd53 	bl	81ae4 <memset>
   8203e:	68fd      	ldr	r5, [r7, #12]
   82040:	2012      	movs	r0, #18
   82042:	2202      	movs	r2, #2
   82044:	61f6      	str	r6, [r6, #28]
   82046:	f8c6 b020 	str.w	fp, [r6, #32]
   8204a:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
   8204e:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
   82052:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
   82056:	4621      	mov	r1, r4
   82058:	81a8      	strh	r0, [r5, #12]
   8205a:	81ea      	strh	r2, [r5, #14]
   8205c:	602c      	str	r4, [r5, #0]
   8205e:	606c      	str	r4, [r5, #4]
   82060:	60ac      	str	r4, [r5, #8]
   82062:	666c      	str	r4, [r5, #100]	; 0x64
   82064:	612c      	str	r4, [r5, #16]
   82066:	616c      	str	r4, [r5, #20]
   82068:	61ac      	str	r4, [r5, #24]
   8206a:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   8206e:	2208      	movs	r2, #8
   82070:	f7ff fd38 	bl	81ae4 <memset>
   82074:	9b01      	ldr	r3, [sp, #4]
   82076:	61ed      	str	r5, [r5, #28]
   82078:	f8c5 b020 	str.w	fp, [r5, #32]
   8207c:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
   82080:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
   82084:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
   82088:	63bb      	str	r3, [r7, #56]	; 0x38
   8208a:	b003      	add	sp, #12
   8208c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82090:	00081fa5 	.word	0x00081fa5
   82094:	000829ad 	.word	0x000829ad
   82098:	000829d1 	.word	0x000829d1
   8209c:	00082a09 	.word	0x00082a09
   820a0:	00082a29 	.word	0x00082a29

000820a4 <__sfp_lock_acquire>:
   820a4:	4770      	bx	lr
   820a6:	bf00      	nop

000820a8 <__sfp_lock_release>:
   820a8:	4770      	bx	lr
   820aa:	bf00      	nop

000820ac <__libc_fini_array>:
   820ac:	b538      	push	{r3, r4, r5, lr}
   820ae:	4d09      	ldr	r5, [pc, #36]	; (820d4 <__libc_fini_array+0x28>)
   820b0:	4c09      	ldr	r4, [pc, #36]	; (820d8 <__libc_fini_array+0x2c>)
   820b2:	1b64      	subs	r4, r4, r5
   820b4:	10a4      	asrs	r4, r4, #2
   820b6:	bf18      	it	ne
   820b8:	eb05 0584 	addne.w	r5, r5, r4, lsl #2
   820bc:	d005      	beq.n	820ca <__libc_fini_array+0x1e>
   820be:	3c01      	subs	r4, #1
   820c0:	f855 3d04 	ldr.w	r3, [r5, #-4]!
   820c4:	4798      	blx	r3
   820c6:	2c00      	cmp	r4, #0
   820c8:	d1f9      	bne.n	820be <__libc_fini_array+0x12>
   820ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   820ce:	f000 bf09 	b.w	82ee4 <_fini>
   820d2:	bf00      	nop
   820d4:	00082ef0 	.word	0x00082ef0
   820d8:	00082ef4 	.word	0x00082ef4

000820dc <_malloc_trim_r>:
   820dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   820de:	4d23      	ldr	r5, [pc, #140]	; (8216c <_malloc_trim_r+0x90>)
   820e0:	460f      	mov	r7, r1
   820e2:	4604      	mov	r4, r0
   820e4:	f000 fc4c 	bl	82980 <__malloc_lock>
   820e8:	68ab      	ldr	r3, [r5, #8]
   820ea:	685e      	ldr	r6, [r3, #4]
   820ec:	f026 0603 	bic.w	r6, r6, #3
   820f0:	1bf1      	subs	r1, r6, r7
   820f2:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
   820f6:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   820fa:	f021 010f 	bic.w	r1, r1, #15
   820fe:	f5a1 5780 	sub.w	r7, r1, #4096	; 0x1000
   82102:	f5b7 5f80 	cmp.w	r7, #4096	; 0x1000
   82106:	db07      	blt.n	82118 <_malloc_trim_r+0x3c>
   82108:	4620      	mov	r0, r4
   8210a:	2100      	movs	r1, #0
   8210c:	f000 fc3c 	bl	82988 <_sbrk_r>
   82110:	68ab      	ldr	r3, [r5, #8]
   82112:	4433      	add	r3, r6
   82114:	4298      	cmp	r0, r3
   82116:	d004      	beq.n	82122 <_malloc_trim_r+0x46>
   82118:	4620      	mov	r0, r4
   8211a:	f000 fc33 	bl	82984 <__malloc_unlock>
   8211e:	2000      	movs	r0, #0
   82120:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82122:	4620      	mov	r0, r4
   82124:	4279      	negs	r1, r7
   82126:	f000 fc2f 	bl	82988 <_sbrk_r>
   8212a:	3001      	adds	r0, #1
   8212c:	d00d      	beq.n	8214a <_malloc_trim_r+0x6e>
   8212e:	4b10      	ldr	r3, [pc, #64]	; (82170 <_malloc_trim_r+0x94>)
   82130:	68aa      	ldr	r2, [r5, #8]
   82132:	6819      	ldr	r1, [r3, #0]
   82134:	1bf6      	subs	r6, r6, r7
   82136:	f046 0601 	orr.w	r6, r6, #1
   8213a:	4620      	mov	r0, r4
   8213c:	1bc9      	subs	r1, r1, r7
   8213e:	6056      	str	r6, [r2, #4]
   82140:	6019      	str	r1, [r3, #0]
   82142:	f000 fc1f 	bl	82984 <__malloc_unlock>
   82146:	2001      	movs	r0, #1
   82148:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8214a:	4620      	mov	r0, r4
   8214c:	2100      	movs	r1, #0
   8214e:	f000 fc1b 	bl	82988 <_sbrk_r>
   82152:	68ab      	ldr	r3, [r5, #8]
   82154:	1ac2      	subs	r2, r0, r3
   82156:	2a0f      	cmp	r2, #15
   82158:	ddde      	ble.n	82118 <_malloc_trim_r+0x3c>
   8215a:	4d06      	ldr	r5, [pc, #24]	; (82174 <_malloc_trim_r+0x98>)
   8215c:	4904      	ldr	r1, [pc, #16]	; (82170 <_malloc_trim_r+0x94>)
   8215e:	682d      	ldr	r5, [r5, #0]
   82160:	f042 0201 	orr.w	r2, r2, #1
   82164:	1b40      	subs	r0, r0, r5
   82166:	605a      	str	r2, [r3, #4]
   82168:	6008      	str	r0, [r1, #0]
   8216a:	e7d5      	b.n	82118 <_malloc_trim_r+0x3c>
   8216c:	20070564 	.word	0x20070564
   82170:	20070ab0 	.word	0x20070ab0
   82174:	20070970 	.word	0x20070970

00082178 <_free_r>:
   82178:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8217c:	460d      	mov	r5, r1
   8217e:	4606      	mov	r6, r0
   82180:	2900      	cmp	r1, #0
   82182:	d055      	beq.n	82230 <_free_r+0xb8>
   82184:	f000 fbfc 	bl	82980 <__malloc_lock>
   82188:	f855 1c04 	ldr.w	r1, [r5, #-4]
   8218c:	f8df c170 	ldr.w	ip, [pc, #368]	; 82300 <_free_r+0x188>
   82190:	f1a5 0408 	sub.w	r4, r5, #8
   82194:	f021 0301 	bic.w	r3, r1, #1
   82198:	18e2      	adds	r2, r4, r3
   8219a:	f8dc 0008 	ldr.w	r0, [ip, #8]
   8219e:	6857      	ldr	r7, [r2, #4]
   821a0:	4290      	cmp	r0, r2
   821a2:	f027 0703 	bic.w	r7, r7, #3
   821a6:	d068      	beq.n	8227a <_free_r+0x102>
   821a8:	f011 0101 	ands.w	r1, r1, #1
   821ac:	6057      	str	r7, [r2, #4]
   821ae:	d032      	beq.n	82216 <_free_r+0x9e>
   821b0:	2100      	movs	r1, #0
   821b2:	19d0      	adds	r0, r2, r7
   821b4:	6840      	ldr	r0, [r0, #4]
   821b6:	07c0      	lsls	r0, r0, #31
   821b8:	d406      	bmi.n	821c8 <_free_r+0x50>
   821ba:	443b      	add	r3, r7
   821bc:	6890      	ldr	r0, [r2, #8]
   821be:	2900      	cmp	r1, #0
   821c0:	d04d      	beq.n	8225e <_free_r+0xe6>
   821c2:	68d2      	ldr	r2, [r2, #12]
   821c4:	60c2      	str	r2, [r0, #12]
   821c6:	6090      	str	r0, [r2, #8]
   821c8:	f043 0201 	orr.w	r2, r3, #1
   821cc:	6062      	str	r2, [r4, #4]
   821ce:	50e3      	str	r3, [r4, r3]
   821d0:	b9e1      	cbnz	r1, 8220c <_free_r+0x94>
   821d2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   821d6:	d32d      	bcc.n	82234 <_free_r+0xbc>
   821d8:	0a5a      	lsrs	r2, r3, #9
   821da:	2a04      	cmp	r2, #4
   821dc:	d869      	bhi.n	822b2 <_free_r+0x13a>
   821de:	0998      	lsrs	r0, r3, #6
   821e0:	3038      	adds	r0, #56	; 0x38
   821e2:	0041      	lsls	r1, r0, #1
   821e4:	eb0c 0c81 	add.w	ip, ip, r1, lsl #2
   821e8:	f8dc 2008 	ldr.w	r2, [ip, #8]
   821ec:	4944      	ldr	r1, [pc, #272]	; (82300 <_free_r+0x188>)
   821ee:	4562      	cmp	r2, ip
   821f0:	d065      	beq.n	822be <_free_r+0x146>
   821f2:	6851      	ldr	r1, [r2, #4]
   821f4:	f021 0103 	bic.w	r1, r1, #3
   821f8:	428b      	cmp	r3, r1
   821fa:	d202      	bcs.n	82202 <_free_r+0x8a>
   821fc:	6892      	ldr	r2, [r2, #8]
   821fe:	4594      	cmp	ip, r2
   82200:	d1f7      	bne.n	821f2 <_free_r+0x7a>
   82202:	68d3      	ldr	r3, [r2, #12]
   82204:	60e3      	str	r3, [r4, #12]
   82206:	60a2      	str	r2, [r4, #8]
   82208:	609c      	str	r4, [r3, #8]
   8220a:	60d4      	str	r4, [r2, #12]
   8220c:	4630      	mov	r0, r6
   8220e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   82212:	f000 bbb7 	b.w	82984 <__malloc_unlock>
   82216:	f855 5c08 	ldr.w	r5, [r5, #-8]
   8221a:	f10c 0808 	add.w	r8, ip, #8
   8221e:	1b64      	subs	r4, r4, r5
   82220:	68a0      	ldr	r0, [r4, #8]
   82222:	442b      	add	r3, r5
   82224:	4540      	cmp	r0, r8
   82226:	d042      	beq.n	822ae <_free_r+0x136>
   82228:	68e5      	ldr	r5, [r4, #12]
   8222a:	60c5      	str	r5, [r0, #12]
   8222c:	60a8      	str	r0, [r5, #8]
   8222e:	e7c0      	b.n	821b2 <_free_r+0x3a>
   82230:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82234:	08db      	lsrs	r3, r3, #3
   82236:	109a      	asrs	r2, r3, #2
   82238:	2001      	movs	r0, #1
   8223a:	4090      	lsls	r0, r2
   8223c:	f8dc 1004 	ldr.w	r1, [ip, #4]
   82240:	eb0c 03c3 	add.w	r3, ip, r3, lsl #3
   82244:	689a      	ldr	r2, [r3, #8]
   82246:	4301      	orrs	r1, r0
   82248:	60a2      	str	r2, [r4, #8]
   8224a:	60e3      	str	r3, [r4, #12]
   8224c:	f8cc 1004 	str.w	r1, [ip, #4]
   82250:	4630      	mov	r0, r6
   82252:	609c      	str	r4, [r3, #8]
   82254:	60d4      	str	r4, [r2, #12]
   82256:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   8225a:	f000 bb93 	b.w	82984 <__malloc_unlock>
   8225e:	4d29      	ldr	r5, [pc, #164]	; (82304 <_free_r+0x18c>)
   82260:	42a8      	cmp	r0, r5
   82262:	d1ae      	bne.n	821c2 <_free_r+0x4a>
   82264:	f043 0201 	orr.w	r2, r3, #1
   82268:	f8cc 4014 	str.w	r4, [ip, #20]
   8226c:	f8cc 4010 	str.w	r4, [ip, #16]
   82270:	60e0      	str	r0, [r4, #12]
   82272:	60a0      	str	r0, [r4, #8]
   82274:	6062      	str	r2, [r4, #4]
   82276:	50e3      	str	r3, [r4, r3]
   82278:	e7c8      	b.n	8220c <_free_r+0x94>
   8227a:	441f      	add	r7, r3
   8227c:	07cb      	lsls	r3, r1, #31
   8227e:	d407      	bmi.n	82290 <_free_r+0x118>
   82280:	f855 1c08 	ldr.w	r1, [r5, #-8]
   82284:	1a64      	subs	r4, r4, r1
   82286:	68e3      	ldr	r3, [r4, #12]
   82288:	68a2      	ldr	r2, [r4, #8]
   8228a:	440f      	add	r7, r1
   8228c:	60d3      	str	r3, [r2, #12]
   8228e:	609a      	str	r2, [r3, #8]
   82290:	4b1d      	ldr	r3, [pc, #116]	; (82308 <_free_r+0x190>)
   82292:	f047 0201 	orr.w	r2, r7, #1
   82296:	681b      	ldr	r3, [r3, #0]
   82298:	6062      	str	r2, [r4, #4]
   8229a:	429f      	cmp	r7, r3
   8229c:	f8cc 4008 	str.w	r4, [ip, #8]
   822a0:	d3b4      	bcc.n	8220c <_free_r+0x94>
   822a2:	4b1a      	ldr	r3, [pc, #104]	; (8230c <_free_r+0x194>)
   822a4:	4630      	mov	r0, r6
   822a6:	6819      	ldr	r1, [r3, #0]
   822a8:	f7ff ff18 	bl	820dc <_malloc_trim_r>
   822ac:	e7ae      	b.n	8220c <_free_r+0x94>
   822ae:	2101      	movs	r1, #1
   822b0:	e77f      	b.n	821b2 <_free_r+0x3a>
   822b2:	2a14      	cmp	r2, #20
   822b4:	d80b      	bhi.n	822ce <_free_r+0x156>
   822b6:	f102 005b 	add.w	r0, r2, #91	; 0x5b
   822ba:	0041      	lsls	r1, r0, #1
   822bc:	e792      	b.n	821e4 <_free_r+0x6c>
   822be:	1080      	asrs	r0, r0, #2
   822c0:	2501      	movs	r5, #1
   822c2:	4085      	lsls	r5, r0
   822c4:	6848      	ldr	r0, [r1, #4]
   822c6:	4613      	mov	r3, r2
   822c8:	4328      	orrs	r0, r5
   822ca:	6048      	str	r0, [r1, #4]
   822cc:	e79a      	b.n	82204 <_free_r+0x8c>
   822ce:	2a54      	cmp	r2, #84	; 0x54
   822d0:	d803      	bhi.n	822da <_free_r+0x162>
   822d2:	0b18      	lsrs	r0, r3, #12
   822d4:	306e      	adds	r0, #110	; 0x6e
   822d6:	0041      	lsls	r1, r0, #1
   822d8:	e784      	b.n	821e4 <_free_r+0x6c>
   822da:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   822de:	d803      	bhi.n	822e8 <_free_r+0x170>
   822e0:	0bd8      	lsrs	r0, r3, #15
   822e2:	3077      	adds	r0, #119	; 0x77
   822e4:	0041      	lsls	r1, r0, #1
   822e6:	e77d      	b.n	821e4 <_free_r+0x6c>
   822e8:	f240 5154 	movw	r1, #1364	; 0x554
   822ec:	428a      	cmp	r2, r1
   822ee:	d803      	bhi.n	822f8 <_free_r+0x180>
   822f0:	0c98      	lsrs	r0, r3, #18
   822f2:	307c      	adds	r0, #124	; 0x7c
   822f4:	0041      	lsls	r1, r0, #1
   822f6:	e775      	b.n	821e4 <_free_r+0x6c>
   822f8:	21fc      	movs	r1, #252	; 0xfc
   822fa:	207e      	movs	r0, #126	; 0x7e
   822fc:	e772      	b.n	821e4 <_free_r+0x6c>
   822fe:	bf00      	nop
   82300:	20070564 	.word	0x20070564
   82304:	2007056c 	.word	0x2007056c
   82308:	2007096c 	.word	0x2007096c
   8230c:	20070aac 	.word	0x20070aac

00082310 <_fwalk>:
   82310:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   82314:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
   82318:	4688      	mov	r8, r1
   8231a:	d019      	beq.n	82350 <_fwalk+0x40>
   8231c:	2600      	movs	r6, #0
   8231e:	687d      	ldr	r5, [r7, #4]
   82320:	68bc      	ldr	r4, [r7, #8]
   82322:	3d01      	subs	r5, #1
   82324:	d40e      	bmi.n	82344 <_fwalk+0x34>
   82326:	89a3      	ldrh	r3, [r4, #12]
   82328:	3d01      	subs	r5, #1
   8232a:	2b01      	cmp	r3, #1
   8232c:	d906      	bls.n	8233c <_fwalk+0x2c>
   8232e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   82332:	4620      	mov	r0, r4
   82334:	3301      	adds	r3, #1
   82336:	d001      	beq.n	8233c <_fwalk+0x2c>
   82338:	47c0      	blx	r8
   8233a:	4306      	orrs	r6, r0
   8233c:	1c6b      	adds	r3, r5, #1
   8233e:	f104 0468 	add.w	r4, r4, #104	; 0x68
   82342:	d1f0      	bne.n	82326 <_fwalk+0x16>
   82344:	683f      	ldr	r7, [r7, #0]
   82346:	2f00      	cmp	r7, #0
   82348:	d1e9      	bne.n	8231e <_fwalk+0xe>
   8234a:	4630      	mov	r0, r6
   8234c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82350:	463e      	mov	r6, r7
   82352:	4630      	mov	r0, r6
   82354:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00082358 <__smakebuf_r>:
   82358:	b5f0      	push	{r4, r5, r6, r7, lr}
   8235a:	898b      	ldrh	r3, [r1, #12]
   8235c:	b091      	sub	sp, #68	; 0x44
   8235e:	b29a      	uxth	r2, r3
   82360:	0796      	lsls	r6, r2, #30
   82362:	460c      	mov	r4, r1
   82364:	4605      	mov	r5, r0
   82366:	d437      	bmi.n	823d8 <__smakebuf_r+0x80>
   82368:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   8236c:	2900      	cmp	r1, #0
   8236e:	db17      	blt.n	823a0 <__smakebuf_r+0x48>
   82370:	aa01      	add	r2, sp, #4
   82372:	f000 fc1f 	bl	82bb4 <_fstat_r>
   82376:	2800      	cmp	r0, #0
   82378:	db10      	blt.n	8239c <__smakebuf_r+0x44>
   8237a:	9b02      	ldr	r3, [sp, #8]
   8237c:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
   82380:	f5b3 5100 	subs.w	r1, r3, #8192	; 0x2000
   82384:	424f      	negs	r7, r1
   82386:	414f      	adcs	r7, r1
   82388:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
   8238c:	d02c      	beq.n	823e8 <__smakebuf_r+0x90>
   8238e:	89a3      	ldrh	r3, [r4, #12]
   82390:	f44f 6680 	mov.w	r6, #1024	; 0x400
   82394:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   82398:	81a3      	strh	r3, [r4, #12]
   8239a:	e00b      	b.n	823b4 <__smakebuf_r+0x5c>
   8239c:	89a3      	ldrh	r3, [r4, #12]
   8239e:	b29a      	uxth	r2, r3
   823a0:	f012 0f80 	tst.w	r2, #128	; 0x80
   823a4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   823a8:	81a3      	strh	r3, [r4, #12]
   823aa:	bf14      	ite	ne
   823ac:	2640      	movne	r6, #64	; 0x40
   823ae:	f44f 6680 	moveq.w	r6, #1024	; 0x400
   823b2:	2700      	movs	r7, #0
   823b4:	4628      	mov	r0, r5
   823b6:	4631      	mov	r1, r6
   823b8:	f000 f846 	bl	82448 <_malloc_r>
   823bc:	89a3      	ldrh	r3, [r4, #12]
   823be:	2800      	cmp	r0, #0
   823c0:	d029      	beq.n	82416 <__smakebuf_r+0xbe>
   823c2:	4a1b      	ldr	r2, [pc, #108]	; (82430 <__smakebuf_r+0xd8>)
   823c4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   823c8:	63ea      	str	r2, [r5, #60]	; 0x3c
   823ca:	81a3      	strh	r3, [r4, #12]
   823cc:	6020      	str	r0, [r4, #0]
   823ce:	6120      	str	r0, [r4, #16]
   823d0:	6166      	str	r6, [r4, #20]
   823d2:	b9a7      	cbnz	r7, 823fe <__smakebuf_r+0xa6>
   823d4:	b011      	add	sp, #68	; 0x44
   823d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   823d8:	f101 0343 	add.w	r3, r1, #67	; 0x43
   823dc:	2201      	movs	r2, #1
   823de:	600b      	str	r3, [r1, #0]
   823e0:	610b      	str	r3, [r1, #16]
   823e2:	614a      	str	r2, [r1, #20]
   823e4:	b011      	add	sp, #68	; 0x44
   823e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   823e8:	4a12      	ldr	r2, [pc, #72]	; (82434 <__smakebuf_r+0xdc>)
   823ea:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   823ec:	4293      	cmp	r3, r2
   823ee:	d1ce      	bne.n	8238e <__smakebuf_r+0x36>
   823f0:	89a3      	ldrh	r3, [r4, #12]
   823f2:	f44f 6680 	mov.w	r6, #1024	; 0x400
   823f6:	4333      	orrs	r3, r6
   823f8:	81a3      	strh	r3, [r4, #12]
   823fa:	64e6      	str	r6, [r4, #76]	; 0x4c
   823fc:	e7da      	b.n	823b4 <__smakebuf_r+0x5c>
   823fe:	4628      	mov	r0, r5
   82400:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   82404:	f000 fbea 	bl	82bdc <_isatty_r>
   82408:	2800      	cmp	r0, #0
   8240a:	d0e3      	beq.n	823d4 <__smakebuf_r+0x7c>
   8240c:	89a3      	ldrh	r3, [r4, #12]
   8240e:	f043 0301 	orr.w	r3, r3, #1
   82412:	81a3      	strh	r3, [r4, #12]
   82414:	e7de      	b.n	823d4 <__smakebuf_r+0x7c>
   82416:	059a      	lsls	r2, r3, #22
   82418:	d4dc      	bmi.n	823d4 <__smakebuf_r+0x7c>
   8241a:	f104 0243 	add.w	r2, r4, #67	; 0x43
   8241e:	f043 0302 	orr.w	r3, r3, #2
   82422:	2101      	movs	r1, #1
   82424:	81a3      	strh	r3, [r4, #12]
   82426:	6022      	str	r2, [r4, #0]
   82428:	6122      	str	r2, [r4, #16]
   8242a:	6161      	str	r1, [r4, #20]
   8242c:	e7d2      	b.n	823d4 <__smakebuf_r+0x7c>
   8242e:	bf00      	nop
   82430:	00081fa5 	.word	0x00081fa5
   82434:	00082a09 	.word	0x00082a09

00082438 <malloc>:
   82438:	4b02      	ldr	r3, [pc, #8]	; (82444 <malloc+0xc>)
   8243a:	4601      	mov	r1, r0
   8243c:	6818      	ldr	r0, [r3, #0]
   8243e:	f000 b803 	b.w	82448 <_malloc_r>
   82442:	bf00      	nop
   82444:	20070560 	.word	0x20070560

00082448 <_malloc_r>:
   82448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8244c:	f101 050b 	add.w	r5, r1, #11
   82450:	2d16      	cmp	r5, #22
   82452:	b083      	sub	sp, #12
   82454:	4606      	mov	r6, r0
   82456:	d927      	bls.n	824a8 <_malloc_r+0x60>
   82458:	f035 0507 	bics.w	r5, r5, #7
   8245c:	d427      	bmi.n	824ae <_malloc_r+0x66>
   8245e:	42a9      	cmp	r1, r5
   82460:	d825      	bhi.n	824ae <_malloc_r+0x66>
   82462:	4630      	mov	r0, r6
   82464:	f000 fa8c 	bl	82980 <__malloc_lock>
   82468:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
   8246c:	d226      	bcs.n	824bc <_malloc_r+0x74>
   8246e:	4fc1      	ldr	r7, [pc, #772]	; (82774 <_malloc_r+0x32c>)
   82470:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
   82474:	eb07 03cc 	add.w	r3, r7, ip, lsl #3
   82478:	68dc      	ldr	r4, [r3, #12]
   8247a:	429c      	cmp	r4, r3
   8247c:	f000 81d2 	beq.w	82824 <_malloc_r+0x3dc>
   82480:	6863      	ldr	r3, [r4, #4]
   82482:	68e2      	ldr	r2, [r4, #12]
   82484:	f023 0303 	bic.w	r3, r3, #3
   82488:	4423      	add	r3, r4
   8248a:	6858      	ldr	r0, [r3, #4]
   8248c:	68a1      	ldr	r1, [r4, #8]
   8248e:	f040 0501 	orr.w	r5, r0, #1
   82492:	60ca      	str	r2, [r1, #12]
   82494:	4630      	mov	r0, r6
   82496:	6091      	str	r1, [r2, #8]
   82498:	605d      	str	r5, [r3, #4]
   8249a:	f000 fa73 	bl	82984 <__malloc_unlock>
   8249e:	3408      	adds	r4, #8
   824a0:	4620      	mov	r0, r4
   824a2:	b003      	add	sp, #12
   824a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   824a8:	2510      	movs	r5, #16
   824aa:	42a9      	cmp	r1, r5
   824ac:	d9d9      	bls.n	82462 <_malloc_r+0x1a>
   824ae:	2400      	movs	r4, #0
   824b0:	230c      	movs	r3, #12
   824b2:	4620      	mov	r0, r4
   824b4:	6033      	str	r3, [r6, #0]
   824b6:	b003      	add	sp, #12
   824b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   824bc:	ea5f 2c55 	movs.w	ip, r5, lsr #9
   824c0:	f000 8089 	beq.w	825d6 <_malloc_r+0x18e>
   824c4:	f1bc 0f04 	cmp.w	ip, #4
   824c8:	f200 8160 	bhi.w	8278c <_malloc_r+0x344>
   824cc:	ea4f 1c95 	mov.w	ip, r5, lsr #6
   824d0:	f10c 0c38 	add.w	ip, ip, #56	; 0x38
   824d4:	ea4f 014c 	mov.w	r1, ip, lsl #1
   824d8:	4fa6      	ldr	r7, [pc, #664]	; (82774 <_malloc_r+0x32c>)
   824da:	eb07 0181 	add.w	r1, r7, r1, lsl #2
   824de:	68cc      	ldr	r4, [r1, #12]
   824e0:	42a1      	cmp	r1, r4
   824e2:	d105      	bne.n	824f0 <_malloc_r+0xa8>
   824e4:	e00c      	b.n	82500 <_malloc_r+0xb8>
   824e6:	2b00      	cmp	r3, #0
   824e8:	da79      	bge.n	825de <_malloc_r+0x196>
   824ea:	68e4      	ldr	r4, [r4, #12]
   824ec:	42a1      	cmp	r1, r4
   824ee:	d007      	beq.n	82500 <_malloc_r+0xb8>
   824f0:	6862      	ldr	r2, [r4, #4]
   824f2:	f022 0203 	bic.w	r2, r2, #3
   824f6:	1b53      	subs	r3, r2, r5
   824f8:	2b0f      	cmp	r3, #15
   824fa:	ddf4      	ble.n	824e6 <_malloc_r+0x9e>
   824fc:	f10c 3cff 	add.w	ip, ip, #4294967295
   82500:	f10c 0c01 	add.w	ip, ip, #1
   82504:	4b9b      	ldr	r3, [pc, #620]	; (82774 <_malloc_r+0x32c>)
   82506:	693c      	ldr	r4, [r7, #16]
   82508:	f103 0e08 	add.w	lr, r3, #8
   8250c:	4574      	cmp	r4, lr
   8250e:	f000 817e 	beq.w	8280e <_malloc_r+0x3c6>
   82512:	6861      	ldr	r1, [r4, #4]
   82514:	f021 0103 	bic.w	r1, r1, #3
   82518:	1b4a      	subs	r2, r1, r5
   8251a:	2a0f      	cmp	r2, #15
   8251c:	f300 8164 	bgt.w	827e8 <_malloc_r+0x3a0>
   82520:	2a00      	cmp	r2, #0
   82522:	f8c3 e014 	str.w	lr, [r3, #20]
   82526:	f8c3 e010 	str.w	lr, [r3, #16]
   8252a:	da69      	bge.n	82600 <_malloc_r+0x1b8>
   8252c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   82530:	f080 813a 	bcs.w	827a8 <_malloc_r+0x360>
   82534:	08c9      	lsrs	r1, r1, #3
   82536:	108a      	asrs	r2, r1, #2
   82538:	f04f 0801 	mov.w	r8, #1
   8253c:	fa08 f802 	lsl.w	r8, r8, r2
   82540:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   82544:	685a      	ldr	r2, [r3, #4]
   82546:	6888      	ldr	r0, [r1, #8]
   82548:	ea48 0202 	orr.w	r2, r8, r2
   8254c:	60a0      	str	r0, [r4, #8]
   8254e:	60e1      	str	r1, [r4, #12]
   82550:	605a      	str	r2, [r3, #4]
   82552:	608c      	str	r4, [r1, #8]
   82554:	60c4      	str	r4, [r0, #12]
   82556:	ea4f 03ac 	mov.w	r3, ip, asr #2
   8255a:	2001      	movs	r0, #1
   8255c:	4098      	lsls	r0, r3
   8255e:	4290      	cmp	r0, r2
   82560:	d85b      	bhi.n	8261a <_malloc_r+0x1d2>
   82562:	4202      	tst	r2, r0
   82564:	d106      	bne.n	82574 <_malloc_r+0x12c>
   82566:	f02c 0c03 	bic.w	ip, ip, #3
   8256a:	0040      	lsls	r0, r0, #1
   8256c:	4202      	tst	r2, r0
   8256e:	f10c 0c04 	add.w	ip, ip, #4
   82572:	d0fa      	beq.n	8256a <_malloc_r+0x122>
   82574:	eb07 08cc 	add.w	r8, r7, ip, lsl #3
   82578:	4644      	mov	r4, r8
   8257a:	46e1      	mov	r9, ip
   8257c:	68e3      	ldr	r3, [r4, #12]
   8257e:	429c      	cmp	r4, r3
   82580:	d107      	bne.n	82592 <_malloc_r+0x14a>
   82582:	e146      	b.n	82812 <_malloc_r+0x3ca>
   82584:	2a00      	cmp	r2, #0
   82586:	f280 8157 	bge.w	82838 <_malloc_r+0x3f0>
   8258a:	68db      	ldr	r3, [r3, #12]
   8258c:	429c      	cmp	r4, r3
   8258e:	f000 8140 	beq.w	82812 <_malloc_r+0x3ca>
   82592:	6859      	ldr	r1, [r3, #4]
   82594:	f021 0103 	bic.w	r1, r1, #3
   82598:	1b4a      	subs	r2, r1, r5
   8259a:	2a0f      	cmp	r2, #15
   8259c:	ddf2      	ble.n	82584 <_malloc_r+0x13c>
   8259e:	461c      	mov	r4, r3
   825a0:	f854 cf08 	ldr.w	ip, [r4, #8]!
   825a4:	68d9      	ldr	r1, [r3, #12]
   825a6:	f045 0901 	orr.w	r9, r5, #1
   825aa:	f042 0801 	orr.w	r8, r2, #1
   825ae:	441d      	add	r5, r3
   825b0:	f8c3 9004 	str.w	r9, [r3, #4]
   825b4:	4630      	mov	r0, r6
   825b6:	f8cc 100c 	str.w	r1, [ip, #12]
   825ba:	f8c1 c008 	str.w	ip, [r1, #8]
   825be:	617d      	str	r5, [r7, #20]
   825c0:	613d      	str	r5, [r7, #16]
   825c2:	f8c5 e00c 	str.w	lr, [r5, #12]
   825c6:	f8c5 e008 	str.w	lr, [r5, #8]
   825ca:	f8c5 8004 	str.w	r8, [r5, #4]
   825ce:	50aa      	str	r2, [r5, r2]
   825d0:	f000 f9d8 	bl	82984 <__malloc_unlock>
   825d4:	e764      	b.n	824a0 <_malloc_r+0x58>
   825d6:	217e      	movs	r1, #126	; 0x7e
   825d8:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
   825dc:	e77c      	b.n	824d8 <_malloc_r+0x90>
   825de:	4422      	add	r2, r4
   825e0:	6850      	ldr	r0, [r2, #4]
   825e2:	68e3      	ldr	r3, [r4, #12]
   825e4:	68a1      	ldr	r1, [r4, #8]
   825e6:	f040 0501 	orr.w	r5, r0, #1
   825ea:	60cb      	str	r3, [r1, #12]
   825ec:	4630      	mov	r0, r6
   825ee:	6099      	str	r1, [r3, #8]
   825f0:	6055      	str	r5, [r2, #4]
   825f2:	f000 f9c7 	bl	82984 <__malloc_unlock>
   825f6:	3408      	adds	r4, #8
   825f8:	4620      	mov	r0, r4
   825fa:	b003      	add	sp, #12
   825fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82600:	4421      	add	r1, r4
   82602:	684b      	ldr	r3, [r1, #4]
   82604:	4630      	mov	r0, r6
   82606:	f043 0301 	orr.w	r3, r3, #1
   8260a:	604b      	str	r3, [r1, #4]
   8260c:	f000 f9ba 	bl	82984 <__malloc_unlock>
   82610:	3408      	adds	r4, #8
   82612:	4620      	mov	r0, r4
   82614:	b003      	add	sp, #12
   82616:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8261a:	68bc      	ldr	r4, [r7, #8]
   8261c:	6863      	ldr	r3, [r4, #4]
   8261e:	f023 0903 	bic.w	r9, r3, #3
   82622:	45a9      	cmp	r9, r5
   82624:	d304      	bcc.n	82630 <_malloc_r+0x1e8>
   82626:	ebc5 0309 	rsb	r3, r5, r9
   8262a:	2b0f      	cmp	r3, #15
   8262c:	f300 8091 	bgt.w	82752 <_malloc_r+0x30a>
   82630:	4b51      	ldr	r3, [pc, #324]	; (82778 <_malloc_r+0x330>)
   82632:	4a52      	ldr	r2, [pc, #328]	; (8277c <_malloc_r+0x334>)
   82634:	6819      	ldr	r1, [r3, #0]
   82636:	6813      	ldr	r3, [r2, #0]
   82638:	eb05 0a01 	add.w	sl, r5, r1
   8263c:	3301      	adds	r3, #1
   8263e:	eb04 0b09 	add.w	fp, r4, r9
   82642:	f000 8161 	beq.w	82908 <_malloc_r+0x4c0>
   82646:	f50a 5a80 	add.w	sl, sl, #4096	; 0x1000
   8264a:	f10a 0a0f 	add.w	sl, sl, #15
   8264e:	f42a 6a7f 	bic.w	sl, sl, #4080	; 0xff0
   82652:	f02a 0a0f 	bic.w	sl, sl, #15
   82656:	4630      	mov	r0, r6
   82658:	4651      	mov	r1, sl
   8265a:	9201      	str	r2, [sp, #4]
   8265c:	f000 f994 	bl	82988 <_sbrk_r>
   82660:	f1b0 3fff 	cmp.w	r0, #4294967295
   82664:	4680      	mov	r8, r0
   82666:	9a01      	ldr	r2, [sp, #4]
   82668:	f000 8101 	beq.w	8286e <_malloc_r+0x426>
   8266c:	4583      	cmp	fp, r0
   8266e:	f200 80fb 	bhi.w	82868 <_malloc_r+0x420>
   82672:	f8df c114 	ldr.w	ip, [pc, #276]	; 82788 <_malloc_r+0x340>
   82676:	45c3      	cmp	fp, r8
   82678:	f8dc 3000 	ldr.w	r3, [ip]
   8267c:	4453      	add	r3, sl
   8267e:	f8cc 3000 	str.w	r3, [ip]
   82682:	f000 814a 	beq.w	8291a <_malloc_r+0x4d2>
   82686:	6812      	ldr	r2, [r2, #0]
   82688:	493c      	ldr	r1, [pc, #240]	; (8277c <_malloc_r+0x334>)
   8268a:	3201      	adds	r2, #1
   8268c:	bf1b      	ittet	ne
   8268e:	ebcb 0b08 	rsbne	fp, fp, r8
   82692:	445b      	addne	r3, fp
   82694:	f8c1 8000 	streq.w	r8, [r1]
   82698:	f8cc 3000 	strne.w	r3, [ip]
   8269c:	f018 0307 	ands.w	r3, r8, #7
   826a0:	f000 8114 	beq.w	828cc <_malloc_r+0x484>
   826a4:	f1c3 0208 	rsb	r2, r3, #8
   826a8:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
   826ac:	4490      	add	r8, r2
   826ae:	3308      	adds	r3, #8
   826b0:	44c2      	add	sl, r8
   826b2:	f3ca 0a0b 	ubfx	sl, sl, #0, #12
   826b6:	ebca 0a03 	rsb	sl, sl, r3
   826ba:	4651      	mov	r1, sl
   826bc:	4630      	mov	r0, r6
   826be:	f8cd c004 	str.w	ip, [sp, #4]
   826c2:	f000 f961 	bl	82988 <_sbrk_r>
   826c6:	1c43      	adds	r3, r0, #1
   826c8:	f8dd c004 	ldr.w	ip, [sp, #4]
   826cc:	f000 8135 	beq.w	8293a <_malloc_r+0x4f2>
   826d0:	ebc8 0200 	rsb	r2, r8, r0
   826d4:	4452      	add	r2, sl
   826d6:	f042 0201 	orr.w	r2, r2, #1
   826da:	f8dc 3000 	ldr.w	r3, [ip]
   826de:	42bc      	cmp	r4, r7
   826e0:	4453      	add	r3, sl
   826e2:	f8c7 8008 	str.w	r8, [r7, #8]
   826e6:	f8cc 3000 	str.w	r3, [ip]
   826ea:	f8c8 2004 	str.w	r2, [r8, #4]
   826ee:	f8df a098 	ldr.w	sl, [pc, #152]	; 82788 <_malloc_r+0x340>
   826f2:	d015      	beq.n	82720 <_malloc_r+0x2d8>
   826f4:	f1b9 0f0f 	cmp.w	r9, #15
   826f8:	f240 80eb 	bls.w	828d2 <_malloc_r+0x48a>
   826fc:	6861      	ldr	r1, [r4, #4]
   826fe:	f1a9 020c 	sub.w	r2, r9, #12
   82702:	f022 0207 	bic.w	r2, r2, #7
   82706:	f001 0101 	and.w	r1, r1, #1
   8270a:	ea42 0e01 	orr.w	lr, r2, r1
   8270e:	2005      	movs	r0, #5
   82710:	18a1      	adds	r1, r4, r2
   82712:	2a0f      	cmp	r2, #15
   82714:	f8c4 e004 	str.w	lr, [r4, #4]
   82718:	6048      	str	r0, [r1, #4]
   8271a:	6088      	str	r0, [r1, #8]
   8271c:	f200 8111 	bhi.w	82942 <_malloc_r+0x4fa>
   82720:	4a17      	ldr	r2, [pc, #92]	; (82780 <_malloc_r+0x338>)
   82722:	68bc      	ldr	r4, [r7, #8]
   82724:	6811      	ldr	r1, [r2, #0]
   82726:	428b      	cmp	r3, r1
   82728:	bf88      	it	hi
   8272a:	6013      	strhi	r3, [r2, #0]
   8272c:	4a15      	ldr	r2, [pc, #84]	; (82784 <_malloc_r+0x33c>)
   8272e:	6811      	ldr	r1, [r2, #0]
   82730:	428b      	cmp	r3, r1
   82732:	bf88      	it	hi
   82734:	6013      	strhi	r3, [r2, #0]
   82736:	6862      	ldr	r2, [r4, #4]
   82738:	f022 0203 	bic.w	r2, r2, #3
   8273c:	4295      	cmp	r5, r2
   8273e:	ebc5 0302 	rsb	r3, r5, r2
   82742:	d801      	bhi.n	82748 <_malloc_r+0x300>
   82744:	2b0f      	cmp	r3, #15
   82746:	dc04      	bgt.n	82752 <_malloc_r+0x30a>
   82748:	4630      	mov	r0, r6
   8274a:	f000 f91b 	bl	82984 <__malloc_unlock>
   8274e:	2400      	movs	r4, #0
   82750:	e6a6      	b.n	824a0 <_malloc_r+0x58>
   82752:	f045 0201 	orr.w	r2, r5, #1
   82756:	f043 0301 	orr.w	r3, r3, #1
   8275a:	4425      	add	r5, r4
   8275c:	6062      	str	r2, [r4, #4]
   8275e:	4630      	mov	r0, r6
   82760:	60bd      	str	r5, [r7, #8]
   82762:	606b      	str	r3, [r5, #4]
   82764:	f000 f90e 	bl	82984 <__malloc_unlock>
   82768:	3408      	adds	r4, #8
   8276a:	4620      	mov	r0, r4
   8276c:	b003      	add	sp, #12
   8276e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82772:	bf00      	nop
   82774:	20070564 	.word	0x20070564
   82778:	20070aac 	.word	0x20070aac
   8277c:	20070970 	.word	0x20070970
   82780:	20070aa8 	.word	0x20070aa8
   82784:	20070aa4 	.word	0x20070aa4
   82788:	20070ab0 	.word	0x20070ab0
   8278c:	f1bc 0f14 	cmp.w	ip, #20
   82790:	d961      	bls.n	82856 <_malloc_r+0x40e>
   82792:	f1bc 0f54 	cmp.w	ip, #84	; 0x54
   82796:	f200 808f 	bhi.w	828b8 <_malloc_r+0x470>
   8279a:	ea4f 3c15 	mov.w	ip, r5, lsr #12
   8279e:	f10c 0c6e 	add.w	ip, ip, #110	; 0x6e
   827a2:	ea4f 014c 	mov.w	r1, ip, lsl #1
   827a6:	e697      	b.n	824d8 <_malloc_r+0x90>
   827a8:	0a4b      	lsrs	r3, r1, #9
   827aa:	2b04      	cmp	r3, #4
   827ac:	d958      	bls.n	82860 <_malloc_r+0x418>
   827ae:	2b14      	cmp	r3, #20
   827b0:	f200 80ad 	bhi.w	8290e <_malloc_r+0x4c6>
   827b4:	f103 025b 	add.w	r2, r3, #91	; 0x5b
   827b8:	0050      	lsls	r0, r2, #1
   827ba:	eb07 0080 	add.w	r0, r7, r0, lsl #2
   827be:	6883      	ldr	r3, [r0, #8]
   827c0:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 8297c <_malloc_r+0x534>
   827c4:	4283      	cmp	r3, r0
   827c6:	f000 808a 	beq.w	828de <_malloc_r+0x496>
   827ca:	685a      	ldr	r2, [r3, #4]
   827cc:	f022 0203 	bic.w	r2, r2, #3
   827d0:	4291      	cmp	r1, r2
   827d2:	d202      	bcs.n	827da <_malloc_r+0x392>
   827d4:	689b      	ldr	r3, [r3, #8]
   827d6:	4298      	cmp	r0, r3
   827d8:	d1f7      	bne.n	827ca <_malloc_r+0x382>
   827da:	68d9      	ldr	r1, [r3, #12]
   827dc:	687a      	ldr	r2, [r7, #4]
   827de:	60e1      	str	r1, [r4, #12]
   827e0:	60a3      	str	r3, [r4, #8]
   827e2:	608c      	str	r4, [r1, #8]
   827e4:	60dc      	str	r4, [r3, #12]
   827e6:	e6b6      	b.n	82556 <_malloc_r+0x10e>
   827e8:	f045 0701 	orr.w	r7, r5, #1
   827ec:	f042 0101 	orr.w	r1, r2, #1
   827f0:	4425      	add	r5, r4
   827f2:	6067      	str	r7, [r4, #4]
   827f4:	4630      	mov	r0, r6
   827f6:	615d      	str	r5, [r3, #20]
   827f8:	611d      	str	r5, [r3, #16]
   827fa:	f8c5 e00c 	str.w	lr, [r5, #12]
   827fe:	f8c5 e008 	str.w	lr, [r5, #8]
   82802:	6069      	str	r1, [r5, #4]
   82804:	50aa      	str	r2, [r5, r2]
   82806:	3408      	adds	r4, #8
   82808:	f000 f8bc 	bl	82984 <__malloc_unlock>
   8280c:	e648      	b.n	824a0 <_malloc_r+0x58>
   8280e:	685a      	ldr	r2, [r3, #4]
   82810:	e6a1      	b.n	82556 <_malloc_r+0x10e>
   82812:	f109 0901 	add.w	r9, r9, #1
   82816:	f019 0f03 	tst.w	r9, #3
   8281a:	f104 0408 	add.w	r4, r4, #8
   8281e:	f47f aead 	bne.w	8257c <_malloc_r+0x134>
   82822:	e02d      	b.n	82880 <_malloc_r+0x438>
   82824:	f104 0308 	add.w	r3, r4, #8
   82828:	6964      	ldr	r4, [r4, #20]
   8282a:	42a3      	cmp	r3, r4
   8282c:	bf08      	it	eq
   8282e:	f10c 0c02 	addeq.w	ip, ip, #2
   82832:	f43f ae67 	beq.w	82504 <_malloc_r+0xbc>
   82836:	e623      	b.n	82480 <_malloc_r+0x38>
   82838:	4419      	add	r1, r3
   8283a:	6848      	ldr	r0, [r1, #4]
   8283c:	461c      	mov	r4, r3
   8283e:	f854 2f08 	ldr.w	r2, [r4, #8]!
   82842:	68db      	ldr	r3, [r3, #12]
   82844:	f040 0501 	orr.w	r5, r0, #1
   82848:	604d      	str	r5, [r1, #4]
   8284a:	4630      	mov	r0, r6
   8284c:	60d3      	str	r3, [r2, #12]
   8284e:	609a      	str	r2, [r3, #8]
   82850:	f000 f898 	bl	82984 <__malloc_unlock>
   82854:	e624      	b.n	824a0 <_malloc_r+0x58>
   82856:	f10c 0c5b 	add.w	ip, ip, #91	; 0x5b
   8285a:	ea4f 014c 	mov.w	r1, ip, lsl #1
   8285e:	e63b      	b.n	824d8 <_malloc_r+0x90>
   82860:	098a      	lsrs	r2, r1, #6
   82862:	3238      	adds	r2, #56	; 0x38
   82864:	0050      	lsls	r0, r2, #1
   82866:	e7a8      	b.n	827ba <_malloc_r+0x372>
   82868:	42bc      	cmp	r4, r7
   8286a:	f43f af02 	beq.w	82672 <_malloc_r+0x22a>
   8286e:	68bc      	ldr	r4, [r7, #8]
   82870:	6862      	ldr	r2, [r4, #4]
   82872:	f022 0203 	bic.w	r2, r2, #3
   82876:	e761      	b.n	8273c <_malloc_r+0x2f4>
   82878:	f8d8 8000 	ldr.w	r8, [r8]
   8287c:	4598      	cmp	r8, r3
   8287e:	d17a      	bne.n	82976 <_malloc_r+0x52e>
   82880:	f01c 0f03 	tst.w	ip, #3
   82884:	f1a8 0308 	sub.w	r3, r8, #8
   82888:	f10c 3cff 	add.w	ip, ip, #4294967295
   8288c:	d1f4      	bne.n	82878 <_malloc_r+0x430>
   8288e:	687b      	ldr	r3, [r7, #4]
   82890:	ea23 0300 	bic.w	r3, r3, r0
   82894:	607b      	str	r3, [r7, #4]
   82896:	0040      	lsls	r0, r0, #1
   82898:	4298      	cmp	r0, r3
   8289a:	f63f aebe 	bhi.w	8261a <_malloc_r+0x1d2>
   8289e:	2800      	cmp	r0, #0
   828a0:	f43f aebb 	beq.w	8261a <_malloc_r+0x1d2>
   828a4:	4203      	tst	r3, r0
   828a6:	46cc      	mov	ip, r9
   828a8:	f47f ae64 	bne.w	82574 <_malloc_r+0x12c>
   828ac:	0040      	lsls	r0, r0, #1
   828ae:	4203      	tst	r3, r0
   828b0:	f10c 0c04 	add.w	ip, ip, #4
   828b4:	d0fa      	beq.n	828ac <_malloc_r+0x464>
   828b6:	e65d      	b.n	82574 <_malloc_r+0x12c>
   828b8:	f5bc 7faa 	cmp.w	ip, #340	; 0x154
   828bc:	d819      	bhi.n	828f2 <_malloc_r+0x4aa>
   828be:	ea4f 3cd5 	mov.w	ip, r5, lsr #15
   828c2:	f10c 0c77 	add.w	ip, ip, #119	; 0x77
   828c6:	ea4f 014c 	mov.w	r1, ip, lsl #1
   828ca:	e605      	b.n	824d8 <_malloc_r+0x90>
   828cc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   828d0:	e6ee      	b.n	826b0 <_malloc_r+0x268>
   828d2:	2301      	movs	r3, #1
   828d4:	f8c8 3004 	str.w	r3, [r8, #4]
   828d8:	4644      	mov	r4, r8
   828da:	2200      	movs	r2, #0
   828dc:	e72e      	b.n	8273c <_malloc_r+0x2f4>
   828de:	1092      	asrs	r2, r2, #2
   828e0:	2001      	movs	r0, #1
   828e2:	4090      	lsls	r0, r2
   828e4:	f8d8 2004 	ldr.w	r2, [r8, #4]
   828e8:	4619      	mov	r1, r3
   828ea:	4302      	orrs	r2, r0
   828ec:	f8c8 2004 	str.w	r2, [r8, #4]
   828f0:	e775      	b.n	827de <_malloc_r+0x396>
   828f2:	f240 5354 	movw	r3, #1364	; 0x554
   828f6:	459c      	cmp	ip, r3
   828f8:	d81b      	bhi.n	82932 <_malloc_r+0x4ea>
   828fa:	ea4f 4c95 	mov.w	ip, r5, lsr #18
   828fe:	f10c 0c7c 	add.w	ip, ip, #124	; 0x7c
   82902:	ea4f 014c 	mov.w	r1, ip, lsl #1
   82906:	e5e7      	b.n	824d8 <_malloc_r+0x90>
   82908:	f10a 0a10 	add.w	sl, sl, #16
   8290c:	e6a3      	b.n	82656 <_malloc_r+0x20e>
   8290e:	2b54      	cmp	r3, #84	; 0x54
   82910:	d81f      	bhi.n	82952 <_malloc_r+0x50a>
   82912:	0b0a      	lsrs	r2, r1, #12
   82914:	326e      	adds	r2, #110	; 0x6e
   82916:	0050      	lsls	r0, r2, #1
   82918:	e74f      	b.n	827ba <_malloc_r+0x372>
   8291a:	f3cb 010b 	ubfx	r1, fp, #0, #12
   8291e:	2900      	cmp	r1, #0
   82920:	f47f aeb1 	bne.w	82686 <_malloc_r+0x23e>
   82924:	eb0a 0109 	add.w	r1, sl, r9
   82928:	68ba      	ldr	r2, [r7, #8]
   8292a:	f041 0101 	orr.w	r1, r1, #1
   8292e:	6051      	str	r1, [r2, #4]
   82930:	e6f6      	b.n	82720 <_malloc_r+0x2d8>
   82932:	21fc      	movs	r1, #252	; 0xfc
   82934:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
   82938:	e5ce      	b.n	824d8 <_malloc_r+0x90>
   8293a:	2201      	movs	r2, #1
   8293c:	f04f 0a00 	mov.w	sl, #0
   82940:	e6cb      	b.n	826da <_malloc_r+0x292>
   82942:	f104 0108 	add.w	r1, r4, #8
   82946:	4630      	mov	r0, r6
   82948:	f7ff fc16 	bl	82178 <_free_r>
   8294c:	f8da 3000 	ldr.w	r3, [sl]
   82950:	e6e6      	b.n	82720 <_malloc_r+0x2d8>
   82952:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   82956:	d803      	bhi.n	82960 <_malloc_r+0x518>
   82958:	0bca      	lsrs	r2, r1, #15
   8295a:	3277      	adds	r2, #119	; 0x77
   8295c:	0050      	lsls	r0, r2, #1
   8295e:	e72c      	b.n	827ba <_malloc_r+0x372>
   82960:	f240 5254 	movw	r2, #1364	; 0x554
   82964:	4293      	cmp	r3, r2
   82966:	d803      	bhi.n	82970 <_malloc_r+0x528>
   82968:	0c8a      	lsrs	r2, r1, #18
   8296a:	327c      	adds	r2, #124	; 0x7c
   8296c:	0050      	lsls	r0, r2, #1
   8296e:	e724      	b.n	827ba <_malloc_r+0x372>
   82970:	20fc      	movs	r0, #252	; 0xfc
   82972:	227e      	movs	r2, #126	; 0x7e
   82974:	e721      	b.n	827ba <_malloc_r+0x372>
   82976:	687b      	ldr	r3, [r7, #4]
   82978:	e78d      	b.n	82896 <_malloc_r+0x44e>
   8297a:	bf00      	nop
   8297c:	20070564 	.word	0x20070564

00082980 <__malloc_lock>:
   82980:	4770      	bx	lr
   82982:	bf00      	nop

00082984 <__malloc_unlock>:
   82984:	4770      	bx	lr
   82986:	bf00      	nop

00082988 <_sbrk_r>:
   82988:	b538      	push	{r3, r4, r5, lr}
   8298a:	4c07      	ldr	r4, [pc, #28]	; (829a8 <_sbrk_r+0x20>)
   8298c:	2300      	movs	r3, #0
   8298e:	4605      	mov	r5, r0
   82990:	4608      	mov	r0, r1
   82992:	6023      	str	r3, [r4, #0]
   82994:	f7ff f856 	bl	81a44 <_sbrk>
   82998:	1c43      	adds	r3, r0, #1
   8299a:	d000      	beq.n	8299e <_sbrk_r+0x16>
   8299c:	bd38      	pop	{r3, r4, r5, pc}
   8299e:	6823      	ldr	r3, [r4, #0]
   829a0:	2b00      	cmp	r3, #0
   829a2:	d0fb      	beq.n	8299c <_sbrk_r+0x14>
   829a4:	602b      	str	r3, [r5, #0]
   829a6:	bd38      	pop	{r3, r4, r5, pc}
   829a8:	20070b78 	.word	0x20070b78

000829ac <__sread>:
   829ac:	b510      	push	{r4, lr}
   829ae:	460c      	mov	r4, r1
   829b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   829b4:	f000 f938 	bl	82c28 <_read_r>
   829b8:	2800      	cmp	r0, #0
   829ba:	db03      	blt.n	829c4 <__sread+0x18>
   829bc:	6d23      	ldr	r3, [r4, #80]	; 0x50
   829be:	4403      	add	r3, r0
   829c0:	6523      	str	r3, [r4, #80]	; 0x50
   829c2:	bd10      	pop	{r4, pc}
   829c4:	89a3      	ldrh	r3, [r4, #12]
   829c6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   829ca:	81a3      	strh	r3, [r4, #12]
   829cc:	bd10      	pop	{r4, pc}
   829ce:	bf00      	nop

000829d0 <__swrite>:
   829d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   829d4:	460c      	mov	r4, r1
   829d6:	8989      	ldrh	r1, [r1, #12]
   829d8:	461d      	mov	r5, r3
   829da:	05cb      	lsls	r3, r1, #23
   829dc:	4616      	mov	r6, r2
   829de:	4607      	mov	r7, r0
   829e0:	d506      	bpl.n	829f0 <__swrite+0x20>
   829e2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   829e6:	2200      	movs	r2, #0
   829e8:	2302      	movs	r3, #2
   829ea:	f000 f909 	bl	82c00 <_lseek_r>
   829ee:	89a1      	ldrh	r1, [r4, #12]
   829f0:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
   829f4:	81a1      	strh	r1, [r4, #12]
   829f6:	4638      	mov	r0, r7
   829f8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   829fc:	4632      	mov	r2, r6
   829fe:	462b      	mov	r3, r5
   82a00:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   82a04:	f000 b814 	b.w	82a30 <_write_r>

00082a08 <__sseek>:
   82a08:	b510      	push	{r4, lr}
   82a0a:	460c      	mov	r4, r1
   82a0c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   82a10:	f000 f8f6 	bl	82c00 <_lseek_r>
   82a14:	89a3      	ldrh	r3, [r4, #12]
   82a16:	1c42      	adds	r2, r0, #1
   82a18:	bf0e      	itee	eq
   82a1a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   82a1e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   82a22:	6520      	strne	r0, [r4, #80]	; 0x50
   82a24:	81a3      	strh	r3, [r4, #12]
   82a26:	bd10      	pop	{r4, pc}

00082a28 <__sclose>:
   82a28:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   82a2c:	f000 b868 	b.w	82b00 <_close_r>

00082a30 <_write_r>:
   82a30:	b570      	push	{r4, r5, r6, lr}
   82a32:	4c08      	ldr	r4, [pc, #32]	; (82a54 <_write_r+0x24>)
   82a34:	4606      	mov	r6, r0
   82a36:	2500      	movs	r5, #0
   82a38:	4608      	mov	r0, r1
   82a3a:	4611      	mov	r1, r2
   82a3c:	461a      	mov	r2, r3
   82a3e:	6025      	str	r5, [r4, #0]
   82a40:	f7fd fe2a 	bl	80698 <_write>
   82a44:	1c43      	adds	r3, r0, #1
   82a46:	d000      	beq.n	82a4a <_write_r+0x1a>
   82a48:	bd70      	pop	{r4, r5, r6, pc}
   82a4a:	6823      	ldr	r3, [r4, #0]
   82a4c:	2b00      	cmp	r3, #0
   82a4e:	d0fb      	beq.n	82a48 <_write_r+0x18>
   82a50:	6033      	str	r3, [r6, #0]
   82a52:	bd70      	pop	{r4, r5, r6, pc}
   82a54:	20070b78 	.word	0x20070b78

00082a58 <__register_exitproc>:
   82a58:	b5f0      	push	{r4, r5, r6, r7, lr}
   82a5a:	4c27      	ldr	r4, [pc, #156]	; (82af8 <__register_exitproc+0xa0>)
   82a5c:	b085      	sub	sp, #20
   82a5e:	6826      	ldr	r6, [r4, #0]
   82a60:	4607      	mov	r7, r0
   82a62:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
   82a66:	2c00      	cmp	r4, #0
   82a68:	d040      	beq.n	82aec <__register_exitproc+0x94>
   82a6a:	6865      	ldr	r5, [r4, #4]
   82a6c:	2d1f      	cmp	r5, #31
   82a6e:	dd1e      	ble.n	82aae <__register_exitproc+0x56>
   82a70:	4822      	ldr	r0, [pc, #136]	; (82afc <__register_exitproc+0xa4>)
   82a72:	b918      	cbnz	r0, 82a7c <__register_exitproc+0x24>
   82a74:	f04f 30ff 	mov.w	r0, #4294967295
   82a78:	b005      	add	sp, #20
   82a7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   82a7c:	f44f 70c8 	mov.w	r0, #400	; 0x190
   82a80:	9103      	str	r1, [sp, #12]
   82a82:	9202      	str	r2, [sp, #8]
   82a84:	9301      	str	r3, [sp, #4]
   82a86:	f7ff fcd7 	bl	82438 <malloc>
   82a8a:	9903      	ldr	r1, [sp, #12]
   82a8c:	4604      	mov	r4, r0
   82a8e:	9a02      	ldr	r2, [sp, #8]
   82a90:	9b01      	ldr	r3, [sp, #4]
   82a92:	2800      	cmp	r0, #0
   82a94:	d0ee      	beq.n	82a74 <__register_exitproc+0x1c>
   82a96:	f8d6 5148 	ldr.w	r5, [r6, #328]	; 0x148
   82a9a:	2000      	movs	r0, #0
   82a9c:	6025      	str	r5, [r4, #0]
   82a9e:	6060      	str	r0, [r4, #4]
   82aa0:	4605      	mov	r5, r0
   82aa2:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   82aa6:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
   82aaa:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
   82aae:	b93f      	cbnz	r7, 82ac0 <__register_exitproc+0x68>
   82ab0:	1c6b      	adds	r3, r5, #1
   82ab2:	2000      	movs	r0, #0
   82ab4:	3502      	adds	r5, #2
   82ab6:	6063      	str	r3, [r4, #4]
   82ab8:	f844 1025 	str.w	r1, [r4, r5, lsl #2]
   82abc:	b005      	add	sp, #20
   82abe:	bdf0      	pop	{r4, r5, r6, r7, pc}
   82ac0:	2601      	movs	r6, #1
   82ac2:	40ae      	lsls	r6, r5
   82ac4:	eb04 0085 	add.w	r0, r4, r5, lsl #2
   82ac8:	f8c0 2088 	str.w	r2, [r0, #136]	; 0x88
   82acc:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
   82ad0:	2f02      	cmp	r7, #2
   82ad2:	ea42 0206 	orr.w	r2, r2, r6
   82ad6:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
   82ada:	f8c0 3108 	str.w	r3, [r0, #264]	; 0x108
   82ade:	d1e7      	bne.n	82ab0 <__register_exitproc+0x58>
   82ae0:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
   82ae4:	431e      	orrs	r6, r3
   82ae6:	f8c4 618c 	str.w	r6, [r4, #396]	; 0x18c
   82aea:	e7e1      	b.n	82ab0 <__register_exitproc+0x58>
   82aec:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
   82af0:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   82af4:	e7b9      	b.n	82a6a <__register_exitproc+0x12>
   82af6:	bf00      	nop
   82af8:	00082ecc 	.word	0x00082ecc
   82afc:	00082439 	.word	0x00082439

00082b00 <_close_r>:
   82b00:	b538      	push	{r3, r4, r5, lr}
   82b02:	4c07      	ldr	r4, [pc, #28]	; (82b20 <_close_r+0x20>)
   82b04:	2300      	movs	r3, #0
   82b06:	4605      	mov	r5, r0
   82b08:	4608      	mov	r0, r1
   82b0a:	6023      	str	r3, [r4, #0]
   82b0c:	f7fe ffb4 	bl	81a78 <_close>
   82b10:	1c43      	adds	r3, r0, #1
   82b12:	d000      	beq.n	82b16 <_close_r+0x16>
   82b14:	bd38      	pop	{r3, r4, r5, pc}
   82b16:	6823      	ldr	r3, [r4, #0]
   82b18:	2b00      	cmp	r3, #0
   82b1a:	d0fb      	beq.n	82b14 <_close_r+0x14>
   82b1c:	602b      	str	r3, [r5, #0]
   82b1e:	bd38      	pop	{r3, r4, r5, pc}
   82b20:	20070b78 	.word	0x20070b78

00082b24 <_fclose_r>:
   82b24:	b570      	push	{r4, r5, r6, lr}
   82b26:	460c      	mov	r4, r1
   82b28:	4605      	mov	r5, r0
   82b2a:	b131      	cbz	r1, 82b3a <_fclose_r+0x16>
   82b2c:	b110      	cbz	r0, 82b34 <_fclose_r+0x10>
   82b2e:	6b83      	ldr	r3, [r0, #56]	; 0x38
   82b30:	2b00      	cmp	r3, #0
   82b32:	d02f      	beq.n	82b94 <_fclose_r+0x70>
   82b34:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   82b38:	b90b      	cbnz	r3, 82b3e <_fclose_r+0x1a>
   82b3a:	2000      	movs	r0, #0
   82b3c:	bd70      	pop	{r4, r5, r6, pc}
   82b3e:	4628      	mov	r0, r5
   82b40:	4621      	mov	r1, r4
   82b42:	f7ff fa19 	bl	81f78 <_fflush_r>
   82b46:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   82b48:	4606      	mov	r6, r0
   82b4a:	b133      	cbz	r3, 82b5a <_fclose_r+0x36>
   82b4c:	4628      	mov	r0, r5
   82b4e:	69e1      	ldr	r1, [r4, #28]
   82b50:	4798      	blx	r3
   82b52:	2800      	cmp	r0, #0
   82b54:	bfb8      	it	lt
   82b56:	f04f 36ff 	movlt.w	r6, #4294967295
   82b5a:	89a3      	ldrh	r3, [r4, #12]
   82b5c:	061b      	lsls	r3, r3, #24
   82b5e:	d41c      	bmi.n	82b9a <_fclose_r+0x76>
   82b60:	6b21      	ldr	r1, [r4, #48]	; 0x30
   82b62:	b141      	cbz	r1, 82b76 <_fclose_r+0x52>
   82b64:	f104 0340 	add.w	r3, r4, #64	; 0x40
   82b68:	4299      	cmp	r1, r3
   82b6a:	d002      	beq.n	82b72 <_fclose_r+0x4e>
   82b6c:	4628      	mov	r0, r5
   82b6e:	f7ff fb03 	bl	82178 <_free_r>
   82b72:	2300      	movs	r3, #0
   82b74:	6323      	str	r3, [r4, #48]	; 0x30
   82b76:	6c61      	ldr	r1, [r4, #68]	; 0x44
   82b78:	b121      	cbz	r1, 82b84 <_fclose_r+0x60>
   82b7a:	4628      	mov	r0, r5
   82b7c:	f7ff fafc 	bl	82178 <_free_r>
   82b80:	2300      	movs	r3, #0
   82b82:	6463      	str	r3, [r4, #68]	; 0x44
   82b84:	f7ff fa8e 	bl	820a4 <__sfp_lock_acquire>
   82b88:	2300      	movs	r3, #0
   82b8a:	81a3      	strh	r3, [r4, #12]
   82b8c:	f7ff fa8c 	bl	820a8 <__sfp_lock_release>
   82b90:	4630      	mov	r0, r6
   82b92:	bd70      	pop	{r4, r5, r6, pc}
   82b94:	f7ff fa0c 	bl	81fb0 <__sinit>
   82b98:	e7cc      	b.n	82b34 <_fclose_r+0x10>
   82b9a:	4628      	mov	r0, r5
   82b9c:	6921      	ldr	r1, [r4, #16]
   82b9e:	f7ff faeb 	bl	82178 <_free_r>
   82ba2:	e7dd      	b.n	82b60 <_fclose_r+0x3c>

00082ba4 <fclose>:
   82ba4:	4b02      	ldr	r3, [pc, #8]	; (82bb0 <fclose+0xc>)
   82ba6:	4601      	mov	r1, r0
   82ba8:	6818      	ldr	r0, [r3, #0]
   82baa:	f7ff bfbb 	b.w	82b24 <_fclose_r>
   82bae:	bf00      	nop
   82bb0:	20070560 	.word	0x20070560

00082bb4 <_fstat_r>:
   82bb4:	b538      	push	{r3, r4, r5, lr}
   82bb6:	4c08      	ldr	r4, [pc, #32]	; (82bd8 <_fstat_r+0x24>)
   82bb8:	2300      	movs	r3, #0
   82bba:	4605      	mov	r5, r0
   82bbc:	4608      	mov	r0, r1
   82bbe:	4611      	mov	r1, r2
   82bc0:	6023      	str	r3, [r4, #0]
   82bc2:	f7fe ff5d 	bl	81a80 <_fstat>
   82bc6:	1c43      	adds	r3, r0, #1
   82bc8:	d000      	beq.n	82bcc <_fstat_r+0x18>
   82bca:	bd38      	pop	{r3, r4, r5, pc}
   82bcc:	6823      	ldr	r3, [r4, #0]
   82bce:	2b00      	cmp	r3, #0
   82bd0:	d0fb      	beq.n	82bca <_fstat_r+0x16>
   82bd2:	602b      	str	r3, [r5, #0]
   82bd4:	bd38      	pop	{r3, r4, r5, pc}
   82bd6:	bf00      	nop
   82bd8:	20070b78 	.word	0x20070b78

00082bdc <_isatty_r>:
   82bdc:	b538      	push	{r3, r4, r5, lr}
   82bde:	4c07      	ldr	r4, [pc, #28]	; (82bfc <_isatty_r+0x20>)
   82be0:	2300      	movs	r3, #0
   82be2:	4605      	mov	r5, r0
   82be4:	4608      	mov	r0, r1
   82be6:	6023      	str	r3, [r4, #0]
   82be8:	f7fe ff50 	bl	81a8c <_isatty>
   82bec:	1c43      	adds	r3, r0, #1
   82bee:	d000      	beq.n	82bf2 <_isatty_r+0x16>
   82bf0:	bd38      	pop	{r3, r4, r5, pc}
   82bf2:	6823      	ldr	r3, [r4, #0]
   82bf4:	2b00      	cmp	r3, #0
   82bf6:	d0fb      	beq.n	82bf0 <_isatty_r+0x14>
   82bf8:	602b      	str	r3, [r5, #0]
   82bfa:	bd38      	pop	{r3, r4, r5, pc}
   82bfc:	20070b78 	.word	0x20070b78

00082c00 <_lseek_r>:
   82c00:	b570      	push	{r4, r5, r6, lr}
   82c02:	4c08      	ldr	r4, [pc, #32]	; (82c24 <_lseek_r+0x24>)
   82c04:	4606      	mov	r6, r0
   82c06:	2500      	movs	r5, #0
   82c08:	4608      	mov	r0, r1
   82c0a:	4611      	mov	r1, r2
   82c0c:	461a      	mov	r2, r3
   82c0e:	6025      	str	r5, [r4, #0]
   82c10:	f7fe ff3e 	bl	81a90 <_lseek>
   82c14:	1c43      	adds	r3, r0, #1
   82c16:	d000      	beq.n	82c1a <_lseek_r+0x1a>
   82c18:	bd70      	pop	{r4, r5, r6, pc}
   82c1a:	6823      	ldr	r3, [r4, #0]
   82c1c:	2b00      	cmp	r3, #0
   82c1e:	d0fb      	beq.n	82c18 <_lseek_r+0x18>
   82c20:	6033      	str	r3, [r6, #0]
   82c22:	bd70      	pop	{r4, r5, r6, pc}
   82c24:	20070b78 	.word	0x20070b78

00082c28 <_read_r>:
   82c28:	b570      	push	{r4, r5, r6, lr}
   82c2a:	4c08      	ldr	r4, [pc, #32]	; (82c4c <_read_r+0x24>)
   82c2c:	4606      	mov	r6, r0
   82c2e:	2500      	movs	r5, #0
   82c30:	4608      	mov	r0, r1
   82c32:	4611      	mov	r1, r2
   82c34:	461a      	mov	r2, r3
   82c36:	6025      	str	r5, [r4, #0]
   82c38:	f7fd fa86 	bl	80148 <_read>
   82c3c:	1c43      	adds	r3, r0, #1
   82c3e:	d000      	beq.n	82c42 <_read_r+0x1a>
   82c40:	bd70      	pop	{r4, r5, r6, pc}
   82c42:	6823      	ldr	r3, [r4, #0]
   82c44:	2b00      	cmp	r3, #0
   82c46:	d0fb      	beq.n	82c40 <_read_r+0x18>
   82c48:	6033      	str	r3, [r6, #0]
   82c4a:	bd70      	pop	{r4, r5, r6, pc}
   82c4c:	20070b78 	.word	0x20070b78
   82c50:	70784520 	.word	0x70784520
   82c54:	65746365 	.word	0x65746365
   82c58:	52542064 	.word	0x52542064
   82c5c:	57204555 	.word	0x57204555
   82c60:	46207361 	.word	0x46207361
   82c64:	45534c41 	.word	0x45534c41
   82c68:	00000000 	.word	0x00000000
   82c6c:	742f2e2e 	.word	0x742f2e2e
   82c70:	2f747365 	.word	0x2f747365
   82c74:	74736574 	.word	0x74736574
   82c78:	6174735f 	.word	0x6174735f
   82c7c:	614d6574 	.word	0x614d6574
   82c80:	6e696863 	.word	0x6e696863
   82c84:	00632e65 	.word	0x00632e65
   82c88:	74736574 	.word	0x74736574
   82c8c:	6174735f 	.word	0x6174735f
   82c90:	614d6574 	.word	0x614d6574
   82c94:	6e696863 	.word	0x6e696863
   82c98:	61745365 	.word	0x61745365
   82c9c:	49737472 	.word	0x49737472
   82ca0:	636f4c6e 	.word	0x636f4c6e
   82ca4:	5364656b 	.word	0x5364656b
   82ca8:	65746174 	.word	0x65746174
   82cac:	00000000 	.word	0x00000000
   82cb0:	74736574 	.word	0x74736574
   82cb4:	6174735f 	.word	0x6174735f
   82cb8:	6f476574 	.word	0x6f476574
   82cbc:	6f547365 	.word	0x6f547365
   82cc0:	68737550 	.word	0x68737550
   82cc4:	57656e4f 	.word	0x57656e4f
   82cc8:	466e6568 	.word	0x466e6568
   82ccc:	74737269 	.word	0x74737269
   82cd0:	72726f43 	.word	0x72726f43
   82cd4:	42746365 	.word	0x42746365
   82cd8:	6f747475 	.word	0x6f747475
   82cdc:	5073496e 	.word	0x5073496e
   82ce0:	73736572 	.word	0x73736572
   82ce4:	00006465 	.word	0x00006465
   82ce8:	74736574 	.word	0x74736574
   82cec:	6174735f 	.word	0x6174735f
   82cf0:	6f476574 	.word	0x6f476574
   82cf4:	6f547365 	.word	0x6f547365
   82cf8:	6b636f4c 	.word	0x6b636f4c
   82cfc:	68576465 	.word	0x68576465
   82d00:	69466e65 	.word	0x69466e65
   82d04:	49747372 	.word	0x49747372
   82d08:	726f636e 	.word	0x726f636e
   82d0c:	74636572 	.word	0x74636572
   82d10:	74747542 	.word	0x74747542
   82d14:	73496e6f 	.word	0x73496e6f
   82d18:	73657250 	.word	0x73657250
   82d1c:	00646573 	.word	0x00646573
   82d20:	74736574 	.word	0x74736574
   82d24:	6174735f 	.word	0x6174735f
   82d28:	6f476574 	.word	0x6f476574
   82d2c:	6f547365 	.word	0x6f547365
   82d30:	68737550 	.word	0x68737550
   82d34:	576f7754 	.word	0x576f7754
   82d38:	536e6568 	.word	0x536e6568
   82d3c:	6e6f6365 	.word	0x6e6f6365
   82d40:	726f4364 	.word	0x726f4364
   82d44:	74636572 	.word	0x74636572
   82d48:	74747542 	.word	0x74747542
   82d4c:	73496e6f 	.word	0x73496e6f
   82d50:	73657250 	.word	0x73657250
   82d54:	00646573 	.word	0x00646573
   82d58:	74736574 	.word	0x74736574
   82d5c:	6174735f 	.word	0x6174735f
   82d60:	6f476574 	.word	0x6f476574
   82d64:	6f547365 	.word	0x6f547365
   82d68:	6b636f4c 	.word	0x6b636f4c
   82d6c:	68576465 	.word	0x68576465
   82d70:	65536e65 	.word	0x65536e65
   82d74:	646e6f63 	.word	0x646e6f63
   82d78:	6f636e49 	.word	0x6f636e49
   82d7c:	63657272 	.word	0x63657272
   82d80:	74754274 	.word	0x74754274
   82d84:	496e6f74 	.word	0x496e6f74
   82d88:	65725073 	.word	0x65725073
   82d8c:	64657373 	.word	0x64657373
   82d90:	00000000 	.word	0x00000000
   82d94:	74736574 	.word	0x74736574
   82d98:	6174735f 	.word	0x6174735f
   82d9c:	6f476574 	.word	0x6f476574
   82da0:	6f547365 	.word	0x6f547365
   82da4:	68737550 	.word	0x68737550
   82da8:	65726854 	.word	0x65726854
   82dac:	65685765 	.word	0x65685765
   82db0:	6968546e 	.word	0x6968546e
   82db4:	6f436472 	.word	0x6f436472
   82db8:	63657272 	.word	0x63657272
   82dbc:	74754274 	.word	0x74754274
   82dc0:	496e6f74 	.word	0x496e6f74
   82dc4:	65725073 	.word	0x65725073
   82dc8:	64657373 	.word	0x64657373
   82dcc:	00000000 	.word	0x00000000
   82dd0:	74736574 	.word	0x74736574
   82dd4:	6174735f 	.word	0x6174735f
   82dd8:	6f476574 	.word	0x6f476574
   82ddc:	6f547365 	.word	0x6f547365
   82de0:	6b636f4c 	.word	0x6b636f4c
   82de4:	68576465 	.word	0x68576465
   82de8:	68546e65 	.word	0x68546e65
   82dec:	49647269 	.word	0x49647269
   82df0:	726f636e 	.word	0x726f636e
   82df4:	74636572 	.word	0x74636572
   82df8:	74747542 	.word	0x74747542
   82dfc:	73496e6f 	.word	0x73496e6f
   82e00:	73657250 	.word	0x73657250
   82e04:	00646573 	.word	0x00646573
   82e08:	74736574 	.word	0x74736574
   82e0c:	6174735f 	.word	0x6174735f
   82e10:	6f476574 	.word	0x6f476574
   82e14:	6f547365 	.word	0x6f547365
   82e18:	6e65704f 	.word	0x6e65704f
   82e1c:	6e656857 	.word	0x6e656857
   82e20:	72756f46 	.word	0x72756f46
   82e24:	6f436874 	.word	0x6f436874
   82e28:	63657272 	.word	0x63657272
   82e2c:	74754274 	.word	0x74754274
   82e30:	496e6f74 	.word	0x496e6f74
   82e34:	65725073 	.word	0x65725073
   82e38:	64657373 	.word	0x64657373
   82e3c:	00000000 	.word	0x00000000
   82e40:	74736574 	.word	0x74736574
   82e44:	6174735f 	.word	0x6174735f
   82e48:	6f476574 	.word	0x6f476574
   82e4c:	6f547365 	.word	0x6f547365
   82e50:	6b636f4c 	.word	0x6b636f4c
   82e54:	68576465 	.word	0x68576465
   82e58:	6f466e65 	.word	0x6f466e65
   82e5c:	68747275 	.word	0x68747275
   82e60:	6f636e49 	.word	0x6f636e49
   82e64:	63657272 	.word	0x63657272
   82e68:	74754274 	.word	0x74754274
   82e6c:	496e6f74 	.word	0x496e6f74
   82e70:	65725073 	.word	0x65725073
   82e74:	64657373 	.word	0x64657373
   82e78:	00000000 	.word	0x00000000

00082e7c <UnityStrOk>:
   82e7c:	00004b4f                                OK..

00082e80 <UnityStrFail>:
   82e80:	4c494146 00000000                       FAIL....

00082e88 <UnityStrBreaker>:
   82e88:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   82e98:	2d2d2d2d 002d2d2d                       -------.

00082ea0 <UnityStrResultsFailures>:
   82ea0:	69614620 6572756c 00002073               Failures ..

00082eac <UnityStrResultsIgnored>:
   82eac:	6e674920 6465726f 00000020               Ignored ...

00082eb8 <UnityStrResultsTests>:
   82eb8:	73655420 00207374                        Tests .

00082ec0 <UnityStrPass>:
   82ec0:	53534150 00000000 00000043              PASS....C...

00082ecc <_global_impure_ptr>:
   82ecc:	20070138                                8.. 

00082ed0 <_init>:
   82ed0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   82ed2:	bf00      	nop
   82ed4:	bcf8      	pop	{r3, r4, r5, r6, r7}
   82ed6:	bc08      	pop	{r3}
   82ed8:	469e      	mov	lr, r3
   82eda:	4770      	bx	lr

00082edc <__init_array_start>:
   82edc:	00081e11 	.word	0x00081e11

00082ee0 <__frame_dummy_init_array_entry>:
   82ee0:	00080119                                ....

00082ee4 <_fini>:
   82ee4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   82ee6:	bf00      	nop
   82ee8:	bcf8      	pop	{r3, r4, r5, r6, r7}
   82eea:	bc08      	pop	{r3}
   82eec:	469e      	mov	lr, r3
   82eee:	4770      	bx	lr

00082ef0 <__fini_array_start>:
   82ef0:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <SystemInit>:
20070000:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070004:	4a20      	ldr	r2, [pc, #128]	; (20070088 <SystemInit+0x88>)
20070006:	6013      	str	r3, [r2, #0]
20070008:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007000c:	6013      	str	r3, [r2, #0]
2007000e:	4b1f      	ldr	r3, [pc, #124]	; (2007008c <SystemInit+0x8c>)
20070010:	6a1b      	ldr	r3, [r3, #32]
20070012:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070016:	d107      	bne.n	20070028 <SystemInit+0x28>
20070018:	4a1d      	ldr	r2, [pc, #116]	; (20070090 <SystemInit+0x90>)
2007001a:	4b1c      	ldr	r3, [pc, #112]	; (2007008c <SystemInit+0x8c>)
2007001c:	621a      	str	r2, [r3, #32]
2007001e:	461a      	mov	r2, r3
20070020:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070022:	f013 0f01 	tst.w	r3, #1
20070026:	d0fb      	beq.n	20070020 <SystemInit+0x20>
20070028:	4a1a      	ldr	r2, [pc, #104]	; (20070094 <SystemInit+0x94>)
2007002a:	4b18      	ldr	r3, [pc, #96]	; (2007008c <SystemInit+0x8c>)
2007002c:	621a      	str	r2, [r3, #32]
2007002e:	461a      	mov	r2, r3
20070030:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070032:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070036:	d0fb      	beq.n	20070030 <SystemInit+0x30>
20070038:	4b14      	ldr	r3, [pc, #80]	; (2007008c <SystemInit+0x8c>)
2007003a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
2007003c:	f022 0203 	bic.w	r2, r2, #3
20070040:	f042 0201 	orr.w	r2, r2, #1
20070044:	631a      	str	r2, [r3, #48]	; 0x30
20070046:	461a      	mov	r2, r3
20070048:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007004a:	f013 0f08 	tst.w	r3, #8
2007004e:	d0fb      	beq.n	20070048 <SystemInit+0x48>
20070050:	4a11      	ldr	r2, [pc, #68]	; (20070098 <SystemInit+0x98>)
20070052:	4b0e      	ldr	r3, [pc, #56]	; (2007008c <SystemInit+0x8c>)
20070054:	629a      	str	r2, [r3, #40]	; 0x28
20070056:	461a      	mov	r2, r3
20070058:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007005a:	f013 0f02 	tst.w	r3, #2
2007005e:	d0fb      	beq.n	20070058 <SystemInit+0x58>
20070060:	2211      	movs	r2, #17
20070062:	4b0a      	ldr	r3, [pc, #40]	; (2007008c <SystemInit+0x8c>)
20070064:	631a      	str	r2, [r3, #48]	; 0x30
20070066:	461a      	mov	r2, r3
20070068:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007006a:	f013 0f08 	tst.w	r3, #8
2007006e:	d0fb      	beq.n	20070068 <SystemInit+0x68>
20070070:	2212      	movs	r2, #18
20070072:	4b06      	ldr	r3, [pc, #24]	; (2007008c <SystemInit+0x8c>)
20070074:	631a      	str	r2, [r3, #48]	; 0x30
20070076:	461a      	mov	r2, r3
20070078:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007007a:	f013 0f08 	tst.w	r3, #8
2007007e:	d0fb      	beq.n	20070078 <SystemInit+0x78>
20070080:	4a06      	ldr	r2, [pc, #24]	; (2007009c <SystemInit+0x9c>)
20070082:	4b07      	ldr	r3, [pc, #28]	; (200700a0 <SystemInit+0xa0>)
20070084:	601a      	str	r2, [r3, #0]
20070086:	4770      	bx	lr
20070088:	400e0a00 	.word	0x400e0a00
2007008c:	400e0600 	.word	0x400e0600
20070090:	00370809 	.word	0x00370809
20070094:	01370809 	.word	0x01370809
20070098:	200d3f01 	.word	0x200d3f01
2007009c:	0501bd00 	.word	0x0501bd00
200700a0:	20070130 	.word	0x20070130

200700a4 <system_init_flash>:
200700a4:	4b1b      	ldr	r3, [pc, #108]	; (20070114 <system_init_flash+0x70>)
200700a6:	4298      	cmp	r0, r3
200700a8:	d806      	bhi.n	200700b8 <system_init_flash+0x14>
200700aa:	2300      	movs	r3, #0
200700ac:	4a1a      	ldr	r2, [pc, #104]	; (20070118 <system_init_flash+0x74>)
200700ae:	6013      	str	r3, [r2, #0]
200700b0:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700b4:	6013      	str	r3, [r2, #0]
200700b6:	4770      	bx	lr
200700b8:	4b18      	ldr	r3, [pc, #96]	; (2007011c <system_init_flash+0x78>)
200700ba:	4298      	cmp	r0, r3
200700bc:	d807      	bhi.n	200700ce <system_init_flash+0x2a>
200700be:	f44f 7380 	mov.w	r3, #256	; 0x100
200700c2:	4a15      	ldr	r2, [pc, #84]	; (20070118 <system_init_flash+0x74>)
200700c4:	6013      	str	r3, [r2, #0]
200700c6:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ca:	6013      	str	r3, [r2, #0]
200700cc:	4770      	bx	lr
200700ce:	4b14      	ldr	r3, [pc, #80]	; (20070120 <system_init_flash+0x7c>)
200700d0:	4298      	cmp	r0, r3
200700d2:	d807      	bhi.n	200700e4 <system_init_flash+0x40>
200700d4:	f44f 7300 	mov.w	r3, #512	; 0x200
200700d8:	4a0f      	ldr	r2, [pc, #60]	; (20070118 <system_init_flash+0x74>)
200700da:	6013      	str	r3, [r2, #0]
200700dc:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700e0:	6013      	str	r3, [r2, #0]
200700e2:	4770      	bx	lr
200700e4:	4b0f      	ldr	r3, [pc, #60]	; (20070124 <system_init_flash+0x80>)
200700e6:	4298      	cmp	r0, r3
200700e8:	d807      	bhi.n	200700fa <system_init_flash+0x56>
200700ea:	f44f 7340 	mov.w	r3, #768	; 0x300
200700ee:	4a0a      	ldr	r2, [pc, #40]	; (20070118 <system_init_flash+0x74>)
200700f0:	6013      	str	r3, [r2, #0]
200700f2:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700f6:	6013      	str	r3, [r2, #0]
200700f8:	4770      	bx	lr
200700fa:	4b0b      	ldr	r3, [pc, #44]	; (20070128 <system_init_flash+0x84>)
200700fc:	4298      	cmp	r0, r3
200700fe:	bf94      	ite	ls
20070100:	f44f 6380 	movls.w	r3, #1024	; 0x400
20070104:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
20070108:	4a03      	ldr	r2, [pc, #12]	; (20070118 <system_init_flash+0x74>)
2007010a:	6013      	str	r3, [r2, #0]
2007010c:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070110:	6013      	str	r3, [r2, #0]
20070112:	4770      	bx	lr
20070114:	0121eabf 	.word	0x0121eabf
20070118:	400e0a00 	.word	0x400e0a00
2007011c:	02faf07f 	.word	0x02faf07f
20070120:	03d08fff 	.word	0x03d08fff
20070124:	04c4b3ff 	.word	0x04c4b3ff
20070128:	055d4a7f 	.word	0x055d4a7f

2007012c <g_interrupt_enabled>:
2007012c:	00000001                                ....

20070130 <SystemCoreClock>:
20070130:	003d0900 00000000                       ..=.....

20070138 <impure_data>:
20070138:	00000000 20070424 2007048c 200704f4     ....$.. ... ... 
	...
2007016c:	00082ec8 00000000 00000000 00000000     ................
	...
200701e0:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200701f0:	0005deec 0000000b 00000000 00000000     ................
	...

20070560 <_impure_ptr>:
20070560:	20070138                                8.. 

20070564 <__malloc_av_>:
	...
2007056c:	20070564 20070564 2007056c 2007056c     d.. d.. l.. l.. 
2007057c:	20070574 20070574 2007057c 2007057c     t.. t.. |.. |.. 
2007058c:	20070584 20070584 2007058c 2007058c     ... ... ... ... 
2007059c:	20070594 20070594 2007059c 2007059c     ... ... ... ... 
200705ac:	200705a4 200705a4 200705ac 200705ac     ... ... ... ... 
200705bc:	200705b4 200705b4 200705bc 200705bc     ... ... ... ... 
200705cc:	200705c4 200705c4 200705cc 200705cc     ... ... ... ... 
200705dc:	200705d4 200705d4 200705dc 200705dc     ... ... ... ... 
200705ec:	200705e4 200705e4 200705ec 200705ec     ... ... ... ... 
200705fc:	200705f4 200705f4 200705fc 200705fc     ... ... ... ... 
2007060c:	20070604 20070604 2007060c 2007060c     ... ... ... ... 
2007061c:	20070614 20070614 2007061c 2007061c     ... ... ... ... 
2007062c:	20070624 20070624 2007062c 2007062c     $.. $.. ,.. ,.. 
2007063c:	20070634 20070634 2007063c 2007063c     4.. 4.. <.. <.. 
2007064c:	20070644 20070644 2007064c 2007064c     D.. D.. L.. L.. 
2007065c:	20070654 20070654 2007065c 2007065c     T.. T.. \.. \.. 
2007066c:	20070664 20070664 2007066c 2007066c     d.. d.. l.. l.. 
2007067c:	20070674 20070674 2007067c 2007067c     t.. t.. |.. |.. 
2007068c:	20070684 20070684 2007068c 2007068c     ... ... ... ... 
2007069c:	20070694 20070694 2007069c 2007069c     ... ... ... ... 
200706ac:	200706a4 200706a4 200706ac 200706ac     ... ... ... ... 
200706bc:	200706b4 200706b4 200706bc 200706bc     ... ... ... ... 
200706cc:	200706c4 200706c4 200706cc 200706cc     ... ... ... ... 
200706dc:	200706d4 200706d4 200706dc 200706dc     ... ... ... ... 
200706ec:	200706e4 200706e4 200706ec 200706ec     ... ... ... ... 
200706fc:	200706f4 200706f4 200706fc 200706fc     ... ... ... ... 
2007070c:	20070704 20070704 2007070c 2007070c     ... ... ... ... 
2007071c:	20070714 20070714 2007071c 2007071c     ... ... ... ... 
2007072c:	20070724 20070724 2007072c 2007072c     $.. $.. ,.. ,.. 
2007073c:	20070734 20070734 2007073c 2007073c     4.. 4.. <.. <.. 
2007074c:	20070744 20070744 2007074c 2007074c     D.. D.. L.. L.. 
2007075c:	20070754 20070754 2007075c 2007075c     T.. T.. \.. \.. 
2007076c:	20070764 20070764 2007076c 2007076c     d.. d.. l.. l.. 
2007077c:	20070774 20070774 2007077c 2007077c     t.. t.. |.. |.. 
2007078c:	20070784 20070784 2007078c 2007078c     ... ... ... ... 
2007079c:	20070794 20070794 2007079c 2007079c     ... ... ... ... 
200707ac:	200707a4 200707a4 200707ac 200707ac     ... ... ... ... 
200707bc:	200707b4 200707b4 200707bc 200707bc     ... ... ... ... 
200707cc:	200707c4 200707c4 200707cc 200707cc     ... ... ... ... 
200707dc:	200707d4 200707d4 200707dc 200707dc     ... ... ... ... 
200707ec:	200707e4 200707e4 200707ec 200707ec     ... ... ... ... 
200707fc:	200707f4 200707f4 200707fc 200707fc     ... ... ... ... 
2007080c:	20070804 20070804 2007080c 2007080c     ... ... ... ... 
2007081c:	20070814 20070814 2007081c 2007081c     ... ... ... ... 
2007082c:	20070824 20070824 2007082c 2007082c     $.. $.. ,.. ,.. 
2007083c:	20070834 20070834 2007083c 2007083c     4.. 4.. <.. <.. 
2007084c:	20070844 20070844 2007084c 2007084c     D.. D.. L.. L.. 
2007085c:	20070854 20070854 2007085c 2007085c     T.. T.. \.. \.. 
2007086c:	20070864 20070864 2007086c 2007086c     d.. d.. l.. l.. 
2007087c:	20070874 20070874 2007087c 2007087c     t.. t.. |.. |.. 
2007088c:	20070884 20070884 2007088c 2007088c     ... ... ... ... 
2007089c:	20070894 20070894 2007089c 2007089c     ... ... ... ... 
200708ac:	200708a4 200708a4 200708ac 200708ac     ... ... ... ... 
200708bc:	200708b4 200708b4 200708bc 200708bc     ... ... ... ... 
200708cc:	200708c4 200708c4 200708cc 200708cc     ... ... ... ... 
200708dc:	200708d4 200708d4 200708dc 200708dc     ... ... ... ... 
200708ec:	200708e4 200708e4 200708ec 200708ec     ... ... ... ... 
200708fc:	200708f4 200708f4 200708fc 200708fc     ... ... ... ... 
2007090c:	20070904 20070904 2007090c 2007090c     ... ... ... ... 
2007091c:	20070914 20070914 2007091c 2007091c     ... ... ... ... 
2007092c:	20070924 20070924 2007092c 2007092c     $.. $.. ,.. ,.. 
2007093c:	20070934 20070934 2007093c 2007093c     4.. 4.. <.. <.. 
2007094c:	20070944 20070944 2007094c 2007094c     D.. D.. L.. L.. 
2007095c:	20070954 20070954 2007095c 2007095c     T.. T.. \.. \.. 

2007096c <__malloc_trim_threshold>:
2007096c:	00020000                                ....

20070970 <__malloc_sbrk_base>:
20070970:	ffffffff                                ....
